define(['dart_sdk', 'packages/flutter/src/painting/strut_style.dart', 'packages/google_fonts/src/google_fonts_variant.dart', 'packages/google_fonts/src/google_fonts_family_with_variant.dart', 'packages/google_fonts/src/google_fonts_descriptor.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/google_fonts/src/file_io.dart', 'packages/flutter/src/services/font_loader.dart', 'packages/crypto/src/sha256.dart', 'packages/http/src/multipart_request.dart', 'packages/google_fonts/src/asset_manifest.dart', 'packages/flutter/src/material/typography.dart', 'packages/flutter/src/material/icon_button.dart'], (function load__packages__google_fonts__src__google_fonts_base_dart(dart_sdk, packages__flutter__src__painting__strut_style$46dart, packages__google_fonts__src__google_fonts_variant$46dart, packages__google_fonts__src__google_fonts_family_with_variant$46dart, packages__google_fonts__src__google_fonts_descriptor$46dart, packages__flutter__src__services__system_channels$46dart, packages__google_fonts__src__file_io$46dart, packages__flutter__src__services__font_loader$46dart, packages__crypto__src__sha256$46dart, packages__http__src__multipart_request$46dart, packages__google_fonts__src__asset_manifest$46dart, packages__flutter__src__material__typography$46dart, packages__flutter__src__material__icon_button$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const typed_data = dart_sdk.typed_data;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const google_fonts_variant = packages__google_fonts__src__google_fonts_variant$46dart.src__google_fonts_variant;
  const google_fonts_family_with_variant = packages__google_fonts__src__google_fonts_family_with_variant$46dart.src__google_fonts_family_with_variant;
  const google_fonts_descriptor = packages__google_fonts__src__google_fonts_descriptor$46dart.src__google_fonts_descriptor;
  const asset_bundle = packages__flutter__src__services__system_channels$46dart.src__services__asset_bundle;
  const file_io = packages__google_fonts__src__file_io$46dart.src__file_io;
  const font_loader = packages__flutter__src__services__font_loader$46dart.src__services__font_loader;
  const sha256 = packages__crypto__src__sha256$46dart.src__sha256;
  const client = packages__http__src__multipart_request$46dart.src__client;
  const asset_manifest = packages__google_fonts__src__asset_manifest$46dart.src__asset_manifest;
  const text_theme = packages__flutter__src__material__typography$46dart.src__material__text_theme;
  const theme_data = packages__flutter__src__material__icon_button$46dart.src__material__theme_data;
  var google_fonts_base = Object.create(dart.library);
  var google_fonts = Object.create(dart.library);
  var $keys = dartx.keys;
  var $_get = dartx._get;
  var $buffer = dartx.buffer;
  var $abs = dartx.abs;
  var $values = dartx.values;
  var $endsWith = dartx.endsWith;
  var $where = dartx.where;
  var $substring = dartx.substring;
  var $length = dartx.length;
  var $containsKey = dartx.containsKey;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    FutureOfByteData: () => (T.FutureOfByteData = dart.constFn(async.Future$(typed_data.ByteData)))(),
    VoidToGoogleFontsVariant: () => (T.VoidToGoogleFontsVariant = dart.constFn(dart.fnType(google_fonts_variant.GoogleFontsVariant, [])))(),
    GoogleFontsVariantTodynamic: () => (T.GoogleFontsVariantTodynamic = dart.constFn(dart.fnType(dart.dynamic, [google_fonts_variant.GoogleFontsVariant])))(),
    LinkedHashSetOfString: () => (T.LinkedHashSetOfString = dart.constFn(collection.LinkedHashSet$(core.String)))(),
    PaintN: () => (T.PaintN = dart.constFn(dart.nullable(ui.Paint)))(),
    ColorN: () => (T.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    TextDecorationN: () => (T.TextDecorationN = dart.constFn(dart.nullable(ui.TextDecoration)))(),
    TextDecorationStyleN: () => (T.TextDecorationStyleN = dart.constFn(dart.nullable(ui.TextDecorationStyle)))(),
    doubleN: () => (T.doubleN = dart.constFn(dart.nullable(core.double)))(),
    ListOfFontFeature: () => (T.ListOfFontFeature = dart.constFn(core.List$(ui.FontFeature)))(),
    ListNOfFontFeature: () => (T.ListNOfFontFeature = dart.constFn(dart.nullable(T.ListOfFontFeature())))(),
    FontStyleN: () => (T.FontStyleN = dart.constFn(dart.nullable(ui.FontStyle)))(),
    FontWeightN: () => (T.FontWeightN = dart.constFn(dart.nullable(ui.FontWeight)))(),
    LocaleN: () => (T.LocaleN = dart.constFn(dart.nullable(ui.Locale)))(),
    ListOfShadow: () => (T.ListOfShadow = dart.constFn(core.List$(ui.Shadow)))(),
    ListNOfShadow: () => (T.ListNOfShadow = dart.constFn(dart.nullable(T.ListOfShadow())))(),
    TextBaselineN: () => (T.TextBaselineN = dart.constFn(dart.nullable(ui.TextBaseline)))(),
    TextStyleN: () => (T.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    __ToTextStyle: () => (T.__ToTextStyle = dart.constFn(dart.fnType(text_style.TextStyle, [], {background: T.PaintN(), backgroundColor: T.ColorN(), color: T.ColorN(), decoration: T.TextDecorationN(), decorationColor: T.ColorN(), decorationStyle: T.TextDecorationStyleN(), decorationThickness: T.doubleN(), fontFeatures: T.ListNOfFontFeature(), fontSize: T.doubleN(), fontStyle: T.FontStyleN(), fontWeight: T.FontWeightN(), foreground: T.PaintN(), height: T.doubleN(), letterSpacing: T.doubleN(), locale: T.LocaleN(), shadows: T.ListNOfShadow(), textBaseline: T.TextBaselineN(), textStyle: T.TextStyleN(), wordSpacing: T.doubleN()}, {})))(),
    StringL: () => (T.StringL = dart.constFn(dart.legacy(core.String)))(),
    TextStyleL: () => (T.TextStyleL = dart.constFn(dart.legacy(text_style.TextStyle)))(),
    FontFeatureL: () => (T.FontFeatureL = dart.constFn(dart.legacy(ui.FontFeature)))(),
    ListOfFontFeatureL: () => (T.ListOfFontFeatureL = dart.constFn(core.List$(T.FontFeatureL())))(),
    ListNOfFontFeatureL: () => (T.ListNOfFontFeatureL = dart.constFn(dart.nullable(T.ListOfFontFeatureL())))(),
    ShadowL: () => (T.ShadowL = dart.constFn(dart.legacy(ui.Shadow)))(),
    ListOfShadowL: () => (T.ListOfShadowL = dart.constFn(core.List$(T.ShadowL())))(),
    ListNOfShadowL: () => (T.ListNOfShadowL = dart.constFn(dart.nullable(T.ListOfShadowL())))(),
    __ToTextStyleL: () => (T.__ToTextStyleL = dart.constFn(dart.fnType(T.TextStyleL(), [], {background: T.PaintN(), backgroundColor: T.ColorN(), color: T.ColorN(), decoration: T.TextDecorationN(), decorationColor: T.ColorN(), decorationStyle: T.TextDecorationStyleN(), decorationThickness: T.doubleN(), fontFeatures: T.ListNOfFontFeatureL(), fontSize: T.doubleN(), fontStyle: T.FontStyleN(), fontWeight: T.FontWeightN(), foreground: T.PaintN(), height: T.doubleN(), letterSpacing: T.doubleN(), locale: T.LocaleN(), shadows: T.ListNOfShadowL(), textBaseline: T.TextBaselineN(), textStyle: T.TextStyleN(), wordSpacing: T.doubleN()}, {})))(),
    __ToLTextStyleL: () => (T.__ToLTextStyleL = dart.constFn(dart.legacy(T.__ToTextStyleL())))(),
    TextThemeN: () => (T.TextThemeN = dart.constFn(dart.nullable(text_theme.TextTheme)))(),
    TextThemeNToTextTheme: () => (T.TextThemeNToTextTheme = dart.constFn(dart.fnType(text_theme.TextTheme, [], [T.TextThemeN()])))(),
    TextThemeL: () => (T.TextThemeL = dart.constFn(dart.legacy(text_theme.TextTheme)))(),
    TextThemeNToTextThemeL: () => (T.TextThemeNToTextThemeL = dart.constFn(dart.fnType(T.TextThemeL(), [], [T.TextThemeN()])))(),
    TextThemeNToLTextThemeL: () => (T.TextThemeNToLTextThemeL = dart.constFn(dart.legacy(T.TextThemeNToTextThemeL())))(),
    LinkedMapOfGoogleFontsVariant$GoogleFontsFile: () => (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile = dart.constFn(_js_helper.LinkedMap$(google_fonts_variant.GoogleFontsVariant, google_fonts_descriptor.GoogleFontsFile)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.fn(google_fonts.GoogleFonts.aBeeZee, T.__ToTextStyle());
    },
    get C2() {
      return C[2] = dart.fn(google_fonts.GoogleFonts.abel, T.__ToTextStyle());
    },
    get C3() {
      return C[3] = dart.fn(google_fonts.GoogleFonts.abhayaLibre, T.__ToTextStyle());
    },
    get C4() {
      return C[4] = dart.fn(google_fonts.GoogleFonts.abrilFatface, T.__ToTextStyle());
    },
    get C5() {
      return C[5] = dart.fn(google_fonts.GoogleFonts.aclonica, T.__ToTextStyle());
    },
    get C6() {
      return C[6] = dart.fn(google_fonts.GoogleFonts.acme, T.__ToTextStyle());
    },
    get C7() {
      return C[7] = dart.fn(google_fonts.GoogleFonts.actor, T.__ToTextStyle());
    },
    get C8() {
      return C[8] = dart.fn(google_fonts.GoogleFonts.adamina, T.__ToTextStyle());
    },
    get C9() {
      return C[9] = dart.fn(google_fonts.GoogleFonts.adventPro, T.__ToTextStyle());
    },
    get C10() {
      return C[10] = dart.fn(google_fonts.GoogleFonts.aguafinaScript, T.__ToTextStyle());
    },
    get C11() {
      return C[11] = dart.fn(google_fonts.GoogleFonts.akronim, T.__ToTextStyle());
    },
    get C12() {
      return C[12] = dart.fn(google_fonts.GoogleFonts.aladin, T.__ToTextStyle());
    },
    get C13() {
      return C[13] = dart.fn(google_fonts.GoogleFonts.alata, T.__ToTextStyle());
    },
    get C14() {
      return C[14] = dart.fn(google_fonts.GoogleFonts.alatsi, T.__ToTextStyle());
    },
    get C15() {
      return C[15] = dart.fn(google_fonts.GoogleFonts.aldrich, T.__ToTextStyle());
    },
    get C16() {
      return C[16] = dart.fn(google_fonts.GoogleFonts.alef, T.__ToTextStyle());
    },
    get C17() {
      return C[17] = dart.fn(google_fonts.GoogleFonts.alegreya, T.__ToTextStyle());
    },
    get C18() {
      return C[18] = dart.fn(google_fonts.GoogleFonts.alegreyaSc, T.__ToTextStyle());
    },
    get C19() {
      return C[19] = dart.fn(google_fonts.GoogleFonts.alegreyaSans, T.__ToTextStyle());
    },
    get C20() {
      return C[20] = dart.fn(google_fonts.GoogleFonts.alegreyaSansSc, T.__ToTextStyle());
    },
    get C21() {
      return C[21] = dart.fn(google_fonts.GoogleFonts.aleo, T.__ToTextStyle());
    },
    get C22() {
      return C[22] = dart.fn(google_fonts.GoogleFonts.alexBrush, T.__ToTextStyle());
    },
    get C23() {
      return C[23] = dart.fn(google_fonts.GoogleFonts.alfaSlabOne, T.__ToTextStyle());
    },
    get C24() {
      return C[24] = dart.fn(google_fonts.GoogleFonts.alice, T.__ToTextStyle());
    },
    get C25() {
      return C[25] = dart.fn(google_fonts.GoogleFonts.alike, T.__ToTextStyle());
    },
    get C26() {
      return C[26] = dart.fn(google_fonts.GoogleFonts.alikeAngular, T.__ToTextStyle());
    },
    get C27() {
      return C[27] = dart.fn(google_fonts.GoogleFonts.allan, T.__ToTextStyle());
    },
    get C28() {
      return C[28] = dart.fn(google_fonts.GoogleFonts.allerta, T.__ToTextStyle());
    },
    get C29() {
      return C[29] = dart.fn(google_fonts.GoogleFonts.allertaStencil, T.__ToTextStyle());
    },
    get C30() {
      return C[30] = dart.fn(google_fonts.GoogleFonts.allura, T.__ToTextStyle());
    },
    get C31() {
      return C[31] = dart.fn(google_fonts.GoogleFonts.almarai, T.__ToTextStyle());
    },
    get C32() {
      return C[32] = dart.fn(google_fonts.GoogleFonts.almendra, T.__ToTextStyle());
    },
    get C33() {
      return C[33] = dart.fn(google_fonts.GoogleFonts.almendraDisplay, T.__ToTextStyle());
    },
    get C34() {
      return C[34] = dart.fn(google_fonts.GoogleFonts.almendraSc, T.__ToTextStyle());
    },
    get C35() {
      return C[35] = dart.fn(google_fonts.GoogleFonts.amarante, T.__ToTextStyle());
    },
    get C36() {
      return C[36] = dart.fn(google_fonts.GoogleFonts.amaranth, T.__ToTextStyle());
    },
    get C37() {
      return C[37] = dart.fn(google_fonts.GoogleFonts.amaticSc, T.__ToTextStyle());
    },
    get C38() {
      return C[38] = dart.fn(google_fonts.GoogleFonts.amaticaSc, T.__ToTextStyle());
    },
    get C39() {
      return C[39] = dart.fn(google_fonts.GoogleFonts.amethysta, T.__ToTextStyle());
    },
    get C40() {
      return C[40] = dart.fn(google_fonts.GoogleFonts.amiko, T.__ToTextStyle());
    },
    get C41() {
      return C[41] = dart.fn(google_fonts.GoogleFonts.amiri, T.__ToTextStyle());
    },
    get C42() {
      return C[42] = dart.fn(google_fonts.GoogleFonts.amita, T.__ToTextStyle());
    },
    get C43() {
      return C[43] = dart.fn(google_fonts.GoogleFonts.anaheim, T.__ToTextStyle());
    },
    get C44() {
      return C[44] = dart.fn(google_fonts.GoogleFonts.andada, T.__ToTextStyle());
    },
    get C45() {
      return C[45] = dart.fn(google_fonts.GoogleFonts.andika, T.__ToTextStyle());
    },
    get C46() {
      return C[46] = dart.fn(google_fonts.GoogleFonts.andikaNewBasic, T.__ToTextStyle());
    },
    get C47() {
      return C[47] = dart.fn(google_fonts.GoogleFonts.annieUseYourTelescope, T.__ToTextStyle());
    },
    get C48() {
      return C[48] = dart.fn(google_fonts.GoogleFonts.anonymousPro, T.__ToTextStyle());
    },
    get C49() {
      return C[49] = dart.fn(google_fonts.GoogleFonts.antic, T.__ToTextStyle());
    },
    get C50() {
      return C[50] = dart.fn(google_fonts.GoogleFonts.anticDidone, T.__ToTextStyle());
    },
    get C51() {
      return C[51] = dart.fn(google_fonts.GoogleFonts.anticSlab, T.__ToTextStyle());
    },
    get C52() {
      return C[52] = dart.fn(google_fonts.GoogleFonts.anton, T.__ToTextStyle());
    },
    get C53() {
      return C[53] = dart.fn(google_fonts.GoogleFonts.arapey, T.__ToTextStyle());
    },
    get C54() {
      return C[54] = dart.fn(google_fonts.GoogleFonts.arbutus, T.__ToTextStyle());
    },
    get C55() {
      return C[55] = dart.fn(google_fonts.GoogleFonts.arbutusSlab, T.__ToTextStyle());
    },
    get C56() {
      return C[56] = dart.fn(google_fonts.GoogleFonts.architectsDaughter, T.__ToTextStyle());
    },
    get C57() {
      return C[57] = dart.fn(google_fonts.GoogleFonts.archivo, T.__ToTextStyle());
    },
    get C58() {
      return C[58] = dart.fn(google_fonts.GoogleFonts.archivoBlack, T.__ToTextStyle());
    },
    get C59() {
      return C[59] = dart.fn(google_fonts.GoogleFonts.archivoNarrow, T.__ToTextStyle());
    },
    get C60() {
      return C[60] = dart.fn(google_fonts.GoogleFonts.arefRuqaa, T.__ToTextStyle());
    },
    get C61() {
      return C[61] = dart.fn(google_fonts.GoogleFonts.arimaMadurai, T.__ToTextStyle());
    },
    get C62() {
      return C[62] = dart.fn(google_fonts.GoogleFonts.arimo, T.__ToTextStyle());
    },
    get C63() {
      return C[63] = dart.fn(google_fonts.GoogleFonts.arizonia, T.__ToTextStyle());
    },
    get C64() {
      return C[64] = dart.fn(google_fonts.GoogleFonts.armata, T.__ToTextStyle());
    },
    get C65() {
      return C[65] = dart.fn(google_fonts.GoogleFonts.arsenal, T.__ToTextStyle());
    },
    get C66() {
      return C[66] = dart.fn(google_fonts.GoogleFonts.artifika, T.__ToTextStyle());
    },
    get C67() {
      return C[67] = dart.fn(google_fonts.GoogleFonts.arvo, T.__ToTextStyle());
    },
    get C68() {
      return C[68] = dart.fn(google_fonts.GoogleFonts.arya, T.__ToTextStyle());
    },
    get C69() {
      return C[69] = dart.fn(google_fonts.GoogleFonts.asap, T.__ToTextStyle());
    },
    get C70() {
      return C[70] = dart.fn(google_fonts.GoogleFonts.asar, T.__ToTextStyle());
    },
    get C71() {
      return C[71] = dart.fn(google_fonts.GoogleFonts.asset, T.__ToTextStyle());
    },
    get C72() {
      return C[72] = dart.fn(google_fonts.GoogleFonts.assistant, T.__ToTextStyle());
    },
    get C73() {
      return C[73] = dart.fn(google_fonts.GoogleFonts.astloch, T.__ToTextStyle());
    },
    get C74() {
      return C[74] = dart.fn(google_fonts.GoogleFonts.asul, T.__ToTextStyle());
    },
    get C75() {
      return C[75] = dart.fn(google_fonts.GoogleFonts.athiti, T.__ToTextStyle());
    },
    get C76() {
      return C[76] = dart.fn(google_fonts.GoogleFonts.atma, T.__ToTextStyle());
    },
    get C77() {
      return C[77] = dart.fn(google_fonts.GoogleFonts.atomicAge, T.__ToTextStyle());
    },
    get C78() {
      return C[78] = dart.fn(google_fonts.GoogleFonts.aubrey, T.__ToTextStyle());
    },
    get C79() {
      return C[79] = dart.fn(google_fonts.GoogleFonts.audiowide, T.__ToTextStyle());
    },
    get C80() {
      return C[80] = dart.fn(google_fonts.GoogleFonts.autourOne, T.__ToTextStyle());
    },
    get C81() {
      return C[81] = dart.fn(google_fonts.GoogleFonts.average, T.__ToTextStyle());
    },
    get C82() {
      return C[82] = dart.fn(google_fonts.GoogleFonts.averageSans, T.__ToTextStyle());
    },
    get C83() {
      return C[83] = dart.fn(google_fonts.GoogleFonts.averiaGruesaLibre, T.__ToTextStyle());
    },
    get C84() {
      return C[84] = dart.fn(google_fonts.GoogleFonts.averiaLibre, T.__ToTextStyle());
    },
    get C85() {
      return C[85] = dart.fn(google_fonts.GoogleFonts.averiaSansLibre, T.__ToTextStyle());
    },
    get C86() {
      return C[86] = dart.fn(google_fonts.GoogleFonts.averiaSerifLibre, T.__ToTextStyle());
    },
    get C87() {
      return C[87] = dart.fn(google_fonts.GoogleFonts.b612, T.__ToTextStyle());
    },
    get C88() {
      return C[88] = dart.fn(google_fonts.GoogleFonts.b612Mono, T.__ToTextStyle());
    },
    get C89() {
      return C[89] = dart.fn(google_fonts.GoogleFonts.badScript, T.__ToTextStyle());
    },
    get C90() {
      return C[90] = dart.fn(google_fonts.GoogleFonts.bahiana, T.__ToTextStyle());
    },
    get C91() {
      return C[91] = dart.fn(google_fonts.GoogleFonts.bahianita, T.__ToTextStyle());
    },
    get C92() {
      return C[92] = dart.fn(google_fonts.GoogleFonts.baiJamjuree, T.__ToTextStyle());
    },
    get C93() {
      return C[93] = dart.fn(google_fonts.GoogleFonts.baloo, T.__ToTextStyle());
    },
    get C94() {
      return C[94] = dart.fn(google_fonts.GoogleFonts.balooBhai, T.__ToTextStyle());
    },
    get C95() {
      return C[95] = dart.fn(google_fonts.GoogleFonts.balooBhaijaan, T.__ToTextStyle());
    },
    get C96() {
      return C[96] = dart.fn(google_fonts.GoogleFonts.balooBhaina, T.__ToTextStyle());
    },
    get C97() {
      return C[97] = dart.fn(google_fonts.GoogleFonts.balooChettan, T.__ToTextStyle());
    },
    get C98() {
      return C[98] = dart.fn(google_fonts.GoogleFonts.balooDa, T.__ToTextStyle());
    },
    get C99() {
      return C[99] = dart.fn(google_fonts.GoogleFonts.balooPaaji, T.__ToTextStyle());
    },
    get C100() {
      return C[100] = dart.fn(google_fonts.GoogleFonts.balooTamma, T.__ToTextStyle());
    },
    get C101() {
      return C[101] = dart.fn(google_fonts.GoogleFonts.balooTammudu, T.__ToTextStyle());
    },
    get C102() {
      return C[102] = dart.fn(google_fonts.GoogleFonts.balooThambi, T.__ToTextStyle());
    },
    get C103() {
      return C[103] = dart.fn(google_fonts.GoogleFonts.balsamiqSans, T.__ToTextStyle());
    },
    get C104() {
      return C[104] = dart.fn(google_fonts.GoogleFonts.balthazar, T.__ToTextStyle());
    },
    get C105() {
      return C[105] = dart.fn(google_fonts.GoogleFonts.bangers, T.__ToTextStyle());
    },
    get C106() {
      return C[106] = dart.fn(google_fonts.GoogleFonts.barlow, T.__ToTextStyle());
    },
    get C107() {
      return C[107] = dart.fn(google_fonts.GoogleFonts.barlowCondensed, T.__ToTextStyle());
    },
    get C108() {
      return C[108] = dart.fn(google_fonts.GoogleFonts.barlowSemiCondensed, T.__ToTextStyle());
    },
    get C109() {
      return C[109] = dart.fn(google_fonts.GoogleFonts.barriecito, T.__ToTextStyle());
    },
    get C110() {
      return C[110] = dart.fn(google_fonts.GoogleFonts.barrio, T.__ToTextStyle());
    },
    get C111() {
      return C[111] = dart.fn(google_fonts.GoogleFonts.basic, T.__ToTextStyle());
    },
    get C112() {
      return C[112] = dart.fn(google_fonts.GoogleFonts.baskervville, T.__ToTextStyle());
    },
    get C113() {
      return C[113] = dart.fn(google_fonts.GoogleFonts.baumans, T.__ToTextStyle());
    },
    get C114() {
      return C[114] = dart.fn(google_fonts.GoogleFonts.beVietnam, T.__ToTextStyle());
    },
    get C115() {
      return C[115] = dart.fn(google_fonts.GoogleFonts.bebasNeue, T.__ToTextStyle());
    },
    get C116() {
      return C[116] = dart.fn(google_fonts.GoogleFonts.belgrano, T.__ToTextStyle());
    },
    get C117() {
      return C[117] = dart.fn(google_fonts.GoogleFonts.bellefair, T.__ToTextStyle());
    },
    get C118() {
      return C[118] = dart.fn(google_fonts.GoogleFonts.belleza, T.__ToTextStyle());
    },
    get C119() {
      return C[119] = dart.fn(google_fonts.GoogleFonts.bellota, T.__ToTextStyle());
    },
    get C120() {
      return C[120] = dart.fn(google_fonts.GoogleFonts.bellotaText, T.__ToTextStyle());
    },
    get C121() {
      return C[121] = dart.fn(google_fonts.GoogleFonts.benchNine, T.__ToTextStyle());
    },
    get C122() {
      return C[122] = dart.fn(google_fonts.GoogleFonts.bentham, T.__ToTextStyle());
    },
    get C123() {
      return C[123] = dart.fn(google_fonts.GoogleFonts.berkshireSwash, T.__ToTextStyle());
    },
    get C124() {
      return C[124] = dart.fn(google_fonts.GoogleFonts.bethEllen, T.__ToTextStyle());
    },
    get C125() {
      return C[125] = dart.fn(google_fonts.GoogleFonts.bevan, T.__ToTextStyle());
    },
    get C126() {
      return C[126] = dart.fn(google_fonts.GoogleFonts.bigShouldersDisplay, T.__ToTextStyle());
    },
    get C127() {
      return C[127] = dart.fn(google_fonts.GoogleFonts.bigShouldersInlineDisplay, T.__ToTextStyle());
    },
    get C128() {
      return C[128] = dart.fn(google_fonts.GoogleFonts.bigShouldersInlineText, T.__ToTextStyle());
    },
    get C129() {
      return C[129] = dart.fn(google_fonts.GoogleFonts.bigShouldersStencilDisplay, T.__ToTextStyle());
    },
    get C130() {
      return C[130] = dart.fn(google_fonts.GoogleFonts.bigShouldersStencilText, T.__ToTextStyle());
    },
    get C131() {
      return C[131] = dart.fn(google_fonts.GoogleFonts.bigShouldersText, T.__ToTextStyle());
    },
    get C132() {
      return C[132] = dart.fn(google_fonts.GoogleFonts.bigelowRules, T.__ToTextStyle());
    },
    get C133() {
      return C[133] = dart.fn(google_fonts.GoogleFonts.bigshotOne, T.__ToTextStyle());
    },
    get C134() {
      return C[134] = dart.fn(google_fonts.GoogleFonts.bilbo, T.__ToTextStyle());
    },
    get C135() {
      return C[135] = dart.fn(google_fonts.GoogleFonts.bilboSwashCaps, T.__ToTextStyle());
    },
    get C136() {
      return C[136] = dart.fn(google_fonts.GoogleFonts.bioRhyme, T.__ToTextStyle());
    },
    get C137() {
      return C[137] = dart.fn(google_fonts.GoogleFonts.bioRhymeExpanded, T.__ToTextStyle());
    },
    get C138() {
      return C[138] = dart.fn(google_fonts.GoogleFonts.biryani, T.__ToTextStyle());
    },
    get C139() {
      return C[139] = dart.fn(google_fonts.GoogleFonts.bitter, T.__ToTextStyle());
    },
    get C140() {
      return C[140] = dart.fn(google_fonts.GoogleFonts.blackAndWhitePicture, T.__ToTextStyle());
    },
    get C141() {
      return C[141] = dart.fn(google_fonts.GoogleFonts.blackHanSans, T.__ToTextStyle());
    },
    get C142() {
      return C[142] = dart.fn(google_fonts.GoogleFonts.blackOpsOne, T.__ToTextStyle());
    },
    get C143() {
      return C[143] = dart.fn(google_fonts.GoogleFonts.blinker, T.__ToTextStyle());
    },
    get C144() {
      return C[144] = dart.fn(google_fonts.GoogleFonts.bonbon, T.__ToTextStyle());
    },
    get C145() {
      return C[145] = dart.fn(google_fonts.GoogleFonts.boogaloo, T.__ToTextStyle());
    },
    get C146() {
      return C[146] = dart.fn(google_fonts.GoogleFonts.bowlbyOne, T.__ToTextStyle());
    },
    get C147() {
      return C[147] = dart.fn(google_fonts.GoogleFonts.bowlbyOneSc, T.__ToTextStyle());
    },
    get C148() {
      return C[148] = dart.fn(google_fonts.GoogleFonts.brawler, T.__ToTextStyle());
    },
    get C149() {
      return C[149] = dart.fn(google_fonts.GoogleFonts.breeSerif, T.__ToTextStyle());
    },
    get C150() {
      return C[150] = dart.fn(google_fonts.GoogleFonts.bubblegumSans, T.__ToTextStyle());
    },
    get C151() {
      return C[151] = dart.fn(google_fonts.GoogleFonts.bubblerOne, T.__ToTextStyle());
    },
    get C152() {
      return C[152] = dart.fn(google_fonts.GoogleFonts.buda, T.__ToTextStyle());
    },
    get C153() {
      return C[153] = dart.fn(google_fonts.GoogleFonts.buenard, T.__ToTextStyle());
    },
    get C154() {
      return C[154] = dart.fn(google_fonts.GoogleFonts.bungee, T.__ToTextStyle());
    },
    get C155() {
      return C[155] = dart.fn(google_fonts.GoogleFonts.bungeeHairline, T.__ToTextStyle());
    },
    get C156() {
      return C[156] = dart.fn(google_fonts.GoogleFonts.bungeeInline, T.__ToTextStyle());
    },
    get C157() {
      return C[157] = dart.fn(google_fonts.GoogleFonts.bungeeOutline, T.__ToTextStyle());
    },
    get C158() {
      return C[158] = dart.fn(google_fonts.GoogleFonts.bungeeShade, T.__ToTextStyle());
    },
    get C159() {
      return C[159] = dart.fn(google_fonts.GoogleFonts.butcherman, T.__ToTextStyle());
    },
    get C160() {
      return C[160] = dart.fn(google_fonts.GoogleFonts.butterflyKids, T.__ToTextStyle());
    },
    get C161() {
      return C[161] = dart.fn(google_fonts.GoogleFonts.cabin, T.__ToTextStyle());
    },
    get C162() {
      return C[162] = dart.fn(google_fonts.GoogleFonts.cabinCondensed, T.__ToTextStyle());
    },
    get C163() {
      return C[163] = dart.fn(google_fonts.GoogleFonts.cabinSketch, T.__ToTextStyle());
    },
    get C164() {
      return C[164] = dart.fn(google_fonts.GoogleFonts.caesarDressing, T.__ToTextStyle());
    },
    get C165() {
      return C[165] = dart.fn(google_fonts.GoogleFonts.cagliostro, T.__ToTextStyle());
    },
    get C166() {
      return C[166] = dart.fn(google_fonts.GoogleFonts.cairo, T.__ToTextStyle());
    },
    get C167() {
      return C[167] = dart.fn(google_fonts.GoogleFonts.caladea, T.__ToTextStyle());
    },
    get C168() {
      return C[168] = dart.fn(google_fonts.GoogleFonts.calistoga, T.__ToTextStyle());
    },
    get C169() {
      return C[169] = dart.fn(google_fonts.GoogleFonts.calligraffitti, T.__ToTextStyle());
    },
    get C170() {
      return C[170] = dart.fn(google_fonts.GoogleFonts.cambay, T.__ToTextStyle());
    },
    get C171() {
      return C[171] = dart.fn(google_fonts.GoogleFonts.cambo, T.__ToTextStyle());
    },
    get C172() {
      return C[172] = dart.fn(google_fonts.GoogleFonts.candal, T.__ToTextStyle());
    },
    get C173() {
      return C[173] = dart.fn(google_fonts.GoogleFonts.cantarell, T.__ToTextStyle());
    },
    get C174() {
      return C[174] = dart.fn(google_fonts.GoogleFonts.cantataOne, T.__ToTextStyle());
    },
    get C175() {
      return C[175] = dart.fn(google_fonts.GoogleFonts.cantoraOne, T.__ToTextStyle());
    },
    get C176() {
      return C[176] = dart.fn(google_fonts.GoogleFonts.capriola, T.__ToTextStyle());
    },
    get C177() {
      return C[177] = dart.fn(google_fonts.GoogleFonts.cardo, T.__ToTextStyle());
    },
    get C178() {
      return C[178] = dart.fn(google_fonts.GoogleFonts.carme, T.__ToTextStyle());
    },
    get C179() {
      return C[179] = dart.fn(google_fonts.GoogleFonts.carroisGothic, T.__ToTextStyle());
    },
    get C180() {
      return C[180] = dart.fn(google_fonts.GoogleFonts.carroisGothicSc, T.__ToTextStyle());
    },
    get C181() {
      return C[181] = dart.fn(google_fonts.GoogleFonts.carterOne, T.__ToTextStyle());
    },
    get C182() {
      return C[182] = dart.fn(google_fonts.GoogleFonts.castoro, T.__ToTextStyle());
    },
    get C183() {
      return C[183] = dart.fn(google_fonts.GoogleFonts.catamaran, T.__ToTextStyle());
    },
    get C184() {
      return C[184] = dart.fn(google_fonts.GoogleFonts.caudex, T.__ToTextStyle());
    },
    get C185() {
      return C[185] = dart.fn(google_fonts.GoogleFonts.caveat, T.__ToTextStyle());
    },
    get C186() {
      return C[186] = dart.fn(google_fonts.GoogleFonts.caveatBrush, T.__ToTextStyle());
    },
    get C187() {
      return C[187] = dart.fn(google_fonts.GoogleFonts.cedarvilleCursive, T.__ToTextStyle());
    },
    get C188() {
      return C[188] = dart.fn(google_fonts.GoogleFonts.cevicheOne, T.__ToTextStyle());
    },
    get C189() {
      return C[189] = dart.fn(google_fonts.GoogleFonts.chakraPetch, T.__ToTextStyle());
    },
    get C190() {
      return C[190] = dart.fn(google_fonts.GoogleFonts.changa, T.__ToTextStyle());
    },
    get C191() {
      return C[191] = dart.fn(google_fonts.GoogleFonts.changaOne, T.__ToTextStyle());
    },
    get C192() {
      return C[192] = dart.fn(google_fonts.GoogleFonts.chango, T.__ToTextStyle());
    },
    get C193() {
      return C[193] = dart.fn(google_fonts.GoogleFonts.charm, T.__ToTextStyle());
    },
    get C194() {
      return C[194] = dart.fn(google_fonts.GoogleFonts.charmonman, T.__ToTextStyle());
    },
    get C195() {
      return C[195] = dart.fn(google_fonts.GoogleFonts.chathura, T.__ToTextStyle());
    },
    get C196() {
      return C[196] = dart.fn(google_fonts.GoogleFonts.chauPhilomeneOne, T.__ToTextStyle());
    },
    get C197() {
      return C[197] = dart.fn(google_fonts.GoogleFonts.chelaOne, T.__ToTextStyle());
    },
    get C198() {
      return C[198] = dart.fn(google_fonts.GoogleFonts.chelseaMarket, T.__ToTextStyle());
    },
    get C199() {
      return C[199] = dart.fn(google_fonts.GoogleFonts.cherryCreamSoda, T.__ToTextStyle());
    },
    get C200() {
      return C[200] = dart.fn(google_fonts.GoogleFonts.cherrySwash, T.__ToTextStyle());
    },
    get C201() {
      return C[201] = dart.fn(google_fonts.GoogleFonts.chewy, T.__ToTextStyle());
    },
    get C202() {
      return C[202] = dart.fn(google_fonts.GoogleFonts.chicle, T.__ToTextStyle());
    },
    get C203() {
      return C[203] = dart.fn(google_fonts.GoogleFonts.chilanka, T.__ToTextStyle());
    },
    get C204() {
      return C[204] = dart.fn(google_fonts.GoogleFonts.chivo, T.__ToTextStyle());
    },
    get C205() {
      return C[205] = dart.fn(google_fonts.GoogleFonts.chonburi, T.__ToTextStyle());
    },
    get C206() {
      return C[206] = dart.fn(google_fonts.GoogleFonts.cinzel, T.__ToTextStyle());
    },
    get C207() {
      return C[207] = dart.fn(google_fonts.GoogleFonts.cinzelDecorative, T.__ToTextStyle());
    },
    get C208() {
      return C[208] = dart.fn(google_fonts.GoogleFonts.clickerScript, T.__ToTextStyle());
    },
    get C209() {
      return C[209] = dart.fn(google_fonts.GoogleFonts.coda, T.__ToTextStyle());
    },
    get C210() {
      return C[210] = dart.fn(google_fonts.GoogleFonts.codaCaption, T.__ToTextStyle());
    },
    get C211() {
      return C[211] = dart.fn(google_fonts.GoogleFonts.codystar, T.__ToTextStyle());
    },
    get C212() {
      return C[212] = dart.fn(google_fonts.GoogleFonts.coiny, T.__ToTextStyle());
    },
    get C213() {
      return C[213] = dart.fn(google_fonts.GoogleFonts.combo, T.__ToTextStyle());
    },
    get C214() {
      return C[214] = dart.fn(google_fonts.GoogleFonts.comfortaa, T.__ToTextStyle());
    },
    get C215() {
      return C[215] = dart.fn(google_fonts.GoogleFonts.comicNeue, T.__ToTextStyle());
    },
    get C216() {
      return C[216] = dart.fn(google_fonts.GoogleFonts.comingSoon, T.__ToTextStyle());
    },
    get C217() {
      return C[217] = dart.fn(google_fonts.GoogleFonts.commissioner, T.__ToTextStyle());
    },
    get C218() {
      return C[218] = dart.fn(google_fonts.GoogleFonts.concertOne, T.__ToTextStyle());
    },
    get C219() {
      return C[219] = dart.fn(google_fonts.GoogleFonts.condiment, T.__ToTextStyle());
    },
    get C220() {
      return C[220] = dart.fn(google_fonts.GoogleFonts.contrailOne, T.__ToTextStyle());
    },
    get C221() {
      return C[221] = dart.fn(google_fonts.GoogleFonts.convergence, T.__ToTextStyle());
    },
    get C222() {
      return C[222] = dart.fn(google_fonts.GoogleFonts.cookie, T.__ToTextStyle());
    },
    get C223() {
      return C[223] = dart.fn(google_fonts.GoogleFonts.copse, T.__ToTextStyle());
    },
    get C224() {
      return C[224] = dart.fn(google_fonts.GoogleFonts.corben, T.__ToTextStyle());
    },
    get C225() {
      return C[225] = dart.fn(google_fonts.GoogleFonts.cormorant, T.__ToTextStyle());
    },
    get C226() {
      return C[226] = dart.fn(google_fonts.GoogleFonts.cormorantGaramond, T.__ToTextStyle());
    },
    get C227() {
      return C[227] = dart.fn(google_fonts.GoogleFonts.cormorantInfant, T.__ToTextStyle());
    },
    get C228() {
      return C[228] = dart.fn(google_fonts.GoogleFonts.cormorantSc, T.__ToTextStyle());
    },
    get C229() {
      return C[229] = dart.fn(google_fonts.GoogleFonts.cormorantUnicase, T.__ToTextStyle());
    },
    get C230() {
      return C[230] = dart.fn(google_fonts.GoogleFonts.cormorantUpright, T.__ToTextStyle());
    },
    get C231() {
      return C[231] = dart.fn(google_fonts.GoogleFonts.courgette, T.__ToTextStyle());
    },
    get C232() {
      return C[232] = dart.fn(google_fonts.GoogleFonts.courierPrime, T.__ToTextStyle());
    },
    get C233() {
      return C[233] = dart.fn(google_fonts.GoogleFonts.cousine, T.__ToTextStyle());
    },
    get C234() {
      return C[234] = dart.fn(google_fonts.GoogleFonts.coustard, T.__ToTextStyle());
    },
    get C235() {
      return C[235] = dart.fn(google_fonts.GoogleFonts.coveredByYourGrace, T.__ToTextStyle());
    },
    get C236() {
      return C[236] = dart.fn(google_fonts.GoogleFonts.craftyGirls, T.__ToTextStyle());
    },
    get C237() {
      return C[237] = dart.fn(google_fonts.GoogleFonts.creepster, T.__ToTextStyle());
    },
    get C238() {
      return C[238] = dart.fn(google_fonts.GoogleFonts.creteRound, T.__ToTextStyle());
    },
    get C239() {
      return C[239] = dart.fn(google_fonts.GoogleFonts.crimsonPro, T.__ToTextStyle());
    },
    get C240() {
      return C[240] = dart.fn(google_fonts.GoogleFonts.crimsonText, T.__ToTextStyle());
    },
    get C241() {
      return C[241] = dart.fn(google_fonts.GoogleFonts.croissantOne, T.__ToTextStyle());
    },
    get C242() {
      return C[242] = dart.fn(google_fonts.GoogleFonts.crushed, T.__ToTextStyle());
    },
    get C243() {
      return C[243] = dart.fn(google_fonts.GoogleFonts.cuprum, T.__ToTextStyle());
    },
    get C244() {
      return C[244] = dart.fn(google_fonts.GoogleFonts.cuteFont, T.__ToTextStyle());
    },
    get C245() {
      return C[245] = dart.fn(google_fonts.GoogleFonts.cutive, T.__ToTextStyle());
    },
    get C246() {
      return C[246] = dart.fn(google_fonts.GoogleFonts.cutiveMono, T.__ToTextStyle());
    },
    get C247() {
      return C[247] = dart.fn(google_fonts.GoogleFonts.dmMono, T.__ToTextStyle());
    },
    get C248() {
      return C[248] = dart.fn(google_fonts.GoogleFonts.dmSans, T.__ToTextStyle());
    },
    get C249() {
      return C[249] = dart.fn(google_fonts.GoogleFonts.dmSerifDisplay, T.__ToTextStyle());
    },
    get C250() {
      return C[250] = dart.fn(google_fonts.GoogleFonts.dmSerifText, T.__ToTextStyle());
    },
    get C251() {
      return C[251] = dart.fn(google_fonts.GoogleFonts.damion, T.__ToTextStyle());
    },
    get C252() {
      return C[252] = dart.fn(google_fonts.GoogleFonts.dancingScript, T.__ToTextStyle());
    },
    get C253() {
      return C[253] = dart.fn(google_fonts.GoogleFonts.darkerGrotesque, T.__ToTextStyle());
    },
    get C254() {
      return C[254] = dart.fn(google_fonts.GoogleFonts.davidLibre, T.__ToTextStyle());
    },
    get C255() {
      return C[255] = dart.fn(google_fonts.GoogleFonts.dawningOfANewDay, T.__ToTextStyle());
    },
    get C256() {
      return C[256] = dart.fn(google_fonts.GoogleFonts.daysOne, T.__ToTextStyle());
    },
    get C257() {
      return C[257] = dart.fn(google_fonts.GoogleFonts.dekko, T.__ToTextStyle());
    },
    get C258() {
      return C[258] = dart.fn(google_fonts.GoogleFonts.delius, T.__ToTextStyle());
    },
    get C259() {
      return C[259] = dart.fn(google_fonts.GoogleFonts.deliusSwashCaps, T.__ToTextStyle());
    },
    get C260() {
      return C[260] = dart.fn(google_fonts.GoogleFonts.deliusUnicase, T.__ToTextStyle());
    },
    get C261() {
      return C[261] = dart.fn(google_fonts.GoogleFonts.dellaRespira, T.__ToTextStyle());
    },
    get C262() {
      return C[262] = dart.fn(google_fonts.GoogleFonts.denkOne, T.__ToTextStyle());
    },
    get C263() {
      return C[263] = dart.fn(google_fonts.GoogleFonts.devonshire, T.__ToTextStyle());
    },
    get C264() {
      return C[264] = dart.fn(google_fonts.GoogleFonts.dhurjati, T.__ToTextStyle());
    },
    get C265() {
      return C[265] = dart.fn(google_fonts.GoogleFonts.didactGothic, T.__ToTextStyle());
    },
    get C266() {
      return C[266] = dart.fn(google_fonts.GoogleFonts.diplomata, T.__ToTextStyle());
    },
    get C267() {
      return C[267] = dart.fn(google_fonts.GoogleFonts.diplomataSc, T.__ToTextStyle());
    },
    get C268() {
      return C[268] = dart.fn(google_fonts.GoogleFonts.doHyeon, T.__ToTextStyle());
    },
    get C269() {
      return C[269] = dart.fn(google_fonts.GoogleFonts.dokdo, T.__ToTextStyle());
    },
    get C270() {
      return C[270] = dart.fn(google_fonts.GoogleFonts.domine, T.__ToTextStyle());
    },
    get C271() {
      return C[271] = dart.fn(google_fonts.GoogleFonts.donegalOne, T.__ToTextStyle());
    },
    get C272() {
      return C[272] = dart.fn(google_fonts.GoogleFonts.doppioOne, T.__ToTextStyle());
    },
    get C273() {
      return C[273] = dart.fn(google_fonts.GoogleFonts.dorsa, T.__ToTextStyle());
    },
    get C274() {
      return C[274] = dart.fn(google_fonts.GoogleFonts.dosis, T.__ToTextStyle());
    },
    get C275() {
      return C[275] = dart.fn(google_fonts.GoogleFonts.drSugiyama, T.__ToTextStyle());
    },
    get C276() {
      return C[276] = dart.fn(google_fonts.GoogleFonts.droidSans, T.__ToTextStyle());
    },
    get C277() {
      return C[277] = dart.fn(google_fonts.GoogleFonts.droidSansMono, T.__ToTextStyle());
    },
    get C278() {
      return C[278] = dart.fn(google_fonts.GoogleFonts.droidSerif, T.__ToTextStyle());
    },
    get C279() {
      return C[279] = dart.fn(google_fonts.GoogleFonts.duruSans, T.__ToTextStyle());
    },
    get C280() {
      return C[280] = dart.fn(google_fonts.GoogleFonts.dynalight, T.__ToTextStyle());
    },
    get C281() {
      return C[281] = dart.fn(google_fonts.GoogleFonts.ebGaramond, T.__ToTextStyle());
    },
    get C282() {
      return C[282] = dart.fn(google_fonts.GoogleFonts.eagleLake, T.__ToTextStyle());
    },
    get C283() {
      return C[283] = dart.fn(google_fonts.GoogleFonts.eastSeaDokdo, T.__ToTextStyle());
    },
    get C284() {
      return C[284] = dart.fn(google_fonts.GoogleFonts.eater, T.__ToTextStyle());
    },
    get C285() {
      return C[285] = dart.fn(google_fonts.GoogleFonts.economica, T.__ToTextStyle());
    },
    get C286() {
      return C[286] = dart.fn(google_fonts.GoogleFonts.eczar, T.__ToTextStyle());
    },
    get C287() {
      return C[287] = dart.fn(google_fonts.GoogleFonts.elMessiri, T.__ToTextStyle());
    },
    get C288() {
      return C[288] = dart.fn(google_fonts.GoogleFonts.electrolize, T.__ToTextStyle());
    },
    get C289() {
      return C[289] = dart.fn(google_fonts.GoogleFonts.elsie, T.__ToTextStyle());
    },
    get C290() {
      return C[290] = dart.fn(google_fonts.GoogleFonts.elsieSwashCaps, T.__ToTextStyle());
    },
    get C291() {
      return C[291] = dart.fn(google_fonts.GoogleFonts.emblemaOne, T.__ToTextStyle());
    },
    get C292() {
      return C[292] = dart.fn(google_fonts.GoogleFonts.emilysCandy, T.__ToTextStyle());
    },
    get C293() {
      return C[293] = dart.fn(google_fonts.GoogleFonts.encodeSans, T.__ToTextStyle());
    },
    get C294() {
      return C[294] = dart.fn(google_fonts.GoogleFonts.encodeSansCondensed, T.__ToTextStyle());
    },
    get C295() {
      return C[295] = dart.fn(google_fonts.GoogleFonts.encodeSansExpanded, T.__ToTextStyle());
    },
    get C296() {
      return C[296] = dart.fn(google_fonts.GoogleFonts.encodeSansSemiCondensed, T.__ToTextStyle());
    },
    get C297() {
      return C[297] = dart.fn(google_fonts.GoogleFonts.encodeSansSemiExpanded, T.__ToTextStyle());
    },
    get C298() {
      return C[298] = dart.fn(google_fonts.GoogleFonts.engagement, T.__ToTextStyle());
    },
    get C299() {
      return C[299] = dart.fn(google_fonts.GoogleFonts.englebert, T.__ToTextStyle());
    },
    get C300() {
      return C[300] = dart.fn(google_fonts.GoogleFonts.enriqueta, T.__ToTextStyle());
    },
    get C301() {
      return C[301] = dart.fn(google_fonts.GoogleFonts.epilogue, T.__ToTextStyle());
    },
    get C302() {
      return C[302] = dart.fn(google_fonts.GoogleFonts.ericaOne, T.__ToTextStyle());
    },
    get C303() {
      return C[303] = dart.fn(google_fonts.GoogleFonts.esteban, T.__ToTextStyle());
    },
    get C304() {
      return C[304] = dart.fn(google_fonts.GoogleFonts.euphoriaScript, T.__ToTextStyle());
    },
    get C305() {
      return C[305] = dart.fn(google_fonts.GoogleFonts.ewert, T.__ToTextStyle());
    },
    get C306() {
      return C[306] = dart.fn(google_fonts.GoogleFonts.exo, T.__ToTextStyle());
    },
    get C307() {
      return C[307] = dart.fn(google_fonts.GoogleFonts.exo2, T.__ToTextStyle());
    },
    get C308() {
      return C[308] = dart.fn(google_fonts.GoogleFonts.expletusSans, T.__ToTextStyle());
    },
    get C309() {
      return C[309] = dart.fn(google_fonts.GoogleFonts.fahkwang, T.__ToTextStyle());
    },
    get C310() {
      return C[310] = dart.fn(google_fonts.GoogleFonts.fanwoodText, T.__ToTextStyle());
    },
    get C311() {
      return C[311] = dart.fn(google_fonts.GoogleFonts.farro, T.__ToTextStyle());
    },
    get C312() {
      return C[312] = dart.fn(google_fonts.GoogleFonts.farsan, T.__ToTextStyle());
    },
    get C313() {
      return C[313] = dart.fn(google_fonts.GoogleFonts.fascinate, T.__ToTextStyle());
    },
    get C314() {
      return C[314] = dart.fn(google_fonts.GoogleFonts.fascinateInline, T.__ToTextStyle());
    },
    get C315() {
      return C[315] = dart.fn(google_fonts.GoogleFonts.fasterOne, T.__ToTextStyle());
    },
    get C316() {
      return C[316] = dart.fn(google_fonts.GoogleFonts.faunaOne, T.__ToTextStyle());
    },
    get C317() {
      return C[317] = dart.fn(google_fonts.GoogleFonts.faustina, T.__ToTextStyle());
    },
    get C318() {
      return C[318] = dart.fn(google_fonts.GoogleFonts.federant, T.__ToTextStyle());
    },
    get C319() {
      return C[319] = dart.fn(google_fonts.GoogleFonts.federo, T.__ToTextStyle());
    },
    get C320() {
      return C[320] = dart.fn(google_fonts.GoogleFonts.felipa, T.__ToTextStyle());
    },
    get C321() {
      return C[321] = dart.fn(google_fonts.GoogleFonts.fenix, T.__ToTextStyle());
    },
    get C322() {
      return C[322] = dart.fn(google_fonts.GoogleFonts.fingerPaint, T.__ToTextStyle());
    },
    get C323() {
      return C[323] = dart.fn(google_fonts.GoogleFonts.firaCode, T.__ToTextStyle());
    },
    get C324() {
      return C[324] = dart.fn(google_fonts.GoogleFonts.firaMono, T.__ToTextStyle());
    },
    get C325() {
      return C[325] = dart.fn(google_fonts.GoogleFonts.firaSans, T.__ToTextStyle());
    },
    get C326() {
      return C[326] = dart.fn(google_fonts.GoogleFonts.firaSansCondensed, T.__ToTextStyle());
    },
    get C327() {
      return C[327] = dart.fn(google_fonts.GoogleFonts.firaSansExtraCondensed, T.__ToTextStyle());
    },
    get C328() {
      return C[328] = dart.fn(google_fonts.GoogleFonts.fjallaOne, T.__ToTextStyle());
    },
    get C329() {
      return C[329] = dart.fn(google_fonts.GoogleFonts.fjordOne, T.__ToTextStyle());
    },
    get C330() {
      return C[330] = dart.fn(google_fonts.GoogleFonts.flamenco, T.__ToTextStyle());
    },
    get C331() {
      return C[331] = dart.fn(google_fonts.GoogleFonts.flavors, T.__ToTextStyle());
    },
    get C332() {
      return C[332] = dart.fn(google_fonts.GoogleFonts.fondamento, T.__ToTextStyle());
    },
    get C333() {
      return C[333] = dart.fn(google_fonts.GoogleFonts.fontdinerSwanky, T.__ToTextStyle());
    },
    get C334() {
      return C[334] = dart.fn(google_fonts.GoogleFonts.forum, T.__ToTextStyle());
    },
    get C335() {
      return C[335] = dart.fn(google_fonts.GoogleFonts.francoisOne, T.__ToTextStyle());
    },
    get C336() {
      return C[336] = dart.fn(google_fonts.GoogleFonts.frankRuhlLibre, T.__ToTextStyle());
    },
    get C337() {
      return C[337] = dart.fn(google_fonts.GoogleFonts.fraunces, T.__ToTextStyle());
    },
    get C338() {
      return C[338] = dart.fn(google_fonts.GoogleFonts.freckleFace, T.__ToTextStyle());
    },
    get C339() {
      return C[339] = dart.fn(google_fonts.GoogleFonts.frederickaTheGreat, T.__ToTextStyle());
    },
    get C340() {
      return C[340] = dart.fn(google_fonts.GoogleFonts.fredokaOne, T.__ToTextStyle());
    },
    get C341() {
      return C[341] = dart.fn(google_fonts.GoogleFonts.fresca, T.__ToTextStyle());
    },
    get C342() {
      return C[342] = dart.fn(google_fonts.GoogleFonts.frijole, T.__ToTextStyle());
    },
    get C343() {
      return C[343] = dart.fn(google_fonts.GoogleFonts.fruktur, T.__ToTextStyle());
    },
    get C344() {
      return C[344] = dart.fn(google_fonts.GoogleFonts.fugazOne, T.__ToTextStyle());
    },
    get C345() {
      return C[345] = dart.fn(google_fonts.GoogleFonts.gfsDidot, T.__ToTextStyle());
    },
    get C346() {
      return C[346] = dart.fn(google_fonts.GoogleFonts.gfsNeohellenic, T.__ToTextStyle());
    },
    get C347() {
      return C[347] = dart.fn(google_fonts.GoogleFonts.gabriela, T.__ToTextStyle());
    },
    get C348() {
      return C[348] = dart.fn(google_fonts.GoogleFonts.gaegu, T.__ToTextStyle());
    },
    get C349() {
      return C[349] = dart.fn(google_fonts.GoogleFonts.gafata, T.__ToTextStyle());
    },
    get C350() {
      return C[350] = dart.fn(google_fonts.GoogleFonts.galada, T.__ToTextStyle());
    },
    get C351() {
      return C[351] = dart.fn(google_fonts.GoogleFonts.galdeano, T.__ToTextStyle());
    },
    get C352() {
      return C[352] = dart.fn(google_fonts.GoogleFonts.galindo, T.__ToTextStyle());
    },
    get C353() {
      return C[353] = dart.fn(google_fonts.GoogleFonts.gamjaFlower, T.__ToTextStyle());
    },
    get C354() {
      return C[354] = dart.fn(google_fonts.GoogleFonts.gayathri, T.__ToTextStyle());
    },
    get C355() {
      return C[355] = dart.fn(google_fonts.GoogleFonts.gelasio, T.__ToTextStyle());
    },
    get C356() {
      return C[356] = dart.fn(google_fonts.GoogleFonts.gentiumBasic, T.__ToTextStyle());
    },
    get C357() {
      return C[357] = dart.fn(google_fonts.GoogleFonts.gentiumBookBasic, T.__ToTextStyle());
    },
    get C358() {
      return C[358] = dart.fn(google_fonts.GoogleFonts.geo, T.__ToTextStyle());
    },
    get C359() {
      return C[359] = dart.fn(google_fonts.GoogleFonts.geostar, T.__ToTextStyle());
    },
    get C360() {
      return C[360] = dart.fn(google_fonts.GoogleFonts.geostarFill, T.__ToTextStyle());
    },
    get C361() {
      return C[361] = dart.fn(google_fonts.GoogleFonts.germaniaOne, T.__ToTextStyle());
    },
    get C362() {
      return C[362] = dart.fn(google_fonts.GoogleFonts.gidugu, T.__ToTextStyle());
    },
    get C363() {
      return C[363] = dart.fn(google_fonts.GoogleFonts.gildaDisplay, T.__ToTextStyle());
    },
    get C364() {
      return C[364] = dart.fn(google_fonts.GoogleFonts.girassol, T.__ToTextStyle());
    },
    get C365() {
      return C[365] = dart.fn(google_fonts.GoogleFonts.giveYouGlory, T.__ToTextStyle());
    },
    get C366() {
      return C[366] = dart.fn(google_fonts.GoogleFonts.glassAntiqua, T.__ToTextStyle());
    },
    get C367() {
      return C[367] = dart.fn(google_fonts.GoogleFonts.glegoo, T.__ToTextStyle());
    },
    get C368() {
      return C[368] = dart.fn(google_fonts.GoogleFonts.gloriaHallelujah, T.__ToTextStyle());
    },
    get C369() {
      return C[369] = dart.fn(google_fonts.GoogleFonts.goblinOne, T.__ToTextStyle());
    },
    get C370() {
      return C[370] = dart.fn(google_fonts.GoogleFonts.gochiHand, T.__ToTextStyle());
    },
    get C371() {
      return C[371] = dart.fn(google_fonts.GoogleFonts.goldman, T.__ToTextStyle());
    },
    get C372() {
      return C[372] = dart.fn(google_fonts.GoogleFonts.gorditas, T.__ToTextStyle());
    },
    get C373() {
      return C[373] = dart.fn(google_fonts.GoogleFonts.gothicA1, T.__ToTextStyle());
    },
    get C374() {
      return C[374] = dart.fn(google_fonts.GoogleFonts.gotu, T.__ToTextStyle());
    },
    get C375() {
      return C[375] = dart.fn(google_fonts.GoogleFonts.goudyBookletter1911, T.__ToTextStyle());
    },
    get C376() {
      return C[376] = dart.fn(google_fonts.GoogleFonts.graduate, T.__ToTextStyle());
    },
    get C377() {
      return C[377] = dart.fn(google_fonts.GoogleFonts.grandHotel, T.__ToTextStyle());
    },
    get C378() {
      return C[378] = dart.fn(google_fonts.GoogleFonts.grandstander, T.__ToTextStyle());
    },
    get C379() {
      return C[379] = dart.fn(google_fonts.GoogleFonts.gravitasOne, T.__ToTextStyle());
    },
    get C380() {
      return C[380] = dart.fn(google_fonts.GoogleFonts.greatVibes, T.__ToTextStyle());
    },
    get C381() {
      return C[381] = dart.fn(google_fonts.GoogleFonts.grenze, T.__ToTextStyle());
    },
    get C382() {
      return C[382] = dart.fn(google_fonts.GoogleFonts.grenzeGotisch, T.__ToTextStyle());
    },
    get C383() {
      return C[383] = dart.fn(google_fonts.GoogleFonts.griffy, T.__ToTextStyle());
    },
    get C384() {
      return C[384] = dart.fn(google_fonts.GoogleFonts.gruppo, T.__ToTextStyle());
    },
    get C385() {
      return C[385] = dart.fn(google_fonts.GoogleFonts.gudea, T.__ToTextStyle());
    },
    get C386() {
      return C[386] = dart.fn(google_fonts.GoogleFonts.gugi, T.__ToTextStyle());
    },
    get C387() {
      return C[387] = dart.fn(google_fonts.GoogleFonts.gupter, T.__ToTextStyle());
    },
    get C388() {
      return C[388] = dart.fn(google_fonts.GoogleFonts.gurajada, T.__ToTextStyle());
    },
    get C389() {
      return C[389] = dart.fn(google_fonts.GoogleFonts.habibi, T.__ToTextStyle());
    },
    get C390() {
      return C[390] = dart.fn(google_fonts.GoogleFonts.hachiMaruPop, T.__ToTextStyle());
    },
    get C391() {
      return C[391] = dart.fn(google_fonts.GoogleFonts.halant, T.__ToTextStyle());
    },
    get C392() {
      return C[392] = dart.fn(google_fonts.GoogleFonts.hammersmithOne, T.__ToTextStyle());
    },
    get C393() {
      return C[393] = dart.fn(google_fonts.GoogleFonts.hanalei, T.__ToTextStyle());
    },
    get C394() {
      return C[394] = dart.fn(google_fonts.GoogleFonts.hanaleiFill, T.__ToTextStyle());
    },
    get C395() {
      return C[395] = dart.fn(google_fonts.GoogleFonts.handlee, T.__ToTextStyle());
    },
    get C396() {
      return C[396] = dart.fn(google_fonts.GoogleFonts.happyMonkey, T.__ToTextStyle());
    },
    get C397() {
      return C[397] = dart.fn(google_fonts.GoogleFonts.harmattan, T.__ToTextStyle());
    },
    get C398() {
      return C[398] = dart.fn(google_fonts.GoogleFonts.headlandOne, T.__ToTextStyle());
    },
    get C399() {
      return C[399] = dart.fn(google_fonts.GoogleFonts.heebo, T.__ToTextStyle());
    },
    get C400() {
      return C[400] = dart.fn(google_fonts.GoogleFonts.hennyPenny, T.__ToTextStyle());
    },
    get C401() {
      return C[401] = dart.fn(google_fonts.GoogleFonts.heptaSlab, T.__ToTextStyle());
    },
    get C402() {
      return C[402] = dart.fn(google_fonts.GoogleFonts.herrVonMuellerhoff, T.__ToTextStyle());
    },
    get C403() {
      return C[403] = dart.fn(google_fonts.GoogleFonts.hiMelody, T.__ToTextStyle());
    },
    get C404() {
      return C[404] = dart.fn(google_fonts.GoogleFonts.hind, T.__ToTextStyle());
    },
    get C405() {
      return C[405] = dart.fn(google_fonts.GoogleFonts.hindGuntur, T.__ToTextStyle());
    },
    get C406() {
      return C[406] = dart.fn(google_fonts.GoogleFonts.hindMadurai, T.__ToTextStyle());
    },
    get C407() {
      return C[407] = dart.fn(google_fonts.GoogleFonts.hindSiliguri, T.__ToTextStyle());
    },
    get C408() {
      return C[408] = dart.fn(google_fonts.GoogleFonts.hindVadodara, T.__ToTextStyle());
    },
    get C409() {
      return C[409] = dart.fn(google_fonts.GoogleFonts.holtwoodOneSc, T.__ToTextStyle());
    },
    get C410() {
      return C[410] = dart.fn(google_fonts.GoogleFonts.homemadeApple, T.__ToTextStyle());
    },
    get C411() {
      return C[411] = dart.fn(google_fonts.GoogleFonts.homenaje, T.__ToTextStyle());
    },
    get C412() {
      return C[412] = dart.fn(google_fonts.GoogleFonts.ibmPlexMono, T.__ToTextStyle());
    },
    get C413() {
      return C[413] = dart.fn(google_fonts.GoogleFonts.ibmPlexSans, T.__ToTextStyle());
    },
    get C414() {
      return C[414] = dart.fn(google_fonts.GoogleFonts.ibmPlexSansCondensed, T.__ToTextStyle());
    },
    get C415() {
      return C[415] = dart.fn(google_fonts.GoogleFonts.ibmPlexSerif, T.__ToTextStyle());
    },
    get C416() {
      return C[416] = dart.fn(google_fonts.GoogleFonts.imFellDwPica, T.__ToTextStyle());
    },
    get C417() {
      return C[417] = dart.fn(google_fonts.GoogleFonts.imFellDwPicaSc, T.__ToTextStyle());
    },
    get C418() {
      return C[418] = dart.fn(google_fonts.GoogleFonts.imFellDoublePica, T.__ToTextStyle());
    },
    get C419() {
      return C[419] = dart.fn(google_fonts.GoogleFonts.imFellDoublePicaSc, T.__ToTextStyle());
    },
    get C420() {
      return C[420] = dart.fn(google_fonts.GoogleFonts.imFellEnglish, T.__ToTextStyle());
    },
    get C421() {
      return C[421] = dart.fn(google_fonts.GoogleFonts.imFellEnglishSc, T.__ToTextStyle());
    },
    get C422() {
      return C[422] = dart.fn(google_fonts.GoogleFonts.imFellFrenchCanon, T.__ToTextStyle());
    },
    get C423() {
      return C[423] = dart.fn(google_fonts.GoogleFonts.imFellFrenchCanonSc, T.__ToTextStyle());
    },
    get C424() {
      return C[424] = dart.fn(google_fonts.GoogleFonts.imFellGreatPrimer, T.__ToTextStyle());
    },
    get C425() {
      return C[425] = dart.fn(google_fonts.GoogleFonts.imFellGreatPrimerSc, T.__ToTextStyle());
    },
    get C426() {
      return C[426] = dart.fn(google_fonts.GoogleFonts.ibarraRealNova, T.__ToTextStyle());
    },
    get C427() {
      return C[427] = dart.fn(google_fonts.GoogleFonts.iceberg, T.__ToTextStyle());
    },
    get C428() {
      return C[428] = dart.fn(google_fonts.GoogleFonts.iceland, T.__ToTextStyle());
    },
    get C429() {
      return C[429] = dart.fn(google_fonts.GoogleFonts.imprima, T.__ToTextStyle());
    },
    get C430() {
      return C[430] = dart.fn(google_fonts.GoogleFonts.inconsolata, T.__ToTextStyle());
    },
    get C431() {
      return C[431] = dart.fn(google_fonts.GoogleFonts.inder, T.__ToTextStyle());
    },
    get C432() {
      return C[432] = dart.fn(google_fonts.GoogleFonts.indieFlower, T.__ToTextStyle());
    },
    get C433() {
      return C[433] = dart.fn(google_fonts.GoogleFonts.inika, T.__ToTextStyle());
    },
    get C434() {
      return C[434] = dart.fn(google_fonts.GoogleFonts.inknutAntiqua, T.__ToTextStyle());
    },
    get C435() {
      return C[435] = dart.fn(google_fonts.GoogleFonts.inriaSans, T.__ToTextStyle());
    },
    get C436() {
      return C[436] = dart.fn(google_fonts.GoogleFonts.inriaSerif, T.__ToTextStyle());
    },
    get C437() {
      return C[437] = dart.fn(google_fonts.GoogleFonts.inter, T.__ToTextStyle());
    },
    get C438() {
      return C[438] = dart.fn(google_fonts.GoogleFonts.irishGrover, T.__ToTextStyle());
    },
    get C439() {
      return C[439] = dart.fn(google_fonts.GoogleFonts.istokWeb, T.__ToTextStyle());
    },
    get C440() {
      return C[440] = dart.fn(google_fonts.GoogleFonts.italiana, T.__ToTextStyle());
    },
    get C441() {
      return C[441] = dart.fn(google_fonts.GoogleFonts.italianno, T.__ToTextStyle());
    },
    get C442() {
      return C[442] = dart.fn(google_fonts.GoogleFonts.itim, T.__ToTextStyle());
    },
    get C443() {
      return C[443] = dart.fn(google_fonts.GoogleFonts.jacquesFrancois, T.__ToTextStyle());
    },
    get C444() {
      return C[444] = dart.fn(google_fonts.GoogleFonts.jacquesFrancoisShadow, T.__ToTextStyle());
    },
    get C445() {
      return C[445] = dart.fn(google_fonts.GoogleFonts.jaldi, T.__ToTextStyle());
    },
    get C446() {
      return C[446] = dart.fn(google_fonts.GoogleFonts.jetBrainsMono, T.__ToTextStyle());
    },
    get C447() {
      return C[447] = dart.fn(google_fonts.GoogleFonts.jimNightshade, T.__ToTextStyle());
    },
    get C448() {
      return C[448] = dart.fn(google_fonts.GoogleFonts.jockeyOne, T.__ToTextStyle());
    },
    get C449() {
      return C[449] = dart.fn(google_fonts.GoogleFonts.jollyLodger, T.__ToTextStyle());
    },
    get C450() {
      return C[450] = dart.fn(google_fonts.GoogleFonts.jomhuria, T.__ToTextStyle());
    },
    get C451() {
      return C[451] = dart.fn(google_fonts.GoogleFonts.jomolhari, T.__ToTextStyle());
    },
    get C452() {
      return C[452] = dart.fn(google_fonts.GoogleFonts.josefinSans, T.__ToTextStyle());
    },
    get C453() {
      return C[453] = dart.fn(google_fonts.GoogleFonts.josefinSlab, T.__ToTextStyle());
    },
    get C454() {
      return C[454] = dart.fn(google_fonts.GoogleFonts.jost, T.__ToTextStyle());
    },
    get C455() {
      return C[455] = dart.fn(google_fonts.GoogleFonts.jotiOne, T.__ToTextStyle());
    },
    get C456() {
      return C[456] = dart.fn(google_fonts.GoogleFonts.jua, T.__ToTextStyle());
    },
    get C457() {
      return C[457] = dart.fn(google_fonts.GoogleFonts.judson, T.__ToTextStyle());
    },
    get C458() {
      return C[458] = dart.fn(google_fonts.GoogleFonts.julee, T.__ToTextStyle());
    },
    get C459() {
      return C[459] = dart.fn(google_fonts.GoogleFonts.juliusSansOne, T.__ToTextStyle());
    },
    get C460() {
      return C[460] = dart.fn(google_fonts.GoogleFonts.junge, T.__ToTextStyle());
    },
    get C461() {
      return C[461] = dart.fn(google_fonts.GoogleFonts.jura, T.__ToTextStyle());
    },
    get C462() {
      return C[462] = dart.fn(google_fonts.GoogleFonts.justAnotherHand, T.__ToTextStyle());
    },
    get C463() {
      return C[463] = dart.fn(google_fonts.GoogleFonts.justMeAgainDownHere, T.__ToTextStyle());
    },
    get C464() {
      return C[464] = dart.fn(google_fonts.GoogleFonts.k2d, T.__ToTextStyle());
    },
    get C465() {
      return C[465] = dart.fn(google_fonts.GoogleFonts.kadwa, T.__ToTextStyle());
    },
    get C466() {
      return C[466] = dart.fn(google_fonts.GoogleFonts.kalam, T.__ToTextStyle());
    },
    get C467() {
      return C[467] = dart.fn(google_fonts.GoogleFonts.kameron, T.__ToTextStyle());
    },
    get C468() {
      return C[468] = dart.fn(google_fonts.GoogleFonts.kanit, T.__ToTextStyle());
    },
    get C469() {
      return C[469] = dart.fn(google_fonts.GoogleFonts.kantumruy, T.__ToTextStyle());
    },
    get C470() {
      return C[470] = dart.fn(google_fonts.GoogleFonts.karla, T.__ToTextStyle());
    },
    get C471() {
      return C[471] = dart.fn(google_fonts.GoogleFonts.karma, T.__ToTextStyle());
    },
    get C472() {
      return C[472] = dart.fn(google_fonts.GoogleFonts.katibeh, T.__ToTextStyle());
    },
    get C473() {
      return C[473] = dart.fn(google_fonts.GoogleFonts.kaushanScript, T.__ToTextStyle());
    },
    get C474() {
      return C[474] = dart.fn(google_fonts.GoogleFonts.kavivanar, T.__ToTextStyle());
    },
    get C475() {
      return C[475] = dart.fn(google_fonts.GoogleFonts.kavoon, T.__ToTextStyle());
    },
    get C476() {
      return C[476] = dart.fn(google_fonts.GoogleFonts.kdamThmor, T.__ToTextStyle());
    },
    get C477() {
      return C[477] = dart.fn(google_fonts.GoogleFonts.keaniaOne, T.__ToTextStyle());
    },
    get C478() {
      return C[478] = dart.fn(google_fonts.GoogleFonts.kellySlab, T.__ToTextStyle());
    },
    get C479() {
      return C[479] = dart.fn(google_fonts.GoogleFonts.kenia, T.__ToTextStyle());
    },
    get C480() {
      return C[480] = dart.fn(google_fonts.GoogleFonts.khand, T.__ToTextStyle());
    },
    get C481() {
      return C[481] = dart.fn(google_fonts.GoogleFonts.khula, T.__ToTextStyle());
    },
    get C482() {
      return C[482] = dart.fn(google_fonts.GoogleFonts.kirangHaerang, T.__ToTextStyle());
    },
    get C483() {
      return C[483] = dart.fn(google_fonts.GoogleFonts.kiteOne, T.__ToTextStyle());
    },
    get C484() {
      return C[484] = dart.fn(google_fonts.GoogleFonts.knewave, T.__ToTextStyle());
    },
    get C485() {
      return C[485] = dart.fn(google_fonts.GoogleFonts.koHo, T.__ToTextStyle());
    },
    get C486() {
      return C[486] = dart.fn(google_fonts.GoogleFonts.kodchasan, T.__ToTextStyle());
    },
    get C487() {
      return C[487] = dart.fn(google_fonts.GoogleFonts.kosugi, T.__ToTextStyle());
    },
    get C488() {
      return C[488] = dart.fn(google_fonts.GoogleFonts.kosugiMaru, T.__ToTextStyle());
    },
    get C489() {
      return C[489] = dart.fn(google_fonts.GoogleFonts.kottaOne, T.__ToTextStyle());
    },
    get C490() {
      return C[490] = dart.fn(google_fonts.GoogleFonts.kranky, T.__ToTextStyle());
    },
    get C491() {
      return C[491] = dart.fn(google_fonts.GoogleFonts.kreon, T.__ToTextStyle());
    },
    get C492() {
      return C[492] = dart.fn(google_fonts.GoogleFonts.kristi, T.__ToTextStyle());
    },
    get C493() {
      return C[493] = dart.fn(google_fonts.GoogleFonts.kronaOne, T.__ToTextStyle());
    },
    get C494() {
      return C[494] = dart.fn(google_fonts.GoogleFonts.krub, T.__ToTextStyle());
    },
    get C495() {
      return C[495] = dart.fn(google_fonts.GoogleFonts.kufam, T.__ToTextStyle());
    },
    get C496() {
      return C[496] = dart.fn(google_fonts.GoogleFonts.kulimPark, T.__ToTextStyle());
    },
    get C497() {
      return C[497] = dart.fn(google_fonts.GoogleFonts.kumarOne, T.__ToTextStyle());
    },
    get C498() {
      return C[498] = dart.fn(google_fonts.GoogleFonts.kumarOneOutline, T.__ToTextStyle());
    },
    get C499() {
      return C[499] = dart.fn(google_fonts.GoogleFonts.kumbhSans, T.__ToTextStyle());
    },
    get C500() {
      return C[500] = dart.fn(google_fonts.GoogleFonts.kurale, T.__ToTextStyle());
    },
    get C501() {
      return C[501] = dart.fn(google_fonts.GoogleFonts.laBelleAurore, T.__ToTextStyle());
    },
    get C502() {
      return C[502] = dart.fn(google_fonts.GoogleFonts.lacquer, T.__ToTextStyle());
    },
    get C503() {
      return C[503] = dart.fn(google_fonts.GoogleFonts.laila, T.__ToTextStyle());
    },
    get C504() {
      return C[504] = dart.fn(google_fonts.GoogleFonts.lakkiReddy, T.__ToTextStyle());
    },
    get C505() {
      return C[505] = dart.fn(google_fonts.GoogleFonts.lalezar, T.__ToTextStyle());
    },
    get C506() {
      return C[506] = dart.fn(google_fonts.GoogleFonts.lancelot, T.__ToTextStyle());
    },
    get C507() {
      return C[507] = dart.fn(google_fonts.GoogleFonts.langar, T.__ToTextStyle());
    },
    get C508() {
      return C[508] = dart.fn(google_fonts.GoogleFonts.lateef, T.__ToTextStyle());
    },
    get C509() {
      return C[509] = dart.fn(google_fonts.GoogleFonts.lato, T.__ToTextStyle());
    },
    get C510() {
      return C[510] = dart.fn(google_fonts.GoogleFonts.leagueScript, T.__ToTextStyle());
    },
    get C511() {
      return C[511] = dart.fn(google_fonts.GoogleFonts.leckerliOne, T.__ToTextStyle());
    },
    get C512() {
      return C[512] = dart.fn(google_fonts.GoogleFonts.ledger, T.__ToTextStyle());
    },
    get C513() {
      return C[513] = dart.fn(google_fonts.GoogleFonts.lekton, T.__ToTextStyle());
    },
    get C514() {
      return C[514] = dart.fn(google_fonts.GoogleFonts.lemon, T.__ToTextStyle());
    },
    get C515() {
      return C[515] = dart.fn(google_fonts.GoogleFonts.lemonada, T.__ToTextStyle());
    },
    get C516() {
      return C[516] = dart.fn(google_fonts.GoogleFonts.lexendDeca, T.__ToTextStyle());
    },
    get C517() {
      return C[517] = dart.fn(google_fonts.GoogleFonts.lexendExa, T.__ToTextStyle());
    },
    get C518() {
      return C[518] = dart.fn(google_fonts.GoogleFonts.lexendGiga, T.__ToTextStyle());
    },
    get C519() {
      return C[519] = dart.fn(google_fonts.GoogleFonts.lexendMega, T.__ToTextStyle());
    },
    get C520() {
      return C[520] = dart.fn(google_fonts.GoogleFonts.lexendPeta, T.__ToTextStyle());
    },
    get C521() {
      return C[521] = dart.fn(google_fonts.GoogleFonts.lexendTera, T.__ToTextStyle());
    },
    get C522() {
      return C[522] = dart.fn(google_fonts.GoogleFonts.lexendZetta, T.__ToTextStyle());
    },
    get C523() {
      return C[523] = dart.fn(google_fonts.GoogleFonts.libreBarcode128, T.__ToTextStyle());
    },
    get C524() {
      return C[524] = dart.fn(google_fonts.GoogleFonts.libreBarcode128Text, T.__ToTextStyle());
    },
    get C525() {
      return C[525] = dart.fn(google_fonts.GoogleFonts.libreBarcode39, T.__ToTextStyle());
    },
    get C526() {
      return C[526] = dart.fn(google_fonts.GoogleFonts.libreBarcode39Extended, T.__ToTextStyle());
    },
    get C527() {
      return C[527] = dart.fn(google_fonts.GoogleFonts.libreBarcode39ExtendedText, T.__ToTextStyle());
    },
    get C528() {
      return C[528] = dart.fn(google_fonts.GoogleFonts.libreBarcode39Text, T.__ToTextStyle());
    },
    get C529() {
      return C[529] = dart.fn(google_fonts.GoogleFonts.libreBaskerville, T.__ToTextStyle());
    },
    get C530() {
      return C[530] = dart.fn(google_fonts.GoogleFonts.libreCaslonDisplay, T.__ToTextStyle());
    },
    get C531() {
      return C[531] = dart.fn(google_fonts.GoogleFonts.libreCaslonText, T.__ToTextStyle());
    },
    get C532() {
      return C[532] = dart.fn(google_fonts.GoogleFonts.libreFranklin, T.__ToTextStyle());
    },
    get C533() {
      return C[533] = dart.fn(google_fonts.GoogleFonts.lifeSavers, T.__ToTextStyle());
    },
    get C534() {
      return C[534] = dart.fn(google_fonts.GoogleFonts.lilitaOne, T.__ToTextStyle());
    },
    get C535() {
      return C[535] = dart.fn(google_fonts.GoogleFonts.lilyScriptOne, T.__ToTextStyle());
    },
    get C536() {
      return C[536] = dart.fn(google_fonts.GoogleFonts.limelight, T.__ToTextStyle());
    },
    get C537() {
      return C[537] = dart.fn(google_fonts.GoogleFonts.lindenHill, T.__ToTextStyle());
    },
    get C538() {
      return C[538] = dart.fn(google_fonts.GoogleFonts.literata, T.__ToTextStyle());
    },
    get C539() {
      return C[539] = dart.fn(google_fonts.GoogleFonts.liuJianMaoCao, T.__ToTextStyle());
    },
    get C540() {
      return C[540] = dart.fn(google_fonts.GoogleFonts.livvic, T.__ToTextStyle());
    },
    get C541() {
      return C[541] = dart.fn(google_fonts.GoogleFonts.lobster, T.__ToTextStyle());
    },
    get C542() {
      return C[542] = dart.fn(google_fonts.GoogleFonts.lobsterTwo, T.__ToTextStyle());
    },
    get C543() {
      return C[543] = dart.fn(google_fonts.GoogleFonts.londrinaOutline, T.__ToTextStyle());
    },
    get C544() {
      return C[544] = dart.fn(google_fonts.GoogleFonts.londrinaShadow, T.__ToTextStyle());
    },
    get C545() {
      return C[545] = dart.fn(google_fonts.GoogleFonts.londrinaSketch, T.__ToTextStyle());
    },
    get C546() {
      return C[546] = dart.fn(google_fonts.GoogleFonts.londrinaSolid, T.__ToTextStyle());
    },
    get C547() {
      return C[547] = dart.fn(google_fonts.GoogleFonts.longCang, T.__ToTextStyle());
    },
    get C548() {
      return C[548] = dart.fn(google_fonts.GoogleFonts.lora, T.__ToTextStyle());
    },
    get C549() {
      return C[549] = dart.fn(google_fonts.GoogleFonts.loveYaLikeASister, T.__ToTextStyle());
    },
    get C550() {
      return C[550] = dart.fn(google_fonts.GoogleFonts.lovedByTheKing, T.__ToTextStyle());
    },
    get C551() {
      return C[551] = dart.fn(google_fonts.GoogleFonts.loversQuarrel, T.__ToTextStyle());
    },
    get C552() {
      return C[552] = dart.fn(google_fonts.GoogleFonts.luckiestGuy, T.__ToTextStyle());
    },
    get C553() {
      return C[553] = dart.fn(google_fonts.GoogleFonts.lusitana, T.__ToTextStyle());
    },
    get C554() {
      return C[554] = dart.fn(google_fonts.GoogleFonts.lustria, T.__ToTextStyle());
    },
    get C555() {
      return C[555] = dart.fn(google_fonts.GoogleFonts.mPlus1p, T.__ToTextStyle());
    },
    get C556() {
      return C[556] = dart.fn(google_fonts.GoogleFonts.mPlusRounded1c, T.__ToTextStyle());
    },
    get C557() {
      return C[557] = dart.fn(google_fonts.GoogleFonts.maShanZheng, T.__ToTextStyle());
    },
    get C558() {
      return C[558] = dart.fn(google_fonts.GoogleFonts.macondo, T.__ToTextStyle());
    },
    get C559() {
      return C[559] = dart.fn(google_fonts.GoogleFonts.macondoSwashCaps, T.__ToTextStyle());
    },
    get C560() {
      return C[560] = dart.fn(google_fonts.GoogleFonts.mada, T.__ToTextStyle());
    },
    get C561() {
      return C[561] = dart.fn(google_fonts.GoogleFonts.magra, T.__ToTextStyle());
    },
    get C562() {
      return C[562] = dart.fn(google_fonts.GoogleFonts.maidenOrange, T.__ToTextStyle());
    },
    get C563() {
      return C[563] = dart.fn(google_fonts.GoogleFonts.maitree, T.__ToTextStyle());
    },
    get C564() {
      return C[564] = dart.fn(google_fonts.GoogleFonts.majorMonoDisplay, T.__ToTextStyle());
    },
    get C565() {
      return C[565] = dart.fn(google_fonts.GoogleFonts.mako, T.__ToTextStyle());
    },
    get C566() {
      return C[566] = dart.fn(google_fonts.GoogleFonts.mali, T.__ToTextStyle());
    },
    get C567() {
      return C[567] = dart.fn(google_fonts.GoogleFonts.mallanna, T.__ToTextStyle());
    },
    get C568() {
      return C[568] = dart.fn(google_fonts.GoogleFonts.mandali, T.__ToTextStyle());
    },
    get C569() {
      return C[569] = dart.fn(google_fonts.GoogleFonts.manjari, T.__ToTextStyle());
    },
    get C570() {
      return C[570] = dart.fn(google_fonts.GoogleFonts.manrope, T.__ToTextStyle());
    },
    get C571() {
      return C[571] = dart.fn(google_fonts.GoogleFonts.mansalva, T.__ToTextStyle());
    },
    get C572() {
      return C[572] = dart.fn(google_fonts.GoogleFonts.manuale, T.__ToTextStyle());
    },
    get C573() {
      return C[573] = dart.fn(google_fonts.GoogleFonts.marcellus, T.__ToTextStyle());
    },
    get C574() {
      return C[574] = dart.fn(google_fonts.GoogleFonts.marcellusSc, T.__ToTextStyle());
    },
    get C575() {
      return C[575] = dart.fn(google_fonts.GoogleFonts.marckScript, T.__ToTextStyle());
    },
    get C576() {
      return C[576] = dart.fn(google_fonts.GoogleFonts.margarine, T.__ToTextStyle());
    },
    get C577() {
      return C[577] = dart.fn(google_fonts.GoogleFonts.markaziText, T.__ToTextStyle());
    },
    get C578() {
      return C[578] = dart.fn(google_fonts.GoogleFonts.markoOne, T.__ToTextStyle());
    },
    get C579() {
      return C[579] = dart.fn(google_fonts.GoogleFonts.marmelad, T.__ToTextStyle());
    },
    get C580() {
      return C[580] = dart.fn(google_fonts.GoogleFonts.martel, T.__ToTextStyle());
    },
    get C581() {
      return C[581] = dart.fn(google_fonts.GoogleFonts.martelSans, T.__ToTextStyle());
    },
    get C582() {
      return C[582] = dart.fn(google_fonts.GoogleFonts.marvel, T.__ToTextStyle());
    },
    get C583() {
      return C[583] = dart.fn(google_fonts.GoogleFonts.mate, T.__ToTextStyle());
    },
    get C584() {
      return C[584] = dart.fn(google_fonts.GoogleFonts.mateSc, T.__ToTextStyle());
    },
    get C585() {
      return C[585] = dart.fn(google_fonts.GoogleFonts.mavenPro, T.__ToTextStyle());
    },
    get C586() {
      return C[586] = dart.fn(google_fonts.GoogleFonts.mcLaren, T.__ToTextStyle());
    },
    get C587() {
      return C[587] = dart.fn(google_fonts.GoogleFonts.meddon, T.__ToTextStyle());
    },
    get C588() {
      return C[588] = dart.fn(google_fonts.GoogleFonts.medievalSharp, T.__ToTextStyle());
    },
    get C589() {
      return C[589] = dart.fn(google_fonts.GoogleFonts.medulaOne, T.__ToTextStyle());
    },
    get C590() {
      return C[590] = dart.fn(google_fonts.GoogleFonts.meeraInimai, T.__ToTextStyle());
    },
    get C591() {
      return C[591] = dart.fn(google_fonts.GoogleFonts.megrim, T.__ToTextStyle());
    },
    get C592() {
      return C[592] = dart.fn(google_fonts.GoogleFonts.meieScript, T.__ToTextStyle());
    },
    get C593() {
      return C[593] = dart.fn(google_fonts.GoogleFonts.merienda, T.__ToTextStyle());
    },
    get C594() {
      return C[594] = dart.fn(google_fonts.GoogleFonts.meriendaOne, T.__ToTextStyle());
    },
    get C595() {
      return C[595] = dart.fn(google_fonts.GoogleFonts.merriweather, T.__ToTextStyle());
    },
    get C596() {
      return C[596] = dart.fn(google_fonts.GoogleFonts.merriweatherSans, T.__ToTextStyle());
    },
    get C597() {
      return C[597] = dart.fn(google_fonts.GoogleFonts.metalMania, T.__ToTextStyle());
    },
    get C598() {
      return C[598] = dart.fn(google_fonts.GoogleFonts.metamorphous, T.__ToTextStyle());
    },
    get C599() {
      return C[599] = dart.fn(google_fonts.GoogleFonts.metrophobic, T.__ToTextStyle());
    },
    get C600() {
      return C[600] = dart.fn(google_fonts.GoogleFonts.michroma, T.__ToTextStyle());
    },
    get C601() {
      return C[601] = dart.fn(google_fonts.GoogleFonts.milonga, T.__ToTextStyle());
    },
    get C602() {
      return C[602] = dart.fn(google_fonts.GoogleFonts.miltonian, T.__ToTextStyle());
    },
    get C603() {
      return C[603] = dart.fn(google_fonts.GoogleFonts.miltonianTattoo, T.__ToTextStyle());
    },
    get C604() {
      return C[604] = dart.fn(google_fonts.GoogleFonts.mina, T.__ToTextStyle());
    },
    get C605() {
      return C[605] = dart.fn(google_fonts.GoogleFonts.miniver, T.__ToTextStyle());
    },
    get C606() {
      return C[606] = dart.fn(google_fonts.GoogleFonts.miriamLibre, T.__ToTextStyle());
    },
    get C607() {
      return C[607] = dart.fn(google_fonts.GoogleFonts.mirza, T.__ToTextStyle());
    },
    get C608() {
      return C[608] = dart.fn(google_fonts.GoogleFonts.missFajardose, T.__ToTextStyle());
    },
    get C609() {
      return C[609] = dart.fn(google_fonts.GoogleFonts.mitr, T.__ToTextStyle());
    },
    get C610() {
      return C[610] = dart.fn(google_fonts.GoogleFonts.modak, T.__ToTextStyle());
    },
    get C611() {
      return C[611] = dart.fn(google_fonts.GoogleFonts.modernAntiqua, T.__ToTextStyle());
    },
    get C612() {
      return C[612] = dart.fn(google_fonts.GoogleFonts.mogra, T.__ToTextStyle());
    },
    get C613() {
      return C[613] = dart.fn(google_fonts.GoogleFonts.molengo, T.__ToTextStyle());
    },
    get C614() {
      return C[614] = dart.fn(google_fonts.GoogleFonts.molle, T.__ToTextStyle());
    },
    get C615() {
      return C[615] = dart.fn(google_fonts.GoogleFonts.monda, T.__ToTextStyle());
    },
    get C616() {
      return C[616] = dart.fn(google_fonts.GoogleFonts.monofett, T.__ToTextStyle());
    },
    get C617() {
      return C[617] = dart.fn(google_fonts.GoogleFonts.monoton, T.__ToTextStyle());
    },
    get C618() {
      return C[618] = dart.fn(google_fonts.GoogleFonts.monsieurLaDoulaise, T.__ToTextStyle());
    },
    get C619() {
      return C[619] = dart.fn(google_fonts.GoogleFonts.montaga, T.__ToTextStyle());
    },
    get C620() {
      return C[620] = dart.fn(google_fonts.GoogleFonts.montez, T.__ToTextStyle());
    },
    get C621() {
      return C[621] = dart.fn(google_fonts.GoogleFonts.montserrat, T.__ToTextStyle());
    },
    get C622() {
      return C[622] = dart.fn(google_fonts.GoogleFonts.montserratAlternates, T.__ToTextStyle());
    },
    get C623() {
      return C[623] = dart.fn(google_fonts.GoogleFonts.montserratSubrayada, T.__ToTextStyle());
    },
    get C624() {
      return C[624] = dart.fn(google_fonts.GoogleFonts.mountainsOfChristmas, T.__ToTextStyle());
    },
    get C625() {
      return C[625] = dart.fn(google_fonts.GoogleFonts.mouseMemoirs, T.__ToTextStyle());
    },
    get C626() {
      return C[626] = dart.fn(google_fonts.GoogleFonts.mrBedfort, T.__ToTextStyle());
    },
    get C627() {
      return C[627] = dart.fn(google_fonts.GoogleFonts.mrDafoe, T.__ToTextStyle());
    },
    get C628() {
      return C[628] = dart.fn(google_fonts.GoogleFonts.mrDeHaviland, T.__ToTextStyle());
    },
    get C629() {
      return C[629] = dart.fn(google_fonts.GoogleFonts.mrsSaintDelafield, T.__ToTextStyle());
    },
    get C630() {
      return C[630] = dart.fn(google_fonts.GoogleFonts.mrsSheppards, T.__ToTextStyle());
    },
    get C631() {
      return C[631] = dart.fn(google_fonts.GoogleFonts.mukta, T.__ToTextStyle());
    },
    get C632() {
      return C[632] = dart.fn(google_fonts.GoogleFonts.muktaMahee, T.__ToTextStyle());
    },
    get C633() {
      return C[633] = dart.fn(google_fonts.GoogleFonts.muktaMalar, T.__ToTextStyle());
    },
    get C634() {
      return C[634] = dart.fn(google_fonts.GoogleFonts.muktaVaani, T.__ToTextStyle());
    },
    get C635() {
      return C[635] = dart.fn(google_fonts.GoogleFonts.mulish, T.__ToTextStyle());
    },
    get C636() {
      return C[636] = dart.fn(google_fonts.GoogleFonts.museoModerno, T.__ToTextStyle());
    },
    get C637() {
      return C[637] = dart.fn(google_fonts.GoogleFonts.mysteryQuest, T.__ToTextStyle());
    },
    get C638() {
      return C[638] = dart.fn(google_fonts.GoogleFonts.ntr, T.__ToTextStyle());
    },
    get C639() {
      return C[639] = dart.fn(google_fonts.GoogleFonts.nanumBrushScript, T.__ToTextStyle());
    },
    get C640() {
      return C[640] = dart.fn(google_fonts.GoogleFonts.nanumGothic, T.__ToTextStyle());
    },
    get C641() {
      return C[641] = dart.fn(google_fonts.GoogleFonts.nanumGothicCoding, T.__ToTextStyle());
    },
    get C642() {
      return C[642] = dart.fn(google_fonts.GoogleFonts.nanumMyeongjo, T.__ToTextStyle());
    },
    get C643() {
      return C[643] = dart.fn(google_fonts.GoogleFonts.nanumPenScript, T.__ToTextStyle());
    },
    get C644() {
      return C[644] = dart.fn(google_fonts.GoogleFonts.nerkoOne, T.__ToTextStyle());
    },
    get C645() {
      return C[645] = dart.fn(google_fonts.GoogleFonts.neucha, T.__ToTextStyle());
    },
    get C646() {
      return C[646] = dart.fn(google_fonts.GoogleFonts.neuton, T.__ToTextStyle());
    },
    get C647() {
      return C[647] = dart.fn(google_fonts.GoogleFonts.newRocker, T.__ToTextStyle());
    },
    get C648() {
      return C[648] = dart.fn(google_fonts.GoogleFonts.newsCycle, T.__ToTextStyle());
    },
    get C649() {
      return C[649] = dart.fn(google_fonts.GoogleFonts.niconne, T.__ToTextStyle());
    },
    get C650() {
      return C[650] = dart.fn(google_fonts.GoogleFonts.niramit, T.__ToTextStyle());
    },
    get C651() {
      return C[651] = dart.fn(google_fonts.GoogleFonts.nixieOne, T.__ToTextStyle());
    },
    get C652() {
      return C[652] = dart.fn(google_fonts.GoogleFonts.nobile, T.__ToTextStyle());
    },
    get C653() {
      return C[653] = dart.fn(google_fonts.GoogleFonts.norican, T.__ToTextStyle());
    },
    get C654() {
      return C[654] = dart.fn(google_fonts.GoogleFonts.nosifer, T.__ToTextStyle());
    },
    get C655() {
      return C[655] = dart.fn(google_fonts.GoogleFonts.notable, T.__ToTextStyle());
    },
    get C656() {
      return C[656] = dart.fn(google_fonts.GoogleFonts.nothingYouCouldDo, T.__ToTextStyle());
    },
    get C657() {
      return C[657] = dart.fn(google_fonts.GoogleFonts.noticiaText, T.__ToTextStyle());
    },
    get C658() {
      return C[658] = dart.fn(google_fonts.GoogleFonts.notoColorEmojiCompat, T.__ToTextStyle());
    },
    get C659() {
      return C[659] = dart.fn(google_fonts.GoogleFonts.notoSans, T.__ToTextStyle());
    },
    get C660() {
      return C[660] = dart.fn(google_fonts.GoogleFonts.notoSerif, T.__ToTextStyle());
    },
    get C661() {
      return C[661] = dart.fn(google_fonts.GoogleFonts.novaCut, T.__ToTextStyle());
    },
    get C662() {
      return C[662] = dart.fn(google_fonts.GoogleFonts.novaFlat, T.__ToTextStyle());
    },
    get C663() {
      return C[663] = dart.fn(google_fonts.GoogleFonts.novaMono, T.__ToTextStyle());
    },
    get C664() {
      return C[664] = dart.fn(google_fonts.GoogleFonts.novaOval, T.__ToTextStyle());
    },
    get C665() {
      return C[665] = dart.fn(google_fonts.GoogleFonts.novaRound, T.__ToTextStyle());
    },
    get C666() {
      return C[666] = dart.fn(google_fonts.GoogleFonts.novaScript, T.__ToTextStyle());
    },
    get C667() {
      return C[667] = dart.fn(google_fonts.GoogleFonts.novaSlim, T.__ToTextStyle());
    },
    get C668() {
      return C[668] = dart.fn(google_fonts.GoogleFonts.novaSquare, T.__ToTextStyle());
    },
    get C669() {
      return C[669] = dart.fn(google_fonts.GoogleFonts.numans, T.__ToTextStyle());
    },
    get C670() {
      return C[670] = dart.fn(google_fonts.GoogleFonts.nunito, T.__ToTextStyle());
    },
    get C671() {
      return C[671] = dart.fn(google_fonts.GoogleFonts.nunitoSans, T.__ToTextStyle());
    },
    get C672() {
      return C[672] = dart.fn(google_fonts.GoogleFonts.odibeeSans, T.__ToTextStyle());
    },
    get C673() {
      return C[673] = dart.fn(google_fonts.GoogleFonts.odorMeanChey, T.__ToTextStyle());
    },
    get C674() {
      return C[674] = dart.fn(google_fonts.GoogleFonts.offside, T.__ToTextStyle());
    },
    get C675() {
      return C[675] = dart.fn(google_fonts.GoogleFonts.oldStandardTt, T.__ToTextStyle());
    },
    get C676() {
      return C[676] = dart.fn(google_fonts.GoogleFonts.oldenburg, T.__ToTextStyle());
    },
    get C677() {
      return C[677] = dart.fn(google_fonts.GoogleFonts.oleoScript, T.__ToTextStyle());
    },
    get C678() {
      return C[678] = dart.fn(google_fonts.GoogleFonts.oleoScriptSwashCaps, T.__ToTextStyle());
    },
    get C679() {
      return C[679] = dart.fn(google_fonts.GoogleFonts.openSans, T.__ToTextStyle());
    },
    get C680() {
      return C[680] = dart.fn(google_fonts.GoogleFonts.openSansCondensed, T.__ToTextStyle());
    },
    get C681() {
      return C[681] = dart.fn(google_fonts.GoogleFonts.oranienbaum, T.__ToTextStyle());
    },
    get C682() {
      return C[682] = dart.fn(google_fonts.GoogleFonts.orbitron, T.__ToTextStyle());
    },
    get C683() {
      return C[683] = dart.fn(google_fonts.GoogleFonts.oregano, T.__ToTextStyle());
    },
    get C684() {
      return C[684] = dart.fn(google_fonts.GoogleFonts.orienta, T.__ToTextStyle());
    },
    get C685() {
      return C[685] = dart.fn(google_fonts.GoogleFonts.originalSurfer, T.__ToTextStyle());
    },
    get C686() {
      return C[686] = dart.fn(google_fonts.GoogleFonts.oswald, T.__ToTextStyle());
    },
    get C687() {
      return C[687] = dart.fn(google_fonts.GoogleFonts.overTheRainbow, T.__ToTextStyle());
    },
    get C688() {
      return C[688] = dart.fn(google_fonts.GoogleFonts.overlock, T.__ToTextStyle());
    },
    get C689() {
      return C[689] = dart.fn(google_fonts.GoogleFonts.overlockSc, T.__ToTextStyle());
    },
    get C690() {
      return C[690] = dart.fn(google_fonts.GoogleFonts.overpass, T.__ToTextStyle());
    },
    get C691() {
      return C[691] = dart.fn(google_fonts.GoogleFonts.overpassMono, T.__ToTextStyle());
    },
    get C692() {
      return C[692] = dart.fn(google_fonts.GoogleFonts.ovo, T.__ToTextStyle());
    },
    get C693() {
      return C[693] = dart.fn(google_fonts.GoogleFonts.oxanium, T.__ToTextStyle());
    },
    get C694() {
      return C[694] = dart.fn(google_fonts.GoogleFonts.oxygen, T.__ToTextStyle());
    },
    get C695() {
      return C[695] = dart.fn(google_fonts.GoogleFonts.oxygenMono, T.__ToTextStyle());
    },
    get C696() {
      return C[696] = dart.fn(google_fonts.GoogleFonts.ptMono, T.__ToTextStyle());
    },
    get C697() {
      return C[697] = dart.fn(google_fonts.GoogleFonts.ptSans, T.__ToTextStyle());
    },
    get C698() {
      return C[698] = dart.fn(google_fonts.GoogleFonts.ptSansCaption, T.__ToTextStyle());
    },
    get C699() {
      return C[699] = dart.fn(google_fonts.GoogleFonts.ptSansNarrow, T.__ToTextStyle());
    },
    get C700() {
      return C[700] = dart.fn(google_fonts.GoogleFonts.ptSerif, T.__ToTextStyle());
    },
    get C701() {
      return C[701] = dart.fn(google_fonts.GoogleFonts.ptSerifCaption, T.__ToTextStyle());
    },
    get C702() {
      return C[702] = dart.fn(google_fonts.GoogleFonts.pacifico, T.__ToTextStyle());
    },
    get C703() {
      return C[703] = dart.fn(google_fonts.GoogleFonts.padauk, T.__ToTextStyle());
    },
    get C704() {
      return C[704] = dart.fn(google_fonts.GoogleFonts.palanquin, T.__ToTextStyle());
    },
    get C705() {
      return C[705] = dart.fn(google_fonts.GoogleFonts.palanquinDark, T.__ToTextStyle());
    },
    get C706() {
      return C[706] = dart.fn(google_fonts.GoogleFonts.pangolin, T.__ToTextStyle());
    },
    get C707() {
      return C[707] = dart.fn(google_fonts.GoogleFonts.paprika, T.__ToTextStyle());
    },
    get C708() {
      return C[708] = dart.fn(google_fonts.GoogleFonts.parisienne, T.__ToTextStyle());
    },
    get C709() {
      return C[709] = dart.fn(google_fonts.GoogleFonts.passeroOne, T.__ToTextStyle());
    },
    get C710() {
      return C[710] = dart.fn(google_fonts.GoogleFonts.passionOne, T.__ToTextStyle());
    },
    get C711() {
      return C[711] = dart.fn(google_fonts.GoogleFonts.pathwayGothicOne, T.__ToTextStyle());
    },
    get C712() {
      return C[712] = dart.fn(google_fonts.GoogleFonts.patrickHand, T.__ToTextStyle());
    },
    get C713() {
      return C[713] = dart.fn(google_fonts.GoogleFonts.patrickHandSc, T.__ToTextStyle());
    },
    get C714() {
      return C[714] = dart.fn(google_fonts.GoogleFonts.pattaya, T.__ToTextStyle());
    },
    get C715() {
      return C[715] = dart.fn(google_fonts.GoogleFonts.patuaOne, T.__ToTextStyle());
    },
    get C716() {
      return C[716] = dart.fn(google_fonts.GoogleFonts.pavanam, T.__ToTextStyle());
    },
    get C717() {
      return C[717] = dart.fn(google_fonts.GoogleFonts.paytoneOne, T.__ToTextStyle());
    },
    get C718() {
      return C[718] = dart.fn(google_fonts.GoogleFonts.peddana, T.__ToTextStyle());
    },
    get C719() {
      return C[719] = dart.fn(google_fonts.GoogleFonts.peralta, T.__ToTextStyle());
    },
    get C720() {
      return C[720] = dart.fn(google_fonts.GoogleFonts.permanentMarker, T.__ToTextStyle());
    },
    get C721() {
      return C[721] = dart.fn(google_fonts.GoogleFonts.petitFormalScript, T.__ToTextStyle());
    },
    get C722() {
      return C[722] = dart.fn(google_fonts.GoogleFonts.petrona, T.__ToTextStyle());
    },
    get C723() {
      return C[723] = dart.fn(google_fonts.GoogleFonts.philosopher, T.__ToTextStyle());
    },
    get C724() {
      return C[724] = dart.fn(google_fonts.GoogleFonts.piazzolla, T.__ToTextStyle());
    },
    get C725() {
      return C[725] = dart.fn(google_fonts.GoogleFonts.piedra, T.__ToTextStyle());
    },
    get C726() {
      return C[726] = dart.fn(google_fonts.GoogleFonts.pinyonScript, T.__ToTextStyle());
    },
    get C727() {
      return C[727] = dart.fn(google_fonts.GoogleFonts.pirataOne, T.__ToTextStyle());
    },
    get C728() {
      return C[728] = dart.fn(google_fonts.GoogleFonts.plaster, T.__ToTextStyle());
    },
    get C729() {
      return C[729] = dart.fn(google_fonts.GoogleFonts.play, T.__ToTextStyle());
    },
    get C730() {
      return C[730] = dart.fn(google_fonts.GoogleFonts.playball, T.__ToTextStyle());
    },
    get C731() {
      return C[731] = dart.fn(google_fonts.GoogleFonts.playfairDisplay, T.__ToTextStyle());
    },
    get C732() {
      return C[732] = dart.fn(google_fonts.GoogleFonts.playfairDisplaySc, T.__ToTextStyle());
    },
    get C733() {
      return C[733] = dart.fn(google_fonts.GoogleFonts.podkova, T.__ToTextStyle());
    },
    get C734() {
      return C[734] = dart.fn(google_fonts.GoogleFonts.poiretOne, T.__ToTextStyle());
    },
    get C735() {
      return C[735] = dart.fn(google_fonts.GoogleFonts.pollerOne, T.__ToTextStyle());
    },
    get C736() {
      return C[736] = dart.fn(google_fonts.GoogleFonts.poly, T.__ToTextStyle());
    },
    get C737() {
      return C[737] = dart.fn(google_fonts.GoogleFonts.pompiere, T.__ToTextStyle());
    },
    get C738() {
      return C[738] = dart.fn(google_fonts.GoogleFonts.pontanoSans, T.__ToTextStyle());
    },
    get C739() {
      return C[739] = dart.fn(google_fonts.GoogleFonts.poorStory, T.__ToTextStyle());
    },
    get C740() {
      return C[740] = dart.fn(google_fonts.GoogleFonts.poppins, T.__ToTextStyle());
    },
    get C741() {
      return C[741] = dart.fn(google_fonts.GoogleFonts.portLligatSans, T.__ToTextStyle());
    },
    get C742() {
      return C[742] = dart.fn(google_fonts.GoogleFonts.portLligatSlab, T.__ToTextStyle());
    },
    get C743() {
      return C[743] = dart.fn(google_fonts.GoogleFonts.pottaOne, T.__ToTextStyle());
    },
    get C744() {
      return C[744] = dart.fn(google_fonts.GoogleFonts.pragatiNarrow, T.__ToTextStyle());
    },
    get C745() {
      return C[745] = dart.fn(google_fonts.GoogleFonts.prata, T.__ToTextStyle());
    },
    get C746() {
      return C[746] = dart.fn(google_fonts.GoogleFonts.pressStart2p, T.__ToTextStyle());
    },
    get C747() {
      return C[747] = dart.fn(google_fonts.GoogleFonts.pridi, T.__ToTextStyle());
    },
    get C748() {
      return C[748] = dart.fn(google_fonts.GoogleFonts.princessSofia, T.__ToTextStyle());
    },
    get C749() {
      return C[749] = dart.fn(google_fonts.GoogleFonts.prociono, T.__ToTextStyle());
    },
    get C750() {
      return C[750] = dart.fn(google_fonts.GoogleFonts.prompt, T.__ToTextStyle());
    },
    get C751() {
      return C[751] = dart.fn(google_fonts.GoogleFonts.prostoOne, T.__ToTextStyle());
    },
    get C752() {
      return C[752] = dart.fn(google_fonts.GoogleFonts.prozaLibre, T.__ToTextStyle());
    },
    get C753() {
      return C[753] = dart.fn(google_fonts.GoogleFonts.publicSans, T.__ToTextStyle());
    },
    get C754() {
      return C[754] = dart.fn(google_fonts.GoogleFonts.puritan, T.__ToTextStyle());
    },
    get C755() {
      return C[755] = dart.fn(google_fonts.GoogleFonts.purplePurse, T.__ToTextStyle());
    },
    get C756() {
      return C[756] = dart.fn(google_fonts.GoogleFonts.quando, T.__ToTextStyle());
    },
    get C757() {
      return C[757] = dart.fn(google_fonts.GoogleFonts.quantico, T.__ToTextStyle());
    },
    get C758() {
      return C[758] = dart.fn(google_fonts.GoogleFonts.quattrocento, T.__ToTextStyle());
    },
    get C759() {
      return C[759] = dart.fn(google_fonts.GoogleFonts.quattrocentoSans, T.__ToTextStyle());
    },
    get C760() {
      return C[760] = dart.fn(google_fonts.GoogleFonts.questrial, T.__ToTextStyle());
    },
    get C761() {
      return C[761] = dart.fn(google_fonts.GoogleFonts.quicksand, T.__ToTextStyle());
    },
    get C762() {
      return C[762] = dart.fn(google_fonts.GoogleFonts.quintessential, T.__ToTextStyle());
    },
    get C763() {
      return C[763] = dart.fn(google_fonts.GoogleFonts.qwigley, T.__ToTextStyle());
    },
    get C764() {
      return C[764] = dart.fn(google_fonts.GoogleFonts.racingSansOne, T.__ToTextStyle());
    },
    get C765() {
      return C[765] = dart.fn(google_fonts.GoogleFonts.radley, T.__ToTextStyle());
    },
    get C766() {
      return C[766] = dart.fn(google_fonts.GoogleFonts.rajdhani, T.__ToTextStyle());
    },
    get C767() {
      return C[767] = dart.fn(google_fonts.GoogleFonts.rakkas, T.__ToTextStyle());
    },
    get C768() {
      return C[768] = dart.fn(google_fonts.GoogleFonts.raleway, T.__ToTextStyle());
    },
    get C769() {
      return C[769] = dart.fn(google_fonts.GoogleFonts.ralewayDots, T.__ToTextStyle());
    },
    get C770() {
      return C[770] = dart.fn(google_fonts.GoogleFonts.ramabhadra, T.__ToTextStyle());
    },
    get C771() {
      return C[771] = dart.fn(google_fonts.GoogleFonts.ramaraja, T.__ToTextStyle());
    },
    get C772() {
      return C[772] = dart.fn(google_fonts.GoogleFonts.rambla, T.__ToTextStyle());
    },
    get C773() {
      return C[773] = dart.fn(google_fonts.GoogleFonts.rammettoOne, T.__ToTextStyle());
    },
    get C774() {
      return C[774] = dart.fn(google_fonts.GoogleFonts.ranchers, T.__ToTextStyle());
    },
    get C775() {
      return C[775] = dart.fn(google_fonts.GoogleFonts.rancho, T.__ToTextStyle());
    },
    get C776() {
      return C[776] = dart.fn(google_fonts.GoogleFonts.ranga, T.__ToTextStyle());
    },
    get C777() {
      return C[777] = dart.fn(google_fonts.GoogleFonts.rasa, T.__ToTextStyle());
    },
    get C778() {
      return C[778] = dart.fn(google_fonts.GoogleFonts.rationale, T.__ToTextStyle());
    },
    get C779() {
      return C[779] = dart.fn(google_fonts.GoogleFonts.raviPrakash, T.__ToTextStyle());
    },
    get C780() {
      return C[780] = dart.fn(google_fonts.GoogleFonts.recursive, T.__ToTextStyle());
    },
    get C781() {
      return C[781] = dart.fn(google_fonts.GoogleFonts.redHatDisplay, T.__ToTextStyle());
    },
    get C782() {
      return C[782] = dart.fn(google_fonts.GoogleFonts.redHatText, T.__ToTextStyle());
    },
    get C783() {
      return C[783] = dart.fn(google_fonts.GoogleFonts.redRose, T.__ToTextStyle());
    },
    get C784() {
      return C[784] = dart.fn(google_fonts.GoogleFonts.redressed, T.__ToTextStyle());
    },
    get C785() {
      return C[785] = dart.fn(google_fonts.GoogleFonts.reemKufi, T.__ToTextStyle());
    },
    get C786() {
      return C[786] = dart.fn(google_fonts.GoogleFonts.reenieBeanie, T.__ToTextStyle());
    },
    get C787() {
      return C[787] = dart.fn(google_fonts.GoogleFonts.revalia, T.__ToTextStyle());
    },
    get C788() {
      return C[788] = dart.fn(google_fonts.GoogleFonts.rhodiumLibre, T.__ToTextStyle());
    },
    get C789() {
      return C[789] = dart.fn(google_fonts.GoogleFonts.ribeye, T.__ToTextStyle());
    },
    get C790() {
      return C[790] = dart.fn(google_fonts.GoogleFonts.ribeyeMarrow, T.__ToTextStyle());
    },
    get C791() {
      return C[791] = dart.fn(google_fonts.GoogleFonts.righteous, T.__ToTextStyle());
    },
    get C792() {
      return C[792] = dart.fn(google_fonts.GoogleFonts.risque, T.__ToTextStyle());
    },
    get C793() {
      return C[793] = dart.fn(google_fonts.GoogleFonts.roboto, T.__ToTextStyle());
    },
    get C794() {
      return C[794] = dart.fn(google_fonts.GoogleFonts.robotoCondensed, T.__ToTextStyle());
    },
    get C795() {
      return C[795] = dart.fn(google_fonts.GoogleFonts.robotoMono, T.__ToTextStyle());
    },
    get C796() {
      return C[796] = dart.fn(google_fonts.GoogleFonts.robotoSlab, T.__ToTextStyle());
    },
    get C797() {
      return C[797] = dart.fn(google_fonts.GoogleFonts.rochester, T.__ToTextStyle());
    },
    get C798() {
      return C[798] = dart.fn(google_fonts.GoogleFonts.rockSalt, T.__ToTextStyle());
    },
    get C799() {
      return C[799] = dart.fn(google_fonts.GoogleFonts.rokkitt, T.__ToTextStyle());
    },
    get C800() {
      return C[800] = dart.fn(google_fonts.GoogleFonts.romanesco, T.__ToTextStyle());
    },
    get C801() {
      return C[801] = dart.fn(google_fonts.GoogleFonts.ropaSans, T.__ToTextStyle());
    },
    get C802() {
      return C[802] = dart.fn(google_fonts.GoogleFonts.rosario, T.__ToTextStyle());
    },
    get C803() {
      return C[803] = dart.fn(google_fonts.GoogleFonts.rosarivo, T.__ToTextStyle());
    },
    get C804() {
      return C[804] = dart.fn(google_fonts.GoogleFonts.rougeScript, T.__ToTextStyle());
    },
    get C805() {
      return C[805] = dart.fn(google_fonts.GoogleFonts.rowdies, T.__ToTextStyle());
    },
    get C806() {
      return C[806] = dart.fn(google_fonts.GoogleFonts.rozhaOne, T.__ToTextStyle());
    },
    get C807() {
      return C[807] = dart.fn(google_fonts.GoogleFonts.rubik, T.__ToTextStyle());
    },
    get C808() {
      return C[808] = dart.fn(google_fonts.GoogleFonts.rubikMonoOne, T.__ToTextStyle());
    },
    get C809() {
      return C[809] = dart.fn(google_fonts.GoogleFonts.ruda, T.__ToTextStyle());
    },
    get C810() {
      return C[810] = dart.fn(google_fonts.GoogleFonts.rufina, T.__ToTextStyle());
    },
    get C811() {
      return C[811] = dart.fn(google_fonts.GoogleFonts.rugeBoogie, T.__ToTextStyle());
    },
    get C812() {
      return C[812] = dart.fn(google_fonts.GoogleFonts.ruluko, T.__ToTextStyle());
    },
    get C813() {
      return C[813] = dart.fn(google_fonts.GoogleFonts.rumRaisin, T.__ToTextStyle());
    },
    get C814() {
      return C[814] = dart.fn(google_fonts.GoogleFonts.ruslanDisplay, T.__ToTextStyle());
    },
    get C815() {
      return C[815] = dart.fn(google_fonts.GoogleFonts.russoOne, T.__ToTextStyle());
    },
    get C816() {
      return C[816] = dart.fn(google_fonts.GoogleFonts.ruthie, T.__ToTextStyle());
    },
    get C817() {
      return C[817] = dart.fn(google_fonts.GoogleFonts.rye, T.__ToTextStyle());
    },
    get C818() {
      return C[818] = dart.fn(google_fonts.GoogleFonts.sacramento, T.__ToTextStyle());
    },
    get C819() {
      return C[819] = dart.fn(google_fonts.GoogleFonts.sahitya, T.__ToTextStyle());
    },
    get C820() {
      return C[820] = dart.fn(google_fonts.GoogleFonts.sail, T.__ToTextStyle());
    },
    get C821() {
      return C[821] = dart.fn(google_fonts.GoogleFonts.saira, T.__ToTextStyle());
    },
    get C822() {
      return C[822] = dart.fn(google_fonts.GoogleFonts.sairaCondensed, T.__ToTextStyle());
    },
    get C823() {
      return C[823] = dart.fn(google_fonts.GoogleFonts.sairaExtraCondensed, T.__ToTextStyle());
    },
    get C824() {
      return C[824] = dart.fn(google_fonts.GoogleFonts.sairaSemiCondensed, T.__ToTextStyle());
    },
    get C825() {
      return C[825] = dart.fn(google_fonts.GoogleFonts.sairaStencilOne, T.__ToTextStyle());
    },
    get C826() {
      return C[826] = dart.fn(google_fonts.GoogleFonts.salsa, T.__ToTextStyle());
    },
    get C827() {
      return C[827] = dart.fn(google_fonts.GoogleFonts.sanchez, T.__ToTextStyle());
    },
    get C828() {
      return C[828] = dart.fn(google_fonts.GoogleFonts.sancreek, T.__ToTextStyle());
    },
    get C829() {
      return C[829] = dart.fn(google_fonts.GoogleFonts.sansita, T.__ToTextStyle());
    },
    get C830() {
      return C[830] = dart.fn(google_fonts.GoogleFonts.sansitaSwashed, T.__ToTextStyle());
    },
    get C831() {
      return C[831] = dart.fn(google_fonts.GoogleFonts.sarabun, T.__ToTextStyle());
    },
    get C832() {
      return C[832] = dart.fn(google_fonts.GoogleFonts.sarala, T.__ToTextStyle());
    },
    get C833() {
      return C[833] = dart.fn(google_fonts.GoogleFonts.sarina, T.__ToTextStyle());
    },
    get C834() {
      return C[834] = dart.fn(google_fonts.GoogleFonts.sarpanch, T.__ToTextStyle());
    },
    get C835() {
      return C[835] = dart.fn(google_fonts.GoogleFonts.satisfy, T.__ToTextStyle());
    },
    get C836() {
      return C[836] = dart.fn(google_fonts.GoogleFonts.sawarabiGothic, T.__ToTextStyle());
    },
    get C837() {
      return C[837] = dart.fn(google_fonts.GoogleFonts.sawarabiMincho, T.__ToTextStyle());
    },
    get C838() {
      return C[838] = dart.fn(google_fonts.GoogleFonts.scada, T.__ToTextStyle());
    },
    get C839() {
      return C[839] = dart.fn(google_fonts.GoogleFonts.scheherazade, T.__ToTextStyle());
    },
    get C840() {
      return C[840] = dart.fn(google_fonts.GoogleFonts.schoolbell, T.__ToTextStyle());
    },
    get C841() {
      return C[841] = dart.fn(google_fonts.GoogleFonts.scopeOne, T.__ToTextStyle());
    },
    get C842() {
      return C[842] = dart.fn(google_fonts.GoogleFonts.seaweedScript, T.__ToTextStyle());
    },
    get C843() {
      return C[843] = dart.fn(google_fonts.GoogleFonts.secularOne, T.__ToTextStyle());
    },
    get C844() {
      return C[844] = dart.fn(google_fonts.GoogleFonts.sedgwickAve, T.__ToTextStyle());
    },
    get C845() {
      return C[845] = dart.fn(google_fonts.GoogleFonts.sedgwickAveDisplay, T.__ToTextStyle());
    },
    get C846() {
      return C[846] = dart.fn(google_fonts.GoogleFonts.sen, T.__ToTextStyle());
    },
    get C847() {
      return C[847] = dart.fn(google_fonts.GoogleFonts.sevillana, T.__ToTextStyle());
    },
    get C848() {
      return C[848] = dart.fn(google_fonts.GoogleFonts.seymourOne, T.__ToTextStyle());
    },
    get C849() {
      return C[849] = dart.fn(google_fonts.GoogleFonts.shadowsIntoLight, T.__ToTextStyle());
    },
    get C850() {
      return C[850] = dart.fn(google_fonts.GoogleFonts.shadowsIntoLightTwo, T.__ToTextStyle());
    },
    get C851() {
      return C[851] = dart.fn(google_fonts.GoogleFonts.shanti, T.__ToTextStyle());
    },
    get C852() {
      return C[852] = dart.fn(google_fonts.GoogleFonts.share, T.__ToTextStyle());
    },
    get C853() {
      return C[853] = dart.fn(google_fonts.GoogleFonts.shareTech, T.__ToTextStyle());
    },
    get C854() {
      return C[854] = dart.fn(google_fonts.GoogleFonts.shareTechMono, T.__ToTextStyle());
    },
    get C855() {
      return C[855] = dart.fn(google_fonts.GoogleFonts.shojumaru, T.__ToTextStyle());
    },
    get C856() {
      return C[856] = dart.fn(google_fonts.GoogleFonts.shortStack, T.__ToTextStyle());
    },
    get C857() {
      return C[857] = dart.fn(google_fonts.GoogleFonts.shrikhand, T.__ToTextStyle());
    },
    get C858() {
      return C[858] = dart.fn(google_fonts.GoogleFonts.sigmarOne, T.__ToTextStyle());
    },
    get C859() {
      return C[859] = dart.fn(google_fonts.GoogleFonts.signika, T.__ToTextStyle());
    },
    get C860() {
      return C[860] = dart.fn(google_fonts.GoogleFonts.signikaNegative, T.__ToTextStyle());
    },
    get C861() {
      return C[861] = dart.fn(google_fonts.GoogleFonts.simonetta, T.__ToTextStyle());
    },
    get C862() {
      return C[862] = dart.fn(google_fonts.GoogleFonts.singleDay, T.__ToTextStyle());
    },
    get C863() {
      return C[863] = dart.fn(google_fonts.GoogleFonts.sintony, T.__ToTextStyle());
    },
    get C864() {
      return C[864] = dart.fn(google_fonts.GoogleFonts.sirinStencil, T.__ToTextStyle());
    },
    get C865() {
      return C[865] = dart.fn(google_fonts.GoogleFonts.sixCaps, T.__ToTextStyle());
    },
    get C866() {
      return C[866] = dart.fn(google_fonts.GoogleFonts.skranji, T.__ToTextStyle());
    },
    get C867() {
      return C[867] = dart.fn(google_fonts.GoogleFonts.slabo13px, T.__ToTextStyle());
    },
    get C868() {
      return C[868] = dart.fn(google_fonts.GoogleFonts.slabo27px, T.__ToTextStyle());
    },
    get C869() {
      return C[869] = dart.fn(google_fonts.GoogleFonts.slackey, T.__ToTextStyle());
    },
    get C870() {
      return C[870] = dart.fn(google_fonts.GoogleFonts.smokum, T.__ToTextStyle());
    },
    get C871() {
      return C[871] = dart.fn(google_fonts.GoogleFonts.smythe, T.__ToTextStyle());
    },
    get C872() {
      return C[872] = dart.fn(google_fonts.GoogleFonts.sniglet, T.__ToTextStyle());
    },
    get C873() {
      return C[873] = dart.fn(google_fonts.GoogleFonts.snippet, T.__ToTextStyle());
    },
    get C874() {
      return C[874] = dart.fn(google_fonts.GoogleFonts.snowburstOne, T.__ToTextStyle());
    },
    get C875() {
      return C[875] = dart.fn(google_fonts.GoogleFonts.sofadiOne, T.__ToTextStyle());
    },
    get C876() {
      return C[876] = dart.fn(google_fonts.GoogleFonts.sofia, T.__ToTextStyle());
    },
    get C877() {
      return C[877] = dart.fn(google_fonts.GoogleFonts.solway, T.__ToTextStyle());
    },
    get C878() {
      return C[878] = dart.fn(google_fonts.GoogleFonts.songMyung, T.__ToTextStyle());
    },
    get C879() {
      return C[879] = dart.fn(google_fonts.GoogleFonts.sonsieOne, T.__ToTextStyle());
    },
    get C880() {
      return C[880] = dart.fn(google_fonts.GoogleFonts.sora, T.__ToTextStyle());
    },
    get C881() {
      return C[881] = dart.fn(google_fonts.GoogleFonts.sortsMillGoudy, T.__ToTextStyle());
    },
    get C882() {
      return C[882] = dart.fn(google_fonts.GoogleFonts.sourceCodePro, T.__ToTextStyle());
    },
    get C883() {
      return C[883] = dart.fn(google_fonts.GoogleFonts.sourceSansPro, T.__ToTextStyle());
    },
    get C884() {
      return C[884] = dart.fn(google_fonts.GoogleFonts.sourceSerifPro, T.__ToTextStyle());
    },
    get C885() {
      return C[885] = dart.fn(google_fonts.GoogleFonts.spaceGrotesk, T.__ToTextStyle());
    },
    get C886() {
      return C[886] = dart.fn(google_fonts.GoogleFonts.spaceMono, T.__ToTextStyle());
    },
    get C887() {
      return C[887] = dart.fn(google_fonts.GoogleFonts.spartan, T.__ToTextStyle());
    },
    get C888() {
      return C[888] = dart.fn(google_fonts.GoogleFonts.specialElite, T.__ToTextStyle());
    },
    get C889() {
      return C[889] = dart.fn(google_fonts.GoogleFonts.spectral, T.__ToTextStyle());
    },
    get C890() {
      return C[890] = dart.fn(google_fonts.GoogleFonts.spectralSc, T.__ToTextStyle());
    },
    get C891() {
      return C[891] = dart.fn(google_fonts.GoogleFonts.spicyRice, T.__ToTextStyle());
    },
    get C892() {
      return C[892] = dart.fn(google_fonts.GoogleFonts.spinnaker, T.__ToTextStyle());
    },
    get C893() {
      return C[893] = dart.fn(google_fonts.GoogleFonts.spirax, T.__ToTextStyle());
    },
    get C894() {
      return C[894] = dart.fn(google_fonts.GoogleFonts.squadaOne, T.__ToTextStyle());
    },
    get C895() {
      return C[895] = dart.fn(google_fonts.GoogleFonts.sreeKrushnadevaraya, T.__ToTextStyle());
    },
    get C896() {
      return C[896] = dart.fn(google_fonts.GoogleFonts.sriracha, T.__ToTextStyle());
    },
    get C897() {
      return C[897] = dart.fn(google_fonts.GoogleFonts.srisakdi, T.__ToTextStyle());
    },
    get C898() {
      return C[898] = dart.fn(google_fonts.GoogleFonts.staatliches, T.__ToTextStyle());
    },
    get C899() {
      return C[899] = dart.fn(google_fonts.GoogleFonts.stalemate, T.__ToTextStyle());
    },
    get C900() {
      return C[900] = dart.fn(google_fonts.GoogleFonts.stalinistOne, T.__ToTextStyle());
    },
    get C901() {
      return C[901] = dart.fn(google_fonts.GoogleFonts.stardosStencil, T.__ToTextStyle());
    },
    get C902() {
      return C[902] = dart.fn(google_fonts.GoogleFonts.stintUltraCondensed, T.__ToTextStyle());
    },
    get C903() {
      return C[903] = dart.fn(google_fonts.GoogleFonts.stintUltraExpanded, T.__ToTextStyle());
    },
    get C904() {
      return C[904] = dart.fn(google_fonts.GoogleFonts.stoke, T.__ToTextStyle());
    },
    get C905() {
      return C[905] = dart.fn(google_fonts.GoogleFonts.strait, T.__ToTextStyle());
    },
    get C906() {
      return C[906] = dart.fn(google_fonts.GoogleFonts.stylish, T.__ToTextStyle());
    },
    get C907() {
      return C[907] = dart.fn(google_fonts.GoogleFonts.sueEllenFrancisco, T.__ToTextStyle());
    },
    get C908() {
      return C[908] = dart.fn(google_fonts.GoogleFonts.suezOne, T.__ToTextStyle());
    },
    get C909() {
      return C[909] = dart.fn(google_fonts.GoogleFonts.sulphurPoint, T.__ToTextStyle());
    },
    get C910() {
      return C[910] = dart.fn(google_fonts.GoogleFonts.sumana, T.__ToTextStyle());
    },
    get C911() {
      return C[911] = dart.fn(google_fonts.GoogleFonts.sunflower, T.__ToTextStyle());
    },
    get C912() {
      return C[912] = dart.fn(google_fonts.GoogleFonts.sunshiney, T.__ToTextStyle());
    },
    get C913() {
      return C[913] = dart.fn(google_fonts.GoogleFonts.supermercadoOne, T.__ToTextStyle());
    },
    get C914() {
      return C[914] = dart.fn(google_fonts.GoogleFonts.sura, T.__ToTextStyle());
    },
    get C915() {
      return C[915] = dart.fn(google_fonts.GoogleFonts.suranna, T.__ToTextStyle());
    },
    get C916() {
      return C[916] = dart.fn(google_fonts.GoogleFonts.suravaram, T.__ToTextStyle());
    },
    get C917() {
      return C[917] = dart.fn(google_fonts.GoogleFonts.swankyAndMooMoo, T.__ToTextStyle());
    },
    get C918() {
      return C[918] = dart.fn(google_fonts.GoogleFonts.syncopate, T.__ToTextStyle());
    },
    get C919() {
      return C[919] = dart.fn(google_fonts.GoogleFonts.syne, T.__ToTextStyle());
    },
    get C920() {
      return C[920] = dart.fn(google_fonts.GoogleFonts.syneMono, T.__ToTextStyle());
    },
    get C921() {
      return C[921] = dart.fn(google_fonts.GoogleFonts.syneTactile, T.__ToTextStyle());
    },
    get C922() {
      return C[922] = dart.fn(google_fonts.GoogleFonts.tajawal, T.__ToTextStyle());
    },
    get C923() {
      return C[923] = dart.fn(google_fonts.GoogleFonts.tangerine, T.__ToTextStyle());
    },
    get C924() {
      return C[924] = dart.fn(google_fonts.GoogleFonts.tauri, T.__ToTextStyle());
    },
    get C925() {
      return C[925] = dart.fn(google_fonts.GoogleFonts.taviraj, T.__ToTextStyle());
    },
    get C926() {
      return C[926] = dart.fn(google_fonts.GoogleFonts.teko, T.__ToTextStyle());
    },
    get C927() {
      return C[927] = dart.fn(google_fonts.GoogleFonts.telex, T.__ToTextStyle());
    },
    get C928() {
      return C[928] = dart.fn(google_fonts.GoogleFonts.tenaliRamakrishna, T.__ToTextStyle());
    },
    get C929() {
      return C[929] = dart.fn(google_fonts.GoogleFonts.tenorSans, T.__ToTextStyle());
    },
    get C930() {
      return C[930] = dart.fn(google_fonts.GoogleFonts.textMeOne, T.__ToTextStyle());
    },
    get C931() {
      return C[931] = dart.fn(google_fonts.GoogleFonts.thasadith, T.__ToTextStyle());
    },
    get C932() {
      return C[932] = dart.fn(google_fonts.GoogleFonts.theGirlNextDoor, T.__ToTextStyle());
    },
    get C933() {
      return C[933] = dart.fn(google_fonts.GoogleFonts.tienne, T.__ToTextStyle());
    },
    get C934() {
      return C[934] = dart.fn(google_fonts.GoogleFonts.tillana, T.__ToTextStyle());
    },
    get C935() {
      return C[935] = dart.fn(google_fonts.GoogleFonts.timmana, T.__ToTextStyle());
    },
    get C936() {
      return C[936] = dart.fn(google_fonts.GoogleFonts.tinos, T.__ToTextStyle());
    },
    get C937() {
      return C[937] = dart.fn(google_fonts.GoogleFonts.titanOne, T.__ToTextStyle());
    },
    get C938() {
      return C[938] = dart.fn(google_fonts.GoogleFonts.titilliumWeb, T.__ToTextStyle());
    },
    get C939() {
      return C[939] = dart.fn(google_fonts.GoogleFonts.tomorrow, T.__ToTextStyle());
    },
    get C940() {
      return C[940] = dart.fn(google_fonts.GoogleFonts.tradeWinds, T.__ToTextStyle());
    },
    get C941() {
      return C[941] = dart.fn(google_fonts.GoogleFonts.trirong, T.__ToTextStyle());
    },
    get C942() {
      return C[942] = dart.fn(google_fonts.GoogleFonts.trispace, T.__ToTextStyle());
    },
    get C943() {
      return C[943] = dart.fn(google_fonts.GoogleFonts.trocchi, T.__ToTextStyle());
    },
    get C944() {
      return C[944] = dart.fn(google_fonts.GoogleFonts.trochut, T.__ToTextStyle());
    },
    get C945() {
      return C[945] = dart.fn(google_fonts.GoogleFonts.trykker, T.__ToTextStyle());
    },
    get C946() {
      return C[946] = dart.fn(google_fonts.GoogleFonts.tulpenOne, T.__ToTextStyle());
    },
    get C947() {
      return C[947] = dart.fn(google_fonts.GoogleFonts.turretRoad, T.__ToTextStyle());
    },
    get C948() {
      return C[948] = dart.fn(google_fonts.GoogleFonts.ubuntu, T.__ToTextStyle());
    },
    get C949() {
      return C[949] = dart.fn(google_fonts.GoogleFonts.ubuntuCondensed, T.__ToTextStyle());
    },
    get C950() {
      return C[950] = dart.fn(google_fonts.GoogleFonts.ubuntuMono, T.__ToTextStyle());
    },
    get C951() {
      return C[951] = dart.fn(google_fonts.GoogleFonts.ultra, T.__ToTextStyle());
    },
    get C952() {
      return C[952] = dart.fn(google_fonts.GoogleFonts.uncialAntiqua, T.__ToTextStyle());
    },
    get C953() {
      return C[953] = dart.fn(google_fonts.GoogleFonts.underdog, T.__ToTextStyle());
    },
    get C954() {
      return C[954] = dart.fn(google_fonts.GoogleFonts.unicaOne, T.__ToTextStyle());
    },
    get C955() {
      return C[955] = dart.fn(google_fonts.GoogleFonts.unifrakturCook, T.__ToTextStyle());
    },
    get C956() {
      return C[956] = dart.fn(google_fonts.GoogleFonts.unifrakturMaguntia, T.__ToTextStyle());
    },
    get C957() {
      return C[957] = dart.fn(google_fonts.GoogleFonts.unkempt, T.__ToTextStyle());
    },
    get C958() {
      return C[958] = dart.fn(google_fonts.GoogleFonts.unlock, T.__ToTextStyle());
    },
    get C959() {
      return C[959] = dart.fn(google_fonts.GoogleFonts.unna, T.__ToTextStyle());
    },
    get C960() {
      return C[960] = dart.fn(google_fonts.GoogleFonts.vt323, T.__ToTextStyle());
    },
    get C961() {
      return C[961] = dart.fn(google_fonts.GoogleFonts.vampiroOne, T.__ToTextStyle());
    },
    get C962() {
      return C[962] = dart.fn(google_fonts.GoogleFonts.varela, T.__ToTextStyle());
    },
    get C963() {
      return C[963] = dart.fn(google_fonts.GoogleFonts.varelaRound, T.__ToTextStyle());
    },
    get C964() {
      return C[964] = dart.fn(google_fonts.GoogleFonts.varta, T.__ToTextStyle());
    },
    get C965() {
      return C[965] = dart.fn(google_fonts.GoogleFonts.vastShadow, T.__ToTextStyle());
    },
    get C966() {
      return C[966] = dart.fn(google_fonts.GoogleFonts.vesperLibre, T.__ToTextStyle());
    },
    get C967() {
      return C[967] = dart.fn(google_fonts.GoogleFonts.viaodaLibre, T.__ToTextStyle());
    },
    get C968() {
      return C[968] = dart.fn(google_fonts.GoogleFonts.vibes, T.__ToTextStyle());
    },
    get C969() {
      return C[969] = dart.fn(google_fonts.GoogleFonts.vibur, T.__ToTextStyle());
    },
    get C970() {
      return C[970] = dart.fn(google_fonts.GoogleFonts.vidaloka, T.__ToTextStyle());
    },
    get C971() {
      return C[971] = dart.fn(google_fonts.GoogleFonts.viga, T.__ToTextStyle());
    },
    get C972() {
      return C[972] = dart.fn(google_fonts.GoogleFonts.voces, T.__ToTextStyle());
    },
    get C973() {
      return C[973] = dart.fn(google_fonts.GoogleFonts.volkhov, T.__ToTextStyle());
    },
    get C974() {
      return C[974] = dart.fn(google_fonts.GoogleFonts.vollkorn, T.__ToTextStyle());
    },
    get C975() {
      return C[975] = dart.fn(google_fonts.GoogleFonts.vollkornSc, T.__ToTextStyle());
    },
    get C976() {
      return C[976] = dart.fn(google_fonts.GoogleFonts.voltaire, T.__ToTextStyle());
    },
    get C977() {
      return C[977] = dart.fn(google_fonts.GoogleFonts.waitingForTheSunrise, T.__ToTextStyle());
    },
    get C978() {
      return C[978] = dart.fn(google_fonts.GoogleFonts.wallpoet, T.__ToTextStyle());
    },
    get C979() {
      return C[979] = dart.fn(google_fonts.GoogleFonts.walterTurncoat, T.__ToTextStyle());
    },
    get C980() {
      return C[980] = dart.fn(google_fonts.GoogleFonts.warnes, T.__ToTextStyle());
    },
    get C981() {
      return C[981] = dart.fn(google_fonts.GoogleFonts.wellfleet, T.__ToTextStyle());
    },
    get C982() {
      return C[982] = dart.fn(google_fonts.GoogleFonts.wendyOne, T.__ToTextStyle());
    },
    get C983() {
      return C[983] = dart.fn(google_fonts.GoogleFonts.wireOne, T.__ToTextStyle());
    },
    get C984() {
      return C[984] = dart.fn(google_fonts.GoogleFonts.workSans, T.__ToTextStyle());
    },
    get C985() {
      return C[985] = dart.fn(google_fonts.GoogleFonts.xanhMono, T.__ToTextStyle());
    },
    get C986() {
      return C[986] = dart.fn(google_fonts.GoogleFonts.yanoneKaffeesatz, T.__ToTextStyle());
    },
    get C987() {
      return C[987] = dart.fn(google_fonts.GoogleFonts.yantramanav, T.__ToTextStyle());
    },
    get C988() {
      return C[988] = dart.fn(google_fonts.GoogleFonts.yatraOne, T.__ToTextStyle());
    },
    get C989() {
      return C[989] = dart.fn(google_fonts.GoogleFonts.yellowtail, T.__ToTextStyle());
    },
    get C990() {
      return C[990] = dart.fn(google_fonts.GoogleFonts.yeonSung, T.__ToTextStyle());
    },
    get C991() {
      return C[991] = dart.fn(google_fonts.GoogleFonts.yesevaOne, T.__ToTextStyle());
    },
    get C992() {
      return C[992] = dart.fn(google_fonts.GoogleFonts.yesteryear, T.__ToTextStyle());
    },
    get C993() {
      return C[993] = dart.fn(google_fonts.GoogleFonts.yrsa, T.__ToTextStyle());
    },
    get C994() {
      return C[994] = dart.fn(google_fonts.GoogleFonts.yuseiMagic, T.__ToTextStyle());
    },
    get C995() {
      return C[995] = dart.fn(google_fonts.GoogleFonts.zcoolKuaiLe, T.__ToTextStyle());
    },
    get C996() {
      return C[996] = dart.fn(google_fonts.GoogleFonts.zcoolQingKeHuangYou, T.__ToTextStyle());
    },
    get C997() {
      return C[997] = dart.fn(google_fonts.GoogleFonts.zcoolXiaoWei, T.__ToTextStyle());
    },
    get C998() {
      return C[998] = dart.fn(google_fonts.GoogleFonts.zeyada, T.__ToTextStyle());
    },
    get C999() {
      return C[999] = dart.fn(google_fonts.GoogleFonts.zhiMangXing, T.__ToTextStyle());
    },
    get C1000() {
      return C[1000] = dart.fn(google_fonts.GoogleFonts.zillaSlab, T.__ToTextStyle());
    },
    get C1001() {
      return C[1001] = dart.fn(google_fonts.GoogleFonts.zillaSlabHighlight, T.__ToTextStyle());
    },
    get C0() {
      return C[0] = dart.constMap(T.StringL(), T.__ToLTextStyleL(), ["ABeeZee", C[1] || CT.C1, "Abel", C[2] || CT.C2, "Abhaya Libre", C[3] || CT.C3, "Abril Fatface", C[4] || CT.C4, "Aclonica", C[5] || CT.C5, "Acme", C[6] || CT.C6, "Actor", C[7] || CT.C7, "Adamina", C[8] || CT.C8, "Advent Pro", C[9] || CT.C9, "Aguafina Script", C[10] || CT.C10, "Akronim", C[11] || CT.C11, "Aladin", C[12] || CT.C12, "Alata", C[13] || CT.C13, "Alatsi", C[14] || CT.C14, "Aldrich", C[15] || CT.C15, "Alef", C[16] || CT.C16, "Alegreya", C[17] || CT.C17, "Alegreya SC", C[18] || CT.C18, "Alegreya Sans", C[19] || CT.C19, "Alegreya Sans SC", C[20] || CT.C20, "Aleo", C[21] || CT.C21, "Alex Brush", C[22] || CT.C22, "Alfa Slab One", C[23] || CT.C23, "Alice", C[24] || CT.C24, "Alike", C[25] || CT.C25, "Alike Angular", C[26] || CT.C26, "Allan", C[27] || CT.C27, "Allerta", C[28] || CT.C28, "Allerta Stencil", C[29] || CT.C29, "Allura", C[30] || CT.C30, "Almarai", C[31] || CT.C31, "Almendra", C[32] || CT.C32, "Almendra Display", C[33] || CT.C33, "Almendra SC", C[34] || CT.C34, "Amarante", C[35] || CT.C35, "Amaranth", C[36] || CT.C36, "Amatic SC", C[37] || CT.C37, "Amatica SC", C[38] || CT.C38, "Amethysta", C[39] || CT.C39, "Amiko", C[40] || CT.C40, "Amiri", C[41] || CT.C41, "Amita", C[42] || CT.C42, "Anaheim", C[43] || CT.C43, "Andada", C[44] || CT.C44, "Andika", C[45] || CT.C45, "Andika New Basic", C[46] || CT.C46, "Annie Use Your Telescope", C[47] || CT.C47, "Anonymous Pro", C[48] || CT.C48, "Antic", C[49] || CT.C49, "Antic Didone", C[50] || CT.C50, "Antic Slab", C[51] || CT.C51, "Anton", C[52] || CT.C52, "Arapey", C[53] || CT.C53, "Arbutus", C[54] || CT.C54, "Arbutus Slab", C[55] || CT.C55, "Architects Daughter", C[56] || CT.C56, "Archivo", C[57] || CT.C57, "Archivo Black", C[58] || CT.C58, "Archivo Narrow", C[59] || CT.C59, "Aref Ruqaa", C[60] || CT.C60, "Arima Madurai", C[61] || CT.C61, "Arimo", C[62] || CT.C62, "Arizonia", C[63] || CT.C63, "Armata", C[64] || CT.C64, "Arsenal", C[65] || CT.C65, "Artifika", C[66] || CT.C66, "Arvo", C[67] || CT.C67, "Arya", C[68] || CT.C68, "Asap", C[69] || CT.C69, "Asar", C[70] || CT.C70, "Asset", C[71] || CT.C71, "Assistant", C[72] || CT.C72, "Astloch", C[73] || CT.C73, "Asul", C[74] || CT.C74, "Athiti", C[75] || CT.C75, "Atma", C[76] || CT.C76, "Atomic Age", C[77] || CT.C77, "Aubrey", C[78] || CT.C78, "Audiowide", C[79] || CT.C79, "Autour One", C[80] || CT.C80, "Average", C[81] || CT.C81, "Average Sans", C[82] || CT.C82, "Averia Gruesa Libre", C[83] || CT.C83, "Averia Libre", C[84] || CT.C84, "Averia Sans Libre", C[85] || CT.C85, "Averia Serif Libre", C[86] || CT.C86, "B612", C[87] || CT.C87, "B612 Mono", C[88] || CT.C88, "Bad Script", C[89] || CT.C89, "Bahiana", C[90] || CT.C90, "Bahianita", C[91] || CT.C91, "Bai Jamjuree", C[92] || CT.C92, "Baloo", C[93] || CT.C93, "Baloo Bhai", C[94] || CT.C94, "Baloo Bhaijaan", C[95] || CT.C95, "Baloo Bhaina", C[96] || CT.C96, "Baloo Chettan", C[97] || CT.C97, "Baloo Da", C[98] || CT.C98, "Baloo Paaji", C[99] || CT.C99, "Baloo Tamma", C[100] || CT.C100, "Baloo Tammudu", C[101] || CT.C101, "Baloo Thambi", C[102] || CT.C102, "Balsamiq Sans", C[103] || CT.C103, "Balthazar", C[104] || CT.C104, "Bangers", C[105] || CT.C105, "Barlow", C[106] || CT.C106, "Barlow Condensed", C[107] || CT.C107, "Barlow Semi Condensed", C[108] || CT.C108, "Barriecito", C[109] || CT.C109, "Barrio", C[110] || CT.C110, "Basic", C[111] || CT.C111, "Baskervville", C[112] || CT.C112, "Baumans", C[113] || CT.C113, "Be Vietnam", C[114] || CT.C114, "Bebas Neue", C[115] || CT.C115, "Belgrano", C[116] || CT.C116, "Bellefair", C[117] || CT.C117, "Belleza", C[118] || CT.C118, "Bellota", C[119] || CT.C119, "Bellota Text", C[120] || CT.C120, "BenchNine", C[121] || CT.C121, "Bentham", C[122] || CT.C122, "Berkshire Swash", C[123] || CT.C123, "Beth Ellen", C[124] || CT.C124, "Bevan", C[125] || CT.C125, "Big Shoulders Display", C[126] || CT.C126, "Big Shoulders Inline Display", C[127] || CT.C127, "Big Shoulders Inline Text", C[128] || CT.C128, "Big Shoulders Stencil Display", C[129] || CT.C129, "Big Shoulders Stencil Text", C[130] || CT.C130, "Big Shoulders Text", C[131] || CT.C131, "Bigelow Rules", C[132] || CT.C132, "Bigshot One", C[133] || CT.C133, "Bilbo", C[134] || CT.C134, "Bilbo Swash Caps", C[135] || CT.C135, "BioRhyme", C[136] || CT.C136, "BioRhyme Expanded", C[137] || CT.C137, "Biryani", C[138] || CT.C138, "Bitter", C[139] || CT.C139, "Black And White Picture", C[140] || CT.C140, "Black Han Sans", C[141] || CT.C141, "Black Ops One", C[142] || CT.C142, "Blinker", C[143] || CT.C143, "Bonbon", C[144] || CT.C144, "Boogaloo", C[145] || CT.C145, "Bowlby One", C[146] || CT.C146, "Bowlby One SC", C[147] || CT.C147, "Brawler", C[148] || CT.C148, "Bree Serif", C[149] || CT.C149, "Bubblegum Sans", C[150] || CT.C150, "Bubbler One", C[151] || CT.C151, "Buda", C[152] || CT.C152, "Buenard", C[153] || CT.C153, "Bungee", C[154] || CT.C154, "Bungee Hairline", C[155] || CT.C155, "Bungee Inline", C[156] || CT.C156, "Bungee Outline", C[157] || CT.C157, "Bungee Shade", C[158] || CT.C158, "Butcherman", C[159] || CT.C159, "Butterfly Kids", C[160] || CT.C160, "Cabin", C[161] || CT.C161, "Cabin Condensed", C[162] || CT.C162, "Cabin Sketch", C[163] || CT.C163, "Caesar Dressing", C[164] || CT.C164, "Cagliostro", C[165] || CT.C165, "Cairo", C[166] || CT.C166, "Caladea", C[167] || CT.C167, "Calistoga", C[168] || CT.C168, "Calligraffitti", C[169] || CT.C169, "Cambay", C[170] || CT.C170, "Cambo", C[171] || CT.C171, "Candal", C[172] || CT.C172, "Cantarell", C[173] || CT.C173, "Cantata One", C[174] || CT.C174, "Cantora One", C[175] || CT.C175, "Capriola", C[176] || CT.C176, "Cardo", C[177] || CT.C177, "Carme", C[178] || CT.C178, "Carrois Gothic", C[179] || CT.C179, "Carrois Gothic SC", C[180] || CT.C180, "Carter One", C[181] || CT.C181, "Castoro", C[182] || CT.C182, "Catamaran", C[183] || CT.C183, "Caudex", C[184] || CT.C184, "Caveat", C[185] || CT.C185, "Caveat Brush", C[186] || CT.C186, "Cedarville Cursive", C[187] || CT.C187, "Ceviche One", C[188] || CT.C188, "Chakra Petch", C[189] || CT.C189, "Changa", C[190] || CT.C190, "Changa One", C[191] || CT.C191, "Chango", C[192] || CT.C192, "Charm", C[193] || CT.C193, "Charmonman", C[194] || CT.C194, "Chathura", C[195] || CT.C195, "Chau Philomene One", C[196] || CT.C196, "Chela One", C[197] || CT.C197, "Chelsea Market", C[198] || CT.C198, "Cherry Cream Soda", C[199] || CT.C199, "Cherry Swash", C[200] || CT.C200, "Chewy", C[201] || CT.C201, "Chicle", C[202] || CT.C202, "Chilanka", C[203] || CT.C203, "Chivo", C[204] || CT.C204, "Chonburi", C[205] || CT.C205, "Cinzel", C[206] || CT.C206, "Cinzel Decorative", C[207] || CT.C207, "Clicker Script", C[208] || CT.C208, "Coda", C[209] || CT.C209, "Coda Caption", C[210] || CT.C210, "Codystar", C[211] || CT.C211, "Coiny", C[212] || CT.C212, "Combo", C[213] || CT.C213, "Comfortaa", C[214] || CT.C214, "Comic Neue", C[215] || CT.C215, "Coming Soon", C[216] || CT.C216, "Commissioner", C[217] || CT.C217, "Concert One", C[218] || CT.C218, "Condiment", C[219] || CT.C219, "Contrail One", C[220] || CT.C220, "Convergence", C[221] || CT.C221, "Cookie", C[222] || CT.C222, "Copse", C[223] || CT.C223, "Corben", C[224] || CT.C224, "Cormorant", C[225] || CT.C225, "Cormorant Garamond", C[226] || CT.C226, "Cormorant Infant", C[227] || CT.C227, "Cormorant SC", C[228] || CT.C228, "Cormorant Unicase", C[229] || CT.C229, "Cormorant Upright", C[230] || CT.C230, "Courgette", C[231] || CT.C231, "Courier Prime", C[232] || CT.C232, "Cousine", C[233] || CT.C233, "Coustard", C[234] || CT.C234, "Covered By Your Grace", C[235] || CT.C235, "Crafty Girls", C[236] || CT.C236, "Creepster", C[237] || CT.C237, "Crete Round", C[238] || CT.C238, "Crimson Pro", C[239] || CT.C239, "Crimson Text", C[240] || CT.C240, "Croissant One", C[241] || CT.C241, "Crushed", C[242] || CT.C242, "Cuprum", C[243] || CT.C243, "Cute Font", C[244] || CT.C244, "Cutive", C[245] || CT.C245, "Cutive Mono", C[246] || CT.C246, "DM Mono", C[247] || CT.C247, "DM Sans", C[248] || CT.C248, "DM Serif Display", C[249] || CT.C249, "DM Serif Text", C[250] || CT.C250, "Damion", C[251] || CT.C251, "Dancing Script", C[252] || CT.C252, "Darker Grotesque", C[253] || CT.C253, "David Libre", C[254] || CT.C254, "Dawning of a New Day", C[255] || CT.C255, "Days One", C[256] || CT.C256, "Dekko", C[257] || CT.C257, "Delius", C[258] || CT.C258, "Delius Swash Caps", C[259] || CT.C259, "Delius Unicase", C[260] || CT.C260, "Della Respira", C[261] || CT.C261, "Denk One", C[262] || CT.C262, "Devonshire", C[263] || CT.C263, "Dhurjati", C[264] || CT.C264, "Didact Gothic", C[265] || CT.C265, "Diplomata", C[266] || CT.C266, "Diplomata SC", C[267] || CT.C267, "Do Hyeon", C[268] || CT.C268, "Dokdo", C[269] || CT.C269, "Domine", C[270] || CT.C270, "Donegal One", C[271] || CT.C271, "Doppio One", C[272] || CT.C272, "Dorsa", C[273] || CT.C273, "Dosis", C[274] || CT.C274, "Dr Sugiyama", C[275] || CT.C275, "Droid Sans", C[276] || CT.C276, "Droid Sans Mono", C[277] || CT.C277, "Droid Serif", C[278] || CT.C278, "Duru Sans", C[279] || CT.C279, "Dynalight", C[280] || CT.C280, "EB Garamond", C[281] || CT.C281, "Eagle Lake", C[282] || CT.C282, "East Sea Dokdo", C[283] || CT.C283, "Eater", C[284] || CT.C284, "Economica", C[285] || CT.C285, "Eczar", C[286] || CT.C286, "El Messiri", C[287] || CT.C287, "Electrolize", C[288] || CT.C288, "Elsie", C[289] || CT.C289, "Elsie Swash Caps", C[290] || CT.C290, "Emblema One", C[291] || CT.C291, "Emilys Candy", C[292] || CT.C292, "Encode Sans", C[293] || CT.C293, "Encode Sans Condensed", C[294] || CT.C294, "Encode Sans Expanded", C[295] || CT.C295, "Encode Sans Semi Condensed", C[296] || CT.C296, "Encode Sans Semi Expanded", C[297] || CT.C297, "Engagement", C[298] || CT.C298, "Englebert", C[299] || CT.C299, "Enriqueta", C[300] || CT.C300, "Epilogue", C[301] || CT.C301, "Erica One", C[302] || CT.C302, "Esteban", C[303] || CT.C303, "Euphoria Script", C[304] || CT.C304, "Ewert", C[305] || CT.C305, "Exo", C[306] || CT.C306, "Exo 2", C[307] || CT.C307, "Expletus Sans", C[308] || CT.C308, "Fahkwang", C[309] || CT.C309, "Fanwood Text", C[310] || CT.C310, "Farro", C[311] || CT.C311, "Farsan", C[312] || CT.C312, "Fascinate", C[313] || CT.C313, "Fascinate Inline", C[314] || CT.C314, "Faster One", C[315] || CT.C315, "Fauna One", C[316] || CT.C316, "Faustina", C[317] || CT.C317, "Federant", C[318] || CT.C318, "Federo", C[319] || CT.C319, "Felipa", C[320] || CT.C320, "Fenix", C[321] || CT.C321, "Finger Paint", C[322] || CT.C322, "Fira Code", C[323] || CT.C323, "Fira Mono", C[324] || CT.C324, "Fira Sans", C[325] || CT.C325, "Fira Sans Condensed", C[326] || CT.C326, "Fira Sans Extra Condensed", C[327] || CT.C327, "Fjalla One", C[328] || CT.C328, "Fjord One", C[329] || CT.C329, "Flamenco", C[330] || CT.C330, "Flavors", C[331] || CT.C331, "Fondamento", C[332] || CT.C332, "Fontdiner Swanky", C[333] || CT.C333, "Forum", C[334] || CT.C334, "Francois One", C[335] || CT.C335, "Frank Ruhl Libre", C[336] || CT.C336, "Fraunces", C[337] || CT.C337, "Freckle Face", C[338] || CT.C338, "Fredericka the Great", C[339] || CT.C339, "Fredoka One", C[340] || CT.C340, "Fresca", C[341] || CT.C341, "Frijole", C[342] || CT.C342, "Fruktur", C[343] || CT.C343, "Fugaz One", C[344] || CT.C344, "GFS Didot", C[345] || CT.C345, "GFS Neohellenic", C[346] || CT.C346, "Gabriela", C[347] || CT.C347, "Gaegu", C[348] || CT.C348, "Gafata", C[349] || CT.C349, "Galada", C[350] || CT.C350, "Galdeano", C[351] || CT.C351, "Galindo", C[352] || CT.C352, "Gamja Flower", C[353] || CT.C353, "Gayathri", C[354] || CT.C354, "Gelasio", C[355] || CT.C355, "Gentium Basic", C[356] || CT.C356, "Gentium Book Basic", C[357] || CT.C357, "Geo", C[358] || CT.C358, "Geostar", C[359] || CT.C359, "Geostar Fill", C[360] || CT.C360, "Germania One", C[361] || CT.C361, "Gidugu", C[362] || CT.C362, "Gilda Display", C[363] || CT.C363, "Girassol", C[364] || CT.C364, "Give You Glory", C[365] || CT.C365, "Glass Antiqua", C[366] || CT.C366, "Glegoo", C[367] || CT.C367, "Gloria Hallelujah", C[368] || CT.C368, "Goblin One", C[369] || CT.C369, "Gochi Hand", C[370] || CT.C370, "Goldman", C[371] || CT.C371, "Gorditas", C[372] || CT.C372, "Gothic A1", C[373] || CT.C373, "Gotu", C[374] || CT.C374, "Goudy Bookletter 1911", C[375] || CT.C375, "Graduate", C[376] || CT.C376, "Grand Hotel", C[377] || CT.C377, "Grandstander", C[378] || CT.C378, "Gravitas One", C[379] || CT.C379, "Great Vibes", C[380] || CT.C380, "Grenze", C[381] || CT.C381, "Grenze Gotisch", C[382] || CT.C382, "Griffy", C[383] || CT.C383, "Gruppo", C[384] || CT.C384, "Gudea", C[385] || CT.C385, "Gugi", C[386] || CT.C386, "Gupter", C[387] || CT.C387, "Gurajada", C[388] || CT.C388, "Habibi", C[389] || CT.C389, "Hachi Maru Pop", C[390] || CT.C390, "Halant", C[391] || CT.C391, "Hammersmith One", C[392] || CT.C392, "Hanalei", C[393] || CT.C393, "Hanalei Fill", C[394] || CT.C394, "Handlee", C[395] || CT.C395, "Happy Monkey", C[396] || CT.C396, "Harmattan", C[397] || CT.C397, "Headland One", C[398] || CT.C398, "Heebo", C[399] || CT.C399, "Henny Penny", C[400] || CT.C400, "Hepta Slab", C[401] || CT.C401, "Herr Von Muellerhoff", C[402] || CT.C402, "Hi Melody", C[403] || CT.C403, "Hind", C[404] || CT.C404, "Hind Guntur", C[405] || CT.C405, "Hind Madurai", C[406] || CT.C406, "Hind Siliguri", C[407] || CT.C407, "Hind Vadodara", C[408] || CT.C408, "Holtwood One SC", C[409] || CT.C409, "Homemade Apple", C[410] || CT.C410, "Homenaje", C[411] || CT.C411, "IBM Plex Mono", C[412] || CT.C412, "IBM Plex Sans", C[413] || CT.C413, "IBM Plex Sans Condensed", C[414] || CT.C414, "IBM Plex Serif", C[415] || CT.C415, "IM Fell DW Pica", C[416] || CT.C416, "IM Fell DW Pica SC", C[417] || CT.C417, "IM Fell Double Pica", C[418] || CT.C418, "IM Fell Double Pica SC", C[419] || CT.C419, "IM Fell English", C[420] || CT.C420, "IM Fell English SC", C[421] || CT.C421, "IM Fell French Canon", C[422] || CT.C422, "IM Fell French Canon SC", C[423] || CT.C423, "IM Fell Great Primer", C[424] || CT.C424, "IM Fell Great Primer SC", C[425] || CT.C425, "Ibarra Real Nova", C[426] || CT.C426, "Iceberg", C[427] || CT.C427, "Iceland", C[428] || CT.C428, "Imprima", C[429] || CT.C429, "Inconsolata", C[430] || CT.C430, "Inder", C[431] || CT.C431, "Indie Flower", C[432] || CT.C432, "Inika", C[433] || CT.C433, "Inknut Antiqua", C[434] || CT.C434, "Inria Sans", C[435] || CT.C435, "Inria Serif", C[436] || CT.C436, "Inter", C[437] || CT.C437, "Irish Grover", C[438] || CT.C438, "Istok Web", C[439] || CT.C439, "Italiana", C[440] || CT.C440, "Italianno", C[441] || CT.C441, "Itim", C[442] || CT.C442, "Jacques Francois", C[443] || CT.C443, "Jacques Francois Shadow", C[444] || CT.C444, "Jaldi", C[445] || CT.C445, "JetBrains Mono", C[446] || CT.C446, "Jim Nightshade", C[447] || CT.C447, "Jockey One", C[448] || CT.C448, "Jolly Lodger", C[449] || CT.C449, "Jomhuria", C[450] || CT.C450, "Jomolhari", C[451] || CT.C451, "Josefin Sans", C[452] || CT.C452, "Josefin Slab", C[453] || CT.C453, "Jost", C[454] || CT.C454, "Joti One", C[455] || CT.C455, "Jua", C[456] || CT.C456, "Judson", C[457] || CT.C457, "Julee", C[458] || CT.C458, "Julius Sans One", C[459] || CT.C459, "Junge", C[460] || CT.C460, "Jura", C[461] || CT.C461, "Just Another Hand", C[462] || CT.C462, "Just Me Again Down Here", C[463] || CT.C463, "K2D", C[464] || CT.C464, "Kadwa", C[465] || CT.C465, "Kalam", C[466] || CT.C466, "Kameron", C[467] || CT.C467, "Kanit", C[468] || CT.C468, "Kantumruy", C[469] || CT.C469, "Karla", C[470] || CT.C470, "Karma", C[471] || CT.C471, "Katibeh", C[472] || CT.C472, "Kaushan Script", C[473] || CT.C473, "Kavivanar", C[474] || CT.C474, "Kavoon", C[475] || CT.C475, "Kdam Thmor", C[476] || CT.C476, "Keania One", C[477] || CT.C477, "Kelly Slab", C[478] || CT.C478, "Kenia", C[479] || CT.C479, "Khand", C[480] || CT.C480, "Khula", C[481] || CT.C481, "Kirang Haerang", C[482] || CT.C482, "Kite One", C[483] || CT.C483, "Knewave", C[484] || CT.C484, "KoHo", C[485] || CT.C485, "Kodchasan", C[486] || CT.C486, "Kosugi", C[487] || CT.C487, "Kosugi Maru", C[488] || CT.C488, "Kotta One", C[489] || CT.C489, "Kranky", C[490] || CT.C490, "Kreon", C[491] || CT.C491, "Kristi", C[492] || CT.C492, "Krona One", C[493] || CT.C493, "Krub", C[494] || CT.C494, "Kufam", C[495] || CT.C495, "Kulim Park", C[496] || CT.C496, "Kumar One", C[497] || CT.C497, "Kumar One Outline", C[498] || CT.C498, "Kumbh Sans", C[499] || CT.C499, "Kurale", C[500] || CT.C500, "La Belle Aurore", C[501] || CT.C501, "Lacquer", C[502] || CT.C502, "Laila", C[503] || CT.C503, "Lakki Reddy", C[504] || CT.C504, "Lalezar", C[505] || CT.C505, "Lancelot", C[506] || CT.C506, "Langar", C[507] || CT.C507, "Lateef", C[508] || CT.C508, "Lato", C[509] || CT.C509, "League Script", C[510] || CT.C510, "Leckerli One", C[511] || CT.C511, "Ledger", C[512] || CT.C512, "Lekton", C[513] || CT.C513, "Lemon", C[514] || CT.C514, "Lemonada", C[515] || CT.C515, "Lexend Deca", C[516] || CT.C516, "Lexend Exa", C[517] || CT.C517, "Lexend Giga", C[518] || CT.C518, "Lexend Mega", C[519] || CT.C519, "Lexend Peta", C[520] || CT.C520, "Lexend Tera", C[521] || CT.C521, "Lexend Zetta", C[522] || CT.C522, "Libre Barcode 128", C[523] || CT.C523, "Libre Barcode 128 Text", C[524] || CT.C524, "Libre Barcode 39", C[525] || CT.C525, "Libre Barcode 39 Extended", C[526] || CT.C526, "Libre Barcode 39 Extended Text", C[527] || CT.C527, "Libre Barcode 39 Text", C[528] || CT.C528, "Libre Baskerville", C[529] || CT.C529, "Libre Caslon Display", C[530] || CT.C530, "Libre Caslon Text", C[531] || CT.C531, "Libre Franklin", C[532] || CT.C532, "Life Savers", C[533] || CT.C533, "Lilita One", C[534] || CT.C534, "Lily Script One", C[535] || CT.C535, "Limelight", C[536] || CT.C536, "Linden Hill", C[537] || CT.C537, "Literata", C[538] || CT.C538, "Liu Jian Mao Cao", C[539] || CT.C539, "Livvic", C[540] || CT.C540, "Lobster", C[541] || CT.C541, "Lobster Two", C[542] || CT.C542, "Londrina Outline", C[543] || CT.C543, "Londrina Shadow", C[544] || CT.C544, "Londrina Sketch", C[545] || CT.C545, "Londrina Solid", C[546] || CT.C546, "Long Cang", C[547] || CT.C547, "Lora", C[548] || CT.C548, "Love Ya Like A Sister", C[549] || CT.C549, "Loved by the King", C[550] || CT.C550, "Lovers Quarrel", C[551] || CT.C551, "Luckiest Guy", C[552] || CT.C552, "Lusitana", C[553] || CT.C553, "Lustria", C[554] || CT.C554, "M PLUS 1p", C[555] || CT.C555, "M PLUS Rounded 1c", C[556] || CT.C556, "Ma Shan Zheng", C[557] || CT.C557, "Macondo", C[558] || CT.C558, "Macondo Swash Caps", C[559] || CT.C559, "Mada", C[560] || CT.C560, "Magra", C[561] || CT.C561, "Maiden Orange", C[562] || CT.C562, "Maitree", C[563] || CT.C563, "Major Mono Display", C[564] || CT.C564, "Mako", C[565] || CT.C565, "Mali", C[566] || CT.C566, "Mallanna", C[567] || CT.C567, "Mandali", C[568] || CT.C568, "Manjari", C[569] || CT.C569, "Manrope", C[570] || CT.C570, "Mansalva", C[571] || CT.C571, "Manuale", C[572] || CT.C572, "Marcellus", C[573] || CT.C573, "Marcellus SC", C[574] || CT.C574, "Marck Script", C[575] || CT.C575, "Margarine", C[576] || CT.C576, "Markazi Text", C[577] || CT.C577, "Marko One", C[578] || CT.C578, "Marmelad", C[579] || CT.C579, "Martel", C[580] || CT.C580, "Martel Sans", C[581] || CT.C581, "Marvel", C[582] || CT.C582, "Mate", C[583] || CT.C583, "Mate SC", C[584] || CT.C584, "Maven Pro", C[585] || CT.C585, "McLaren", C[586] || CT.C586, "Meddon", C[587] || CT.C587, "MedievalSharp", C[588] || CT.C588, "Medula One", C[589] || CT.C589, "Meera Inimai", C[590] || CT.C590, "Megrim", C[591] || CT.C591, "Meie Script", C[592] || CT.C592, "Merienda", C[593] || CT.C593, "Merienda One", C[594] || CT.C594, "Merriweather", C[595] || CT.C595, "Merriweather Sans", C[596] || CT.C596, "Metal Mania", C[597] || CT.C597, "Metamorphous", C[598] || CT.C598, "Metrophobic", C[599] || CT.C599, "Michroma", C[600] || CT.C600, "Milonga", C[601] || CT.C601, "Miltonian", C[602] || CT.C602, "Miltonian Tattoo", C[603] || CT.C603, "Mina", C[604] || CT.C604, "Miniver", C[605] || CT.C605, "Miriam Libre", C[606] || CT.C606, "Mirza", C[607] || CT.C607, "Miss Fajardose", C[608] || CT.C608, "Mitr", C[609] || CT.C609, "Modak", C[610] || CT.C610, "Modern Antiqua", C[611] || CT.C611, "Mogra", C[612] || CT.C612, "Molengo", C[613] || CT.C613, "Molle", C[614] || CT.C614, "Monda", C[615] || CT.C615, "Monofett", C[616] || CT.C616, "Monoton", C[617] || CT.C617, "Monsieur La Doulaise", C[618] || CT.C618, "Montaga", C[619] || CT.C619, "Montez", C[620] || CT.C620, "Montserrat", C[621] || CT.C621, "Montserrat Alternates", C[622] || CT.C622, "Montserrat Subrayada", C[623] || CT.C623, "Mountains of Christmas", C[624] || CT.C624, "Mouse Memoirs", C[625] || CT.C625, "Mr Bedfort", C[626] || CT.C626, "Mr Dafoe", C[627] || CT.C627, "Mr De Haviland", C[628] || CT.C628, "Mrs Saint Delafield", C[629] || CT.C629, "Mrs Sheppards", C[630] || CT.C630, "Mukta", C[631] || CT.C631, "Mukta Mahee", C[632] || CT.C632, "Mukta Malar", C[633] || CT.C633, "Mukta Vaani", C[634] || CT.C634, "Mulish", C[635] || CT.C635, "MuseoModerno", C[636] || CT.C636, "Mystery Quest", C[637] || CT.C637, "NTR", C[638] || CT.C638, "Nanum Brush Script", C[639] || CT.C639, "Nanum Gothic", C[640] || CT.C640, "Nanum Gothic Coding", C[641] || CT.C641, "Nanum Myeongjo", C[642] || CT.C642, "Nanum Pen Script", C[643] || CT.C643, "Nerko One", C[644] || CT.C644, "Neucha", C[645] || CT.C645, "Neuton", C[646] || CT.C646, "New Rocker", C[647] || CT.C647, "News Cycle", C[648] || CT.C648, "Niconne", C[649] || CT.C649, "Niramit", C[650] || CT.C650, "Nixie One", C[651] || CT.C651, "Nobile", C[652] || CT.C652, "Norican", C[653] || CT.C653, "Nosifer", C[654] || CT.C654, "Notable", C[655] || CT.C655, "Nothing You Could Do", C[656] || CT.C656, "Noticia Text", C[657] || CT.C657, "Noto Color Emoji Compat", C[658] || CT.C658, "Noto Sans", C[659] || CT.C659, "Noto Serif", C[660] || CT.C660, "Nova Cut", C[661] || CT.C661, "Nova Flat", C[662] || CT.C662, "Nova Mono", C[663] || CT.C663, "Nova Oval", C[664] || CT.C664, "Nova Round", C[665] || CT.C665, "Nova Script", C[666] || CT.C666, "Nova Slim", C[667] || CT.C667, "Nova Square", C[668] || CT.C668, "Numans", C[669] || CT.C669, "Nunito", C[670] || CT.C670, "Nunito Sans", C[671] || CT.C671, "Odibee Sans", C[672] || CT.C672, "Odor Mean Chey", C[673] || CT.C673, "Offside", C[674] || CT.C674, "Old Standard TT", C[675] || CT.C675, "Oldenburg", C[676] || CT.C676, "Oleo Script", C[677] || CT.C677, "Oleo Script Swash Caps", C[678] || CT.C678, "Open Sans", C[679] || CT.C679, "Open Sans Condensed", C[680] || CT.C680, "Oranienbaum", C[681] || CT.C681, "Orbitron", C[682] || CT.C682, "Oregano", C[683] || CT.C683, "Orienta", C[684] || CT.C684, "Original Surfer", C[685] || CT.C685, "Oswald", C[686] || CT.C686, "Over the Rainbow", C[687] || CT.C687, "Overlock", C[688] || CT.C688, "Overlock SC", C[689] || CT.C689, "Overpass", C[690] || CT.C690, "Overpass Mono", C[691] || CT.C691, "Ovo", C[692] || CT.C692, "Oxanium", C[693] || CT.C693, "Oxygen", C[694] || CT.C694, "Oxygen Mono", C[695] || CT.C695, "PT Mono", C[696] || CT.C696, "PT Sans", C[697] || CT.C697, "PT Sans Caption", C[698] || CT.C698, "PT Sans Narrow", C[699] || CT.C699, "PT Serif", C[700] || CT.C700, "PT Serif Caption", C[701] || CT.C701, "Pacifico", C[702] || CT.C702, "Padauk", C[703] || CT.C703, "Palanquin", C[704] || CT.C704, "Palanquin Dark", C[705] || CT.C705, "Pangolin", C[706] || CT.C706, "Paprika", C[707] || CT.C707, "Parisienne", C[708] || CT.C708, "Passero One", C[709] || CT.C709, "Passion One", C[710] || CT.C710, "Pathway Gothic One", C[711] || CT.C711, "Patrick Hand", C[712] || CT.C712, "Patrick Hand SC", C[713] || CT.C713, "Pattaya", C[714] || CT.C714, "Patua One", C[715] || CT.C715, "Pavanam", C[716] || CT.C716, "Paytone One", C[717] || CT.C717, "Peddana", C[718] || CT.C718, "Peralta", C[719] || CT.C719, "Permanent Marker", C[720] || CT.C720, "Petit Formal Script", C[721] || CT.C721, "Petrona", C[722] || CT.C722, "Philosopher", C[723] || CT.C723, "Piazzolla", C[724] || CT.C724, "Piedra", C[725] || CT.C725, "Pinyon Script", C[726] || CT.C726, "Pirata One", C[727] || CT.C727, "Plaster", C[728] || CT.C728, "Play", C[729] || CT.C729, "Playball", C[730] || CT.C730, "Playfair Display", C[731] || CT.C731, "Playfair Display SC", C[732] || CT.C732, "Podkova", C[733] || CT.C733, "Poiret One", C[734] || CT.C734, "Poller One", C[735] || CT.C735, "Poly", C[736] || CT.C736, "Pompiere", C[737] || CT.C737, "Pontano Sans", C[738] || CT.C738, "Poor Story", C[739] || CT.C739, "Poppins", C[740] || CT.C740, "Port Lligat Sans", C[741] || CT.C741, "Port Lligat Slab", C[742] || CT.C742, "Potta One", C[743] || CT.C743, "Pragati Narrow", C[744] || CT.C744, "Prata", C[745] || CT.C745, "Press Start 2P", C[746] || CT.C746, "Pridi", C[747] || CT.C747, "Princess Sofia", C[748] || CT.C748, "Prociono", C[749] || CT.C749, "Prompt", C[750] || CT.C750, "Prosto One", C[751] || CT.C751, "Proza Libre", C[752] || CT.C752, "Public Sans", C[753] || CT.C753, "Puritan", C[754] || CT.C754, "Purple Purse", C[755] || CT.C755, "Quando", C[756] || CT.C756, "Quantico", C[757] || CT.C757, "Quattrocento", C[758] || CT.C758, "Quattrocento Sans", C[759] || CT.C759, "Questrial", C[760] || CT.C760, "Quicksand", C[761] || CT.C761, "Quintessential", C[762] || CT.C762, "Qwigley", C[763] || CT.C763, "Racing Sans One", C[764] || CT.C764, "Radley", C[765] || CT.C765, "Rajdhani", C[766] || CT.C766, "Rakkas", C[767] || CT.C767, "Raleway", C[768] || CT.C768, "Raleway Dots", C[769] || CT.C769, "Ramabhadra", C[770] || CT.C770, "Ramaraja", C[771] || CT.C771, "Rambla", C[772] || CT.C772, "Rammetto One", C[773] || CT.C773, "Ranchers", C[774] || CT.C774, "Rancho", C[775] || CT.C775, "Ranga", C[776] || CT.C776, "Rasa", C[777] || CT.C777, "Rationale", C[778] || CT.C778, "Ravi Prakash", C[779] || CT.C779, "Recursive", C[780] || CT.C780, "Red Hat Display", C[781] || CT.C781, "Red Hat Text", C[782] || CT.C782, "Red Rose", C[783] || CT.C783, "Redressed", C[784] || CT.C784, "Reem Kufi", C[785] || CT.C785, "Reenie Beanie", C[786] || CT.C786, "Revalia", C[787] || CT.C787, "Rhodium Libre", C[788] || CT.C788, "Ribeye", C[789] || CT.C789, "Ribeye Marrow", C[790] || CT.C790, "Righteous", C[791] || CT.C791, "Risque", C[792] || CT.C792, "Roboto", C[793] || CT.C793, "Roboto Condensed", C[794] || CT.C794, "Roboto Mono", C[795] || CT.C795, "Roboto Slab", C[796] || CT.C796, "Rochester", C[797] || CT.C797, "Rock Salt", C[798] || CT.C798, "Rokkitt", C[799] || CT.C799, "Romanesco", C[800] || CT.C800, "Ropa Sans", C[801] || CT.C801, "Rosario", C[802] || CT.C802, "Rosarivo", C[803] || CT.C803, "Rouge Script", C[804] || CT.C804, "Rowdies", C[805] || CT.C805, "Rozha One", C[806] || CT.C806, "Rubik", C[807] || CT.C807, "Rubik Mono One", C[808] || CT.C808, "Ruda", C[809] || CT.C809, "Rufina", C[810] || CT.C810, "Ruge Boogie", C[811] || CT.C811, "Ruluko", C[812] || CT.C812, "Rum Raisin", C[813] || CT.C813, "Ruslan Display", C[814] || CT.C814, "Russo One", C[815] || CT.C815, "Ruthie", C[816] || CT.C816, "Rye", C[817] || CT.C817, "Sacramento", C[818] || CT.C818, "Sahitya", C[819] || CT.C819, "Sail", C[820] || CT.C820, "Saira", C[821] || CT.C821, "Saira Condensed", C[822] || CT.C822, "Saira Extra Condensed", C[823] || CT.C823, "Saira Semi Condensed", C[824] || CT.C824, "Saira Stencil One", C[825] || CT.C825, "Salsa", C[826] || CT.C826, "Sanchez", C[827] || CT.C827, "Sancreek", C[828] || CT.C828, "Sansita", C[829] || CT.C829, "Sansita Swashed", C[830] || CT.C830, "Sarabun", C[831] || CT.C831, "Sarala", C[832] || CT.C832, "Sarina", C[833] || CT.C833, "Sarpanch", C[834] || CT.C834, "Satisfy", C[835] || CT.C835, "Sawarabi Gothic", C[836] || CT.C836, "Sawarabi Mincho", C[837] || CT.C837, "Scada", C[838] || CT.C838, "Scheherazade", C[839] || CT.C839, "Schoolbell", C[840] || CT.C840, "Scope One", C[841] || CT.C841, "Seaweed Script", C[842] || CT.C842, "Secular One", C[843] || CT.C843, "Sedgwick Ave", C[844] || CT.C844, "Sedgwick Ave Display", C[845] || CT.C845, "Sen", C[846] || CT.C846, "Sevillana", C[847] || CT.C847, "Seymour One", C[848] || CT.C848, "Shadows Into Light", C[849] || CT.C849, "Shadows Into Light Two", C[850] || CT.C850, "Shanti", C[851] || CT.C851, "Share", C[852] || CT.C852, "Share Tech", C[853] || CT.C853, "Share Tech Mono", C[854] || CT.C854, "Shojumaru", C[855] || CT.C855, "Short Stack", C[856] || CT.C856, "Shrikhand", C[857] || CT.C857, "Sigmar One", C[858] || CT.C858, "Signika", C[859] || CT.C859, "Signika Negative", C[860] || CT.C860, "Simonetta", C[861] || CT.C861, "Single Day", C[862] || CT.C862, "Sintony", C[863] || CT.C863, "Sirin Stencil", C[864] || CT.C864, "Six Caps", C[865] || CT.C865, "Skranji", C[866] || CT.C866, "Slabo 13px", C[867] || CT.C867, "Slabo 27px", C[868] || CT.C868, "Slackey", C[869] || CT.C869, "Smokum", C[870] || CT.C870, "Smythe", C[871] || CT.C871, "Sniglet", C[872] || CT.C872, "Snippet", C[873] || CT.C873, "Snowburst One", C[874] || CT.C874, "Sofadi One", C[875] || CT.C875, "Sofia", C[876] || CT.C876, "Solway", C[877] || CT.C877, "Song Myung", C[878] || CT.C878, "Sonsie One", C[879] || CT.C879, "Sora", C[880] || CT.C880, "Sorts Mill Goudy", C[881] || CT.C881, "Source Code Pro", C[882] || CT.C882, "Source Sans Pro", C[883] || CT.C883, "Source Serif Pro", C[884] || CT.C884, "Space Grotesk", C[885] || CT.C885, "Space Mono", C[886] || CT.C886, "Spartan", C[887] || CT.C887, "Special Elite", C[888] || CT.C888, "Spectral", C[889] || CT.C889, "Spectral SC", C[890] || CT.C890, "Spicy Rice", C[891] || CT.C891, "Spinnaker", C[892] || CT.C892, "Spirax", C[893] || CT.C893, "Squada One", C[894] || CT.C894, "Sree Krushnadevaraya", C[895] || CT.C895, "Sriracha", C[896] || CT.C896, "Srisakdi", C[897] || CT.C897, "Staatliches", C[898] || CT.C898, "Stalemate", C[899] || CT.C899, "Stalinist One", C[900] || CT.C900, "Stardos Stencil", C[901] || CT.C901, "Stint Ultra Condensed", C[902] || CT.C902, "Stint Ultra Expanded", C[903] || CT.C903, "Stoke", C[904] || CT.C904, "Strait", C[905] || CT.C905, "Stylish", C[906] || CT.C906, "Sue Ellen Francisco", C[907] || CT.C907, "Suez One", C[908] || CT.C908, "Sulphur Point", C[909] || CT.C909, "Sumana", C[910] || CT.C910, "Sunflower", C[911] || CT.C911, "Sunshiney", C[912] || CT.C912, "Supermercado One", C[913] || CT.C913, "Sura", C[914] || CT.C914, "Suranna", C[915] || CT.C915, "Suravaram", C[916] || CT.C916, "Swanky and Moo Moo", C[917] || CT.C917, "Syncopate", C[918] || CT.C918, "Syne", C[919] || CT.C919, "Syne Mono", C[920] || CT.C920, "Syne Tactile", C[921] || CT.C921, "Tajawal", C[922] || CT.C922, "Tangerine", C[923] || CT.C923, "Tauri", C[924] || CT.C924, "Taviraj", C[925] || CT.C925, "Teko", C[926] || CT.C926, "Telex", C[927] || CT.C927, "Tenali Ramakrishna", C[928] || CT.C928, "Tenor Sans", C[929] || CT.C929, "Text Me One", C[930] || CT.C930, "Thasadith", C[931] || CT.C931, "The Girl Next Door", C[932] || CT.C932, "Tienne", C[933] || CT.C933, "Tillana", C[934] || CT.C934, "Timmana", C[935] || CT.C935, "Tinos", C[936] || CT.C936, "Titan One", C[937] || CT.C937, "Titillium Web", C[938] || CT.C938, "Tomorrow", C[939] || CT.C939, "Trade Winds", C[940] || CT.C940, "Trirong", C[941] || CT.C941, "Trispace", C[942] || CT.C942, "Trocchi", C[943] || CT.C943, "Trochut", C[944] || CT.C944, "Trykker", C[945] || CT.C945, "Tulpen One", C[946] || CT.C946, "Turret Road", C[947] || CT.C947, "Ubuntu", C[948] || CT.C948, "Ubuntu Condensed", C[949] || CT.C949, "Ubuntu Mono", C[950] || CT.C950, "Ultra", C[951] || CT.C951, "Uncial Antiqua", C[952] || CT.C952, "Underdog", C[953] || CT.C953, "Unica One", C[954] || CT.C954, "UnifrakturCook", C[955] || CT.C955, "UnifrakturMaguntia", C[956] || CT.C956, "Unkempt", C[957] || CT.C957, "Unlock", C[958] || CT.C958, "Unna", C[959] || CT.C959, "VT323", C[960] || CT.C960, "Vampiro One", C[961] || CT.C961, "Varela", C[962] || CT.C962, "Varela Round", C[963] || CT.C963, "Varta", C[964] || CT.C964, "Vast Shadow", C[965] || CT.C965, "Vesper Libre", C[966] || CT.C966, "Viaoda Libre", C[967] || CT.C967, "Vibes", C[968] || CT.C968, "Vibur", C[969] || CT.C969, "Vidaloka", C[970] || CT.C970, "Viga", C[971] || CT.C971, "Voces", C[972] || CT.C972, "Volkhov", C[973] || CT.C973, "Vollkorn", C[974] || CT.C974, "Vollkorn SC", C[975] || CT.C975, "Voltaire", C[976] || CT.C976, "Waiting for the Sunrise", C[977] || CT.C977, "Wallpoet", C[978] || CT.C978, "Walter Turncoat", C[979] || CT.C979, "Warnes", C[980] || CT.C980, "Wellfleet", C[981] || CT.C981, "Wendy One", C[982] || CT.C982, "Wire One", C[983] || CT.C983, "Work Sans", C[984] || CT.C984, "Xanh Mono", C[985] || CT.C985, "Yanone Kaffeesatz", C[986] || CT.C986, "Yantramanav", C[987] || CT.C987, "Yatra One", C[988] || CT.C988, "Yellowtail", C[989] || CT.C989, "Yeon Sung", C[990] || CT.C990, "Yeseva One", C[991] || CT.C991, "Yesteryear", C[992] || CT.C992, "Yrsa", C[993] || CT.C993, "Yusei Magic", C[994] || CT.C994, "ZCOOL KuaiLe", C[995] || CT.C995, "ZCOOL QingKe HuangYou", C[996] || CT.C996, "ZCOOL XiaoWei", C[997] || CT.C997, "Zeyada", C[998] || CT.C998, "Zhi Mang Xing", C[999] || CT.C999, "Zilla Slab", C[1000] || CT.C1000, "Zilla Slab Highlight", C[1001] || CT.C1001]);
    },
    get C1003() {
      return C[1003] = dart.fn(google_fonts.GoogleFonts.aBeeZeeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1004() {
      return C[1004] = dart.fn(google_fonts.GoogleFonts.abelTextTheme, T.TextThemeNToTextTheme());
    },
    get C1005() {
      return C[1005] = dart.fn(google_fonts.GoogleFonts.abhayaLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1006() {
      return C[1006] = dart.fn(google_fonts.GoogleFonts.abrilFatfaceTextTheme, T.TextThemeNToTextTheme());
    },
    get C1007() {
      return C[1007] = dart.fn(google_fonts.GoogleFonts.aclonicaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1008() {
      return C[1008] = dart.fn(google_fonts.GoogleFonts.acmeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1009() {
      return C[1009] = dart.fn(google_fonts.GoogleFonts.actorTextTheme, T.TextThemeNToTextTheme());
    },
    get C1010() {
      return C[1010] = dart.fn(google_fonts.GoogleFonts.adaminaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1011() {
      return C[1011] = dart.fn(google_fonts.GoogleFonts.adventProTextTheme, T.TextThemeNToTextTheme());
    },
    get C1012() {
      return C[1012] = dart.fn(google_fonts.GoogleFonts.aguafinaScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1013() {
      return C[1013] = dart.fn(google_fonts.GoogleFonts.akronimTextTheme, T.TextThemeNToTextTheme());
    },
    get C1014() {
      return C[1014] = dart.fn(google_fonts.GoogleFonts.aladinTextTheme, T.TextThemeNToTextTheme());
    },
    get C1015() {
      return C[1015] = dart.fn(google_fonts.GoogleFonts.alataTextTheme, T.TextThemeNToTextTheme());
    },
    get C1016() {
      return C[1016] = dart.fn(google_fonts.GoogleFonts.alatsiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1017() {
      return C[1017] = dart.fn(google_fonts.GoogleFonts.aldrichTextTheme, T.TextThemeNToTextTheme());
    },
    get C1018() {
      return C[1018] = dart.fn(google_fonts.GoogleFonts.alefTextTheme, T.TextThemeNToTextTheme());
    },
    get C1019() {
      return C[1019] = dart.fn(google_fonts.GoogleFonts.alegreyaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1020() {
      return C[1020] = dart.fn(google_fonts.GoogleFonts.alegreyaScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1021() {
      return C[1021] = dart.fn(google_fonts.GoogleFonts.alegreyaSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1022() {
      return C[1022] = dart.fn(google_fonts.GoogleFonts.alegreyaSansScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1023() {
      return C[1023] = dart.fn(google_fonts.GoogleFonts.aleoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1024() {
      return C[1024] = dart.fn(google_fonts.GoogleFonts.alexBrushTextTheme, T.TextThemeNToTextTheme());
    },
    get C1025() {
      return C[1025] = dart.fn(google_fonts.GoogleFonts.alfaSlabOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1026() {
      return C[1026] = dart.fn(google_fonts.GoogleFonts.aliceTextTheme, T.TextThemeNToTextTheme());
    },
    get C1027() {
      return C[1027] = dart.fn(google_fonts.GoogleFonts.alikeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1028() {
      return C[1028] = dart.fn(google_fonts.GoogleFonts.alikeAngularTextTheme, T.TextThemeNToTextTheme());
    },
    get C1029() {
      return C[1029] = dart.fn(google_fonts.GoogleFonts.allanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1030() {
      return C[1030] = dart.fn(google_fonts.GoogleFonts.allertaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1031() {
      return C[1031] = dart.fn(google_fonts.GoogleFonts.allertaStencilTextTheme, T.TextThemeNToTextTheme());
    },
    get C1032() {
      return C[1032] = dart.fn(google_fonts.GoogleFonts.alluraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1033() {
      return C[1033] = dart.fn(google_fonts.GoogleFonts.almaraiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1034() {
      return C[1034] = dart.fn(google_fonts.GoogleFonts.almendraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1035() {
      return C[1035] = dart.fn(google_fonts.GoogleFonts.almendraDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1036() {
      return C[1036] = dart.fn(google_fonts.GoogleFonts.almendraScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1037() {
      return C[1037] = dart.fn(google_fonts.GoogleFonts.amaranteTextTheme, T.TextThemeNToTextTheme());
    },
    get C1038() {
      return C[1038] = dart.fn(google_fonts.GoogleFonts.amaranthTextTheme, T.TextThemeNToTextTheme());
    },
    get C1039() {
      return C[1039] = dart.fn(google_fonts.GoogleFonts.amaticScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1040() {
      return C[1040] = dart.fn(google_fonts.GoogleFonts.amaticaScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1041() {
      return C[1041] = dart.fn(google_fonts.GoogleFonts.amethystaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1042() {
      return C[1042] = dart.fn(google_fonts.GoogleFonts.amikoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1043() {
      return C[1043] = dart.fn(google_fonts.GoogleFonts.amiriTextTheme, T.TextThemeNToTextTheme());
    },
    get C1044() {
      return C[1044] = dart.fn(google_fonts.GoogleFonts.amitaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1045() {
      return C[1045] = dart.fn(google_fonts.GoogleFonts.anaheimTextTheme, T.TextThemeNToTextTheme());
    },
    get C1046() {
      return C[1046] = dart.fn(google_fonts.GoogleFonts.andadaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1047() {
      return C[1047] = dart.fn(google_fonts.GoogleFonts.andikaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1048() {
      return C[1048] = dart.fn(google_fonts.GoogleFonts.andikaNewBasicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1049() {
      return C[1049] = dart.fn(google_fonts.GoogleFonts.annieUseYourTelescopeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1050() {
      return C[1050] = dart.fn(google_fonts.GoogleFonts.anonymousProTextTheme, T.TextThemeNToTextTheme());
    },
    get C1051() {
      return C[1051] = dart.fn(google_fonts.GoogleFonts.anticTextTheme, T.TextThemeNToTextTheme());
    },
    get C1052() {
      return C[1052] = dart.fn(google_fonts.GoogleFonts.anticDidoneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1053() {
      return C[1053] = dart.fn(google_fonts.GoogleFonts.anticSlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C1054() {
      return C[1054] = dart.fn(google_fonts.GoogleFonts.antonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1055() {
      return C[1055] = dart.fn(google_fonts.GoogleFonts.arapeyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1056() {
      return C[1056] = dart.fn(google_fonts.GoogleFonts.arbutusTextTheme, T.TextThemeNToTextTheme());
    },
    get C1057() {
      return C[1057] = dart.fn(google_fonts.GoogleFonts.arbutusSlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C1058() {
      return C[1058] = dart.fn(google_fonts.GoogleFonts.architectsDaughterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1059() {
      return C[1059] = dart.fn(google_fonts.GoogleFonts.archivoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1060() {
      return C[1060] = dart.fn(google_fonts.GoogleFonts.archivoBlackTextTheme, T.TextThemeNToTextTheme());
    },
    get C1061() {
      return C[1061] = dart.fn(google_fonts.GoogleFonts.archivoNarrowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1062() {
      return C[1062] = dart.fn(google_fonts.GoogleFonts.arefRuqaaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1063() {
      return C[1063] = dart.fn(google_fonts.GoogleFonts.arimaMaduraiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1064() {
      return C[1064] = dart.fn(google_fonts.GoogleFonts.arimoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1065() {
      return C[1065] = dart.fn(google_fonts.GoogleFonts.arizoniaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1066() {
      return C[1066] = dart.fn(google_fonts.GoogleFonts.armataTextTheme, T.TextThemeNToTextTheme());
    },
    get C1067() {
      return C[1067] = dart.fn(google_fonts.GoogleFonts.arsenalTextTheme, T.TextThemeNToTextTheme());
    },
    get C1068() {
      return C[1068] = dart.fn(google_fonts.GoogleFonts.artifikaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1069() {
      return C[1069] = dart.fn(google_fonts.GoogleFonts.arvoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1070() {
      return C[1070] = dart.fn(google_fonts.GoogleFonts.aryaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1071() {
      return C[1071] = dart.fn(google_fonts.GoogleFonts.asapTextTheme, T.TextThemeNToTextTheme());
    },
    get C1072() {
      return C[1072] = dart.fn(google_fonts.GoogleFonts.asarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1073() {
      return C[1073] = dart.fn(google_fonts.GoogleFonts.assetTextTheme, T.TextThemeNToTextTheme());
    },
    get C1074() {
      return C[1074] = dart.fn(google_fonts.GoogleFonts.assistantTextTheme, T.TextThemeNToTextTheme());
    },
    get C1075() {
      return C[1075] = dart.fn(google_fonts.GoogleFonts.astlochTextTheme, T.TextThemeNToTextTheme());
    },
    get C1076() {
      return C[1076] = dart.fn(google_fonts.GoogleFonts.asulTextTheme, T.TextThemeNToTextTheme());
    },
    get C1077() {
      return C[1077] = dart.fn(google_fonts.GoogleFonts.athitiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1078() {
      return C[1078] = dart.fn(google_fonts.GoogleFonts.atmaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1079() {
      return C[1079] = dart.fn(google_fonts.GoogleFonts.atomicAgeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1080() {
      return C[1080] = dart.fn(google_fonts.GoogleFonts.aubreyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1081() {
      return C[1081] = dart.fn(google_fonts.GoogleFonts.audiowideTextTheme, T.TextThemeNToTextTheme());
    },
    get C1082() {
      return C[1082] = dart.fn(google_fonts.GoogleFonts.autourOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1083() {
      return C[1083] = dart.fn(google_fonts.GoogleFonts.averageTextTheme, T.TextThemeNToTextTheme());
    },
    get C1084() {
      return C[1084] = dart.fn(google_fonts.GoogleFonts.averageSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1085() {
      return C[1085] = dart.fn(google_fonts.GoogleFonts.averiaGruesaLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1086() {
      return C[1086] = dart.fn(google_fonts.GoogleFonts.averiaLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1087() {
      return C[1087] = dart.fn(google_fonts.GoogleFonts.averiaSansLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1088() {
      return C[1088] = dart.fn(google_fonts.GoogleFonts.averiaSerifLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1089() {
      return C[1089] = dart.fn(google_fonts.GoogleFonts.b612TextTheme, T.TextThemeNToTextTheme());
    },
    get C1090() {
      return C[1090] = dart.fn(google_fonts.GoogleFonts.b612MonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1091() {
      return C[1091] = dart.fn(google_fonts.GoogleFonts.badScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1092() {
      return C[1092] = dart.fn(google_fonts.GoogleFonts.bahianaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1093() {
      return C[1093] = dart.fn(google_fonts.GoogleFonts.bahianitaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1094() {
      return C[1094] = dart.fn(google_fonts.GoogleFonts.baiJamjureeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1095() {
      return C[1095] = dart.fn(google_fonts.GoogleFonts.balooTextTheme, T.TextThemeNToTextTheme());
    },
    get C1096() {
      return C[1096] = dart.fn(google_fonts.GoogleFonts.balooBhaiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1097() {
      return C[1097] = dart.fn(google_fonts.GoogleFonts.balooBhaijaanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1098() {
      return C[1098] = dart.fn(google_fonts.GoogleFonts.balooBhainaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1099() {
      return C[1099] = dart.fn(google_fonts.GoogleFonts.balooChettanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1100() {
      return C[1100] = dart.fn(google_fonts.GoogleFonts.balooDaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1101() {
      return C[1101] = dart.fn(google_fonts.GoogleFonts.balooPaajiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1102() {
      return C[1102] = dart.fn(google_fonts.GoogleFonts.balooTammaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1103() {
      return C[1103] = dart.fn(google_fonts.GoogleFonts.balooTammuduTextTheme, T.TextThemeNToTextTheme());
    },
    get C1104() {
      return C[1104] = dart.fn(google_fonts.GoogleFonts.balooThambiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1105() {
      return C[1105] = dart.fn(google_fonts.GoogleFonts.balsamiqSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1106() {
      return C[1106] = dart.fn(google_fonts.GoogleFonts.balthazarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1107() {
      return C[1107] = dart.fn(google_fonts.GoogleFonts.bangersTextTheme, T.TextThemeNToTextTheme());
    },
    get C1108() {
      return C[1108] = dart.fn(google_fonts.GoogleFonts.barlowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1109() {
      return C[1109] = dart.fn(google_fonts.GoogleFonts.barlowCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1110() {
      return C[1110] = dart.fn(google_fonts.GoogleFonts.barlowSemiCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1111() {
      return C[1111] = dart.fn(google_fonts.GoogleFonts.barriecitoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1112() {
      return C[1112] = dart.fn(google_fonts.GoogleFonts.barrioTextTheme, T.TextThemeNToTextTheme());
    },
    get C1113() {
      return C[1113] = dart.fn(google_fonts.GoogleFonts.basicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1114() {
      return C[1114] = dart.fn(google_fonts.GoogleFonts.baskervvilleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1115() {
      return C[1115] = dart.fn(google_fonts.GoogleFonts.baumansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1116() {
      return C[1116] = dart.fn(google_fonts.GoogleFonts.beVietnamTextTheme, T.TextThemeNToTextTheme());
    },
    get C1117() {
      return C[1117] = dart.fn(google_fonts.GoogleFonts.bebasNeueTextTheme, T.TextThemeNToTextTheme());
    },
    get C1118() {
      return C[1118] = dart.fn(google_fonts.GoogleFonts.belgranoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1119() {
      return C[1119] = dart.fn(google_fonts.GoogleFonts.bellefairTextTheme, T.TextThemeNToTextTheme());
    },
    get C1120() {
      return C[1120] = dart.fn(google_fonts.GoogleFonts.bellezaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1121() {
      return C[1121] = dart.fn(google_fonts.GoogleFonts.bellotaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1122() {
      return C[1122] = dart.fn(google_fonts.GoogleFonts.bellotaTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1123() {
      return C[1123] = dart.fn(google_fonts.GoogleFonts.benchNineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1124() {
      return C[1124] = dart.fn(google_fonts.GoogleFonts.benthamTextTheme, T.TextThemeNToTextTheme());
    },
    get C1125() {
      return C[1125] = dart.fn(google_fonts.GoogleFonts.berkshireSwashTextTheme, T.TextThemeNToTextTheme());
    },
    get C1126() {
      return C[1126] = dart.fn(google_fonts.GoogleFonts.bethEllenTextTheme, T.TextThemeNToTextTheme());
    },
    get C1127() {
      return C[1127] = dart.fn(google_fonts.GoogleFonts.bevanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1128() {
      return C[1128] = dart.fn(google_fonts.GoogleFonts.bigShouldersDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1129() {
      return C[1129] = dart.fn(google_fonts.GoogleFonts.bigShouldersInlineDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1130() {
      return C[1130] = dart.fn(google_fonts.GoogleFonts.bigShouldersInlineTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1131() {
      return C[1131] = dart.fn(google_fonts.GoogleFonts.bigShouldersStencilDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1132() {
      return C[1132] = dart.fn(google_fonts.GoogleFonts.bigShouldersStencilTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1133() {
      return C[1133] = dart.fn(google_fonts.GoogleFonts.bigShouldersTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1134() {
      return C[1134] = dart.fn(google_fonts.GoogleFonts.bigelowRulesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1135() {
      return C[1135] = dart.fn(google_fonts.GoogleFonts.bigshotOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1136() {
      return C[1136] = dart.fn(google_fonts.GoogleFonts.bilboTextTheme, T.TextThemeNToTextTheme());
    },
    get C1137() {
      return C[1137] = dart.fn(google_fonts.GoogleFonts.bilboSwashCapsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1138() {
      return C[1138] = dart.fn(google_fonts.GoogleFonts.bioRhymeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1139() {
      return C[1139] = dart.fn(google_fonts.GoogleFonts.bioRhymeExpandedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1140() {
      return C[1140] = dart.fn(google_fonts.GoogleFonts.biryaniTextTheme, T.TextThemeNToTextTheme());
    },
    get C1141() {
      return C[1141] = dart.fn(google_fonts.GoogleFonts.bitterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1142() {
      return C[1142] = dart.fn(google_fonts.GoogleFonts.blackAndWhitePictureTextTheme, T.TextThemeNToTextTheme());
    },
    get C1143() {
      return C[1143] = dart.fn(google_fonts.GoogleFonts.blackHanSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1144() {
      return C[1144] = dart.fn(google_fonts.GoogleFonts.blackOpsOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1145() {
      return C[1145] = dart.fn(google_fonts.GoogleFonts.blinkerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1146() {
      return C[1146] = dart.fn(google_fonts.GoogleFonts.bonbonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1147() {
      return C[1147] = dart.fn(google_fonts.GoogleFonts.boogalooTextTheme, T.TextThemeNToTextTheme());
    },
    get C1148() {
      return C[1148] = dart.fn(google_fonts.GoogleFonts.bowlbyOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1149() {
      return C[1149] = dart.fn(google_fonts.GoogleFonts.bowlbyOneScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1150() {
      return C[1150] = dart.fn(google_fonts.GoogleFonts.brawlerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1151() {
      return C[1151] = dart.fn(google_fonts.GoogleFonts.breeSerifTextTheme, T.TextThemeNToTextTheme());
    },
    get C1152() {
      return C[1152] = dart.fn(google_fonts.GoogleFonts.bubblegumSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1153() {
      return C[1153] = dart.fn(google_fonts.GoogleFonts.bubblerOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1154() {
      return C[1154] = dart.fn(google_fonts.GoogleFonts.budaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1155() {
      return C[1155] = dart.fn(google_fonts.GoogleFonts.buenardTextTheme, T.TextThemeNToTextTheme());
    },
    get C1156() {
      return C[1156] = dart.fn(google_fonts.GoogleFonts.bungeeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1157() {
      return C[1157] = dart.fn(google_fonts.GoogleFonts.bungeeHairlineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1158() {
      return C[1158] = dart.fn(google_fonts.GoogleFonts.bungeeInlineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1159() {
      return C[1159] = dart.fn(google_fonts.GoogleFonts.bungeeOutlineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1160() {
      return C[1160] = dart.fn(google_fonts.GoogleFonts.bungeeShadeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1161() {
      return C[1161] = dart.fn(google_fonts.GoogleFonts.butchermanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1162() {
      return C[1162] = dart.fn(google_fonts.GoogleFonts.butterflyKidsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1163() {
      return C[1163] = dart.fn(google_fonts.GoogleFonts.cabinTextTheme, T.TextThemeNToTextTheme());
    },
    get C1164() {
      return C[1164] = dart.fn(google_fonts.GoogleFonts.cabinCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1165() {
      return C[1165] = dart.fn(google_fonts.GoogleFonts.cabinSketchTextTheme, T.TextThemeNToTextTheme());
    },
    get C1166() {
      return C[1166] = dart.fn(google_fonts.GoogleFonts.caesarDressingTextTheme, T.TextThemeNToTextTheme());
    },
    get C1167() {
      return C[1167] = dart.fn(google_fonts.GoogleFonts.cagliostroTextTheme, T.TextThemeNToTextTheme());
    },
    get C1168() {
      return C[1168] = dart.fn(google_fonts.GoogleFonts.cairoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1169() {
      return C[1169] = dart.fn(google_fonts.GoogleFonts.caladeaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1170() {
      return C[1170] = dart.fn(google_fonts.GoogleFonts.calistogaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1171() {
      return C[1171] = dart.fn(google_fonts.GoogleFonts.calligraffittiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1172() {
      return C[1172] = dart.fn(google_fonts.GoogleFonts.cambayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1173() {
      return C[1173] = dart.fn(google_fonts.GoogleFonts.camboTextTheme, T.TextThemeNToTextTheme());
    },
    get C1174() {
      return C[1174] = dart.fn(google_fonts.GoogleFonts.candalTextTheme, T.TextThemeNToTextTheme());
    },
    get C1175() {
      return C[1175] = dart.fn(google_fonts.GoogleFonts.cantarellTextTheme, T.TextThemeNToTextTheme());
    },
    get C1176() {
      return C[1176] = dart.fn(google_fonts.GoogleFonts.cantataOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1177() {
      return C[1177] = dart.fn(google_fonts.GoogleFonts.cantoraOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1178() {
      return C[1178] = dart.fn(google_fonts.GoogleFonts.capriolaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1179() {
      return C[1179] = dart.fn(google_fonts.GoogleFonts.cardoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1180() {
      return C[1180] = dart.fn(google_fonts.GoogleFonts.carmeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1181() {
      return C[1181] = dart.fn(google_fonts.GoogleFonts.carroisGothicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1182() {
      return C[1182] = dart.fn(google_fonts.GoogleFonts.carroisGothicScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1183() {
      return C[1183] = dart.fn(google_fonts.GoogleFonts.carterOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1184() {
      return C[1184] = dart.fn(google_fonts.GoogleFonts.castoroTextTheme, T.TextThemeNToTextTheme());
    },
    get C1185() {
      return C[1185] = dart.fn(google_fonts.GoogleFonts.catamaranTextTheme, T.TextThemeNToTextTheme());
    },
    get C1186() {
      return C[1186] = dart.fn(google_fonts.GoogleFonts.caudexTextTheme, T.TextThemeNToTextTheme());
    },
    get C1187() {
      return C[1187] = dart.fn(google_fonts.GoogleFonts.caveatTextTheme, T.TextThemeNToTextTheme());
    },
    get C1188() {
      return C[1188] = dart.fn(google_fonts.GoogleFonts.caveatBrushTextTheme, T.TextThemeNToTextTheme());
    },
    get C1189() {
      return C[1189] = dart.fn(google_fonts.GoogleFonts.cedarvilleCursiveTextTheme, T.TextThemeNToTextTheme());
    },
    get C1190() {
      return C[1190] = dart.fn(google_fonts.GoogleFonts.cevicheOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1191() {
      return C[1191] = dart.fn(google_fonts.GoogleFonts.chakraPetchTextTheme, T.TextThemeNToTextTheme());
    },
    get C1192() {
      return C[1192] = dart.fn(google_fonts.GoogleFonts.changaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1193() {
      return C[1193] = dart.fn(google_fonts.GoogleFonts.changaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1194() {
      return C[1194] = dart.fn(google_fonts.GoogleFonts.changoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1195() {
      return C[1195] = dart.fn(google_fonts.GoogleFonts.charmTextTheme, T.TextThemeNToTextTheme());
    },
    get C1196() {
      return C[1196] = dart.fn(google_fonts.GoogleFonts.charmonmanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1197() {
      return C[1197] = dart.fn(google_fonts.GoogleFonts.chathuraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1198() {
      return C[1198] = dart.fn(google_fonts.GoogleFonts.chauPhilomeneOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1199() {
      return C[1199] = dart.fn(google_fonts.GoogleFonts.chelaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1200() {
      return C[1200] = dart.fn(google_fonts.GoogleFonts.chelseaMarketTextTheme, T.TextThemeNToTextTheme());
    },
    get C1201() {
      return C[1201] = dart.fn(google_fonts.GoogleFonts.cherryCreamSodaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1202() {
      return C[1202] = dart.fn(google_fonts.GoogleFonts.cherrySwashTextTheme, T.TextThemeNToTextTheme());
    },
    get C1203() {
      return C[1203] = dart.fn(google_fonts.GoogleFonts.chewyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1204() {
      return C[1204] = dart.fn(google_fonts.GoogleFonts.chicleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1205() {
      return C[1205] = dart.fn(google_fonts.GoogleFonts.chilankaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1206() {
      return C[1206] = dart.fn(google_fonts.GoogleFonts.chivoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1207() {
      return C[1207] = dart.fn(google_fonts.GoogleFonts.chonburiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1208() {
      return C[1208] = dart.fn(google_fonts.GoogleFonts.cinzelTextTheme, T.TextThemeNToTextTheme());
    },
    get C1209() {
      return C[1209] = dart.fn(google_fonts.GoogleFonts.cinzelDecorativeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1210() {
      return C[1210] = dart.fn(google_fonts.GoogleFonts.clickerScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1211() {
      return C[1211] = dart.fn(google_fonts.GoogleFonts.codaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1212() {
      return C[1212] = dart.fn(google_fonts.GoogleFonts.codaCaptionTextTheme, T.TextThemeNToTextTheme());
    },
    get C1213() {
      return C[1213] = dart.fn(google_fonts.GoogleFonts.codystarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1214() {
      return C[1214] = dart.fn(google_fonts.GoogleFonts.coinyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1215() {
      return C[1215] = dart.fn(google_fonts.GoogleFonts.comboTextTheme, T.TextThemeNToTextTheme());
    },
    get C1216() {
      return C[1216] = dart.fn(google_fonts.GoogleFonts.comfortaaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1217() {
      return C[1217] = dart.fn(google_fonts.GoogleFonts.comicNeueTextTheme, T.TextThemeNToTextTheme());
    },
    get C1218() {
      return C[1218] = dart.fn(google_fonts.GoogleFonts.comingSoonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1219() {
      return C[1219] = dart.fn(google_fonts.GoogleFonts.commissionerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1220() {
      return C[1220] = dart.fn(google_fonts.GoogleFonts.concertOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1221() {
      return C[1221] = dart.fn(google_fonts.GoogleFonts.condimentTextTheme, T.TextThemeNToTextTheme());
    },
    get C1222() {
      return C[1222] = dart.fn(google_fonts.GoogleFonts.contrailOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1223() {
      return C[1223] = dart.fn(google_fonts.GoogleFonts.convergenceTextTheme, T.TextThemeNToTextTheme());
    },
    get C1224() {
      return C[1224] = dart.fn(google_fonts.GoogleFonts.cookieTextTheme, T.TextThemeNToTextTheme());
    },
    get C1225() {
      return C[1225] = dart.fn(google_fonts.GoogleFonts.copseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1226() {
      return C[1226] = dart.fn(google_fonts.GoogleFonts.corbenTextTheme, T.TextThemeNToTextTheme());
    },
    get C1227() {
      return C[1227] = dart.fn(google_fonts.GoogleFonts.cormorantTextTheme, T.TextThemeNToTextTheme());
    },
    get C1228() {
      return C[1228] = dart.fn(google_fonts.GoogleFonts.cormorantGaramondTextTheme, T.TextThemeNToTextTheme());
    },
    get C1229() {
      return C[1229] = dart.fn(google_fonts.GoogleFonts.cormorantInfantTextTheme, T.TextThemeNToTextTheme());
    },
    get C1230() {
      return C[1230] = dart.fn(google_fonts.GoogleFonts.cormorantScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1231() {
      return C[1231] = dart.fn(google_fonts.GoogleFonts.cormorantUnicaseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1232() {
      return C[1232] = dart.fn(google_fonts.GoogleFonts.cormorantUprightTextTheme, T.TextThemeNToTextTheme());
    },
    get C1233() {
      return C[1233] = dart.fn(google_fonts.GoogleFonts.courgetteTextTheme, T.TextThemeNToTextTheme());
    },
    get C1234() {
      return C[1234] = dart.fn(google_fonts.GoogleFonts.courierPrimeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1235() {
      return C[1235] = dart.fn(google_fonts.GoogleFonts.cousineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1236() {
      return C[1236] = dart.fn(google_fonts.GoogleFonts.coustardTextTheme, T.TextThemeNToTextTheme());
    },
    get C1237() {
      return C[1237] = dart.fn(google_fonts.GoogleFonts.coveredByYourGraceTextTheme, T.TextThemeNToTextTheme());
    },
    get C1238() {
      return C[1238] = dart.fn(google_fonts.GoogleFonts.craftyGirlsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1239() {
      return C[1239] = dart.fn(google_fonts.GoogleFonts.creepsterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1240() {
      return C[1240] = dart.fn(google_fonts.GoogleFonts.creteRoundTextTheme, T.TextThemeNToTextTheme());
    },
    get C1241() {
      return C[1241] = dart.fn(google_fonts.GoogleFonts.crimsonProTextTheme, T.TextThemeNToTextTheme());
    },
    get C1242() {
      return C[1242] = dart.fn(google_fonts.GoogleFonts.crimsonTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1243() {
      return C[1243] = dart.fn(google_fonts.GoogleFonts.croissantOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1244() {
      return C[1244] = dart.fn(google_fonts.GoogleFonts.crushedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1245() {
      return C[1245] = dart.fn(google_fonts.GoogleFonts.cuprumTextTheme, T.TextThemeNToTextTheme());
    },
    get C1246() {
      return C[1246] = dart.fn(google_fonts.GoogleFonts.cuteFontTextTheme, T.TextThemeNToTextTheme());
    },
    get C1247() {
      return C[1247] = dart.fn(google_fonts.GoogleFonts.cutiveTextTheme, T.TextThemeNToTextTheme());
    },
    get C1248() {
      return C[1248] = dart.fn(google_fonts.GoogleFonts.cutiveMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1249() {
      return C[1249] = dart.fn(google_fonts.GoogleFonts.dmMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1250() {
      return C[1250] = dart.fn(google_fonts.GoogleFonts.dmSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1251() {
      return C[1251] = dart.fn(google_fonts.GoogleFonts.dmSerifDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1252() {
      return C[1252] = dart.fn(google_fonts.GoogleFonts.dmSerifTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1253() {
      return C[1253] = dart.fn(google_fonts.GoogleFonts.damionTextTheme, T.TextThemeNToTextTheme());
    },
    get C1254() {
      return C[1254] = dart.fn(google_fonts.GoogleFonts.dancingScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1255() {
      return C[1255] = dart.fn(google_fonts.GoogleFonts.darkerGrotesqueTextTheme, T.TextThemeNToTextTheme());
    },
    get C1256() {
      return C[1256] = dart.fn(google_fonts.GoogleFonts.davidLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1257() {
      return C[1257] = dart.fn(google_fonts.GoogleFonts.dawningOfANewDayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1258() {
      return C[1258] = dart.fn(google_fonts.GoogleFonts.daysOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1259() {
      return C[1259] = dart.fn(google_fonts.GoogleFonts.dekkoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1260() {
      return C[1260] = dart.fn(google_fonts.GoogleFonts.deliusTextTheme, T.TextThemeNToTextTheme());
    },
    get C1261() {
      return C[1261] = dart.fn(google_fonts.GoogleFonts.deliusSwashCapsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1262() {
      return C[1262] = dart.fn(google_fonts.GoogleFonts.deliusUnicaseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1263() {
      return C[1263] = dart.fn(google_fonts.GoogleFonts.dellaRespiraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1264() {
      return C[1264] = dart.fn(google_fonts.GoogleFonts.denkOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1265() {
      return C[1265] = dart.fn(google_fonts.GoogleFonts.devonshireTextTheme, T.TextThemeNToTextTheme());
    },
    get C1266() {
      return C[1266] = dart.fn(google_fonts.GoogleFonts.dhurjatiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1267() {
      return C[1267] = dart.fn(google_fonts.GoogleFonts.didactGothicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1268() {
      return C[1268] = dart.fn(google_fonts.GoogleFonts.diplomataTextTheme, T.TextThemeNToTextTheme());
    },
    get C1269() {
      return C[1269] = dart.fn(google_fonts.GoogleFonts.diplomataScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1270() {
      return C[1270] = dart.fn(google_fonts.GoogleFonts.doHyeonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1271() {
      return C[1271] = dart.fn(google_fonts.GoogleFonts.dokdoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1272() {
      return C[1272] = dart.fn(google_fonts.GoogleFonts.domineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1273() {
      return C[1273] = dart.fn(google_fonts.GoogleFonts.donegalOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1274() {
      return C[1274] = dart.fn(google_fonts.GoogleFonts.doppioOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1275() {
      return C[1275] = dart.fn(google_fonts.GoogleFonts.dorsaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1276() {
      return C[1276] = dart.fn(google_fonts.GoogleFonts.dosisTextTheme, T.TextThemeNToTextTheme());
    },
    get C1277() {
      return C[1277] = dart.fn(google_fonts.GoogleFonts.drSugiyamaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1278() {
      return C[1278] = dart.fn(google_fonts.GoogleFonts.droidSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1279() {
      return C[1279] = dart.fn(google_fonts.GoogleFonts.droidSansMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1280() {
      return C[1280] = dart.fn(google_fonts.GoogleFonts.droidSerifTextTheme, T.TextThemeNToTextTheme());
    },
    get C1281() {
      return C[1281] = dart.fn(google_fonts.GoogleFonts.duruSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1282() {
      return C[1282] = dart.fn(google_fonts.GoogleFonts.dynalightTextTheme, T.TextThemeNToTextTheme());
    },
    get C1283() {
      return C[1283] = dart.fn(google_fonts.GoogleFonts.ebGaramondTextTheme, T.TextThemeNToTextTheme());
    },
    get C1284() {
      return C[1284] = dart.fn(google_fonts.GoogleFonts.eagleLakeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1285() {
      return C[1285] = dart.fn(google_fonts.GoogleFonts.eastSeaDokdoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1286() {
      return C[1286] = dart.fn(google_fonts.GoogleFonts.eaterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1287() {
      return C[1287] = dart.fn(google_fonts.GoogleFonts.economicaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1288() {
      return C[1288] = dart.fn(google_fonts.GoogleFonts.eczarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1289() {
      return C[1289] = dart.fn(google_fonts.GoogleFonts.elMessiriTextTheme, T.TextThemeNToTextTheme());
    },
    get C1290() {
      return C[1290] = dart.fn(google_fonts.GoogleFonts.electrolizeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1291() {
      return C[1291] = dart.fn(google_fonts.GoogleFonts.elsieTextTheme, T.TextThemeNToTextTheme());
    },
    get C1292() {
      return C[1292] = dart.fn(google_fonts.GoogleFonts.elsieSwashCapsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1293() {
      return C[1293] = dart.fn(google_fonts.GoogleFonts.emblemaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1294() {
      return C[1294] = dart.fn(google_fonts.GoogleFonts.emilysCandyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1295() {
      return C[1295] = dart.fn(google_fonts.GoogleFonts.encodeSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1296() {
      return C[1296] = dart.fn(google_fonts.GoogleFonts.encodeSansCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1297() {
      return C[1297] = dart.fn(google_fonts.GoogleFonts.encodeSansExpandedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1298() {
      return C[1298] = dart.fn(google_fonts.GoogleFonts.encodeSansSemiCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1299() {
      return C[1299] = dart.fn(google_fonts.GoogleFonts.encodeSansSemiExpandedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1300() {
      return C[1300] = dart.fn(google_fonts.GoogleFonts.engagementTextTheme, T.TextThemeNToTextTheme());
    },
    get C1301() {
      return C[1301] = dart.fn(google_fonts.GoogleFonts.englebertTextTheme, T.TextThemeNToTextTheme());
    },
    get C1302() {
      return C[1302] = dart.fn(google_fonts.GoogleFonts.enriquetaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1303() {
      return C[1303] = dart.fn(google_fonts.GoogleFonts.epilogueTextTheme, T.TextThemeNToTextTheme());
    },
    get C1304() {
      return C[1304] = dart.fn(google_fonts.GoogleFonts.ericaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1305() {
      return C[1305] = dart.fn(google_fonts.GoogleFonts.estebanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1306() {
      return C[1306] = dart.fn(google_fonts.GoogleFonts.euphoriaScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1307() {
      return C[1307] = dart.fn(google_fonts.GoogleFonts.ewertTextTheme, T.TextThemeNToTextTheme());
    },
    get C1308() {
      return C[1308] = dart.fn(google_fonts.GoogleFonts.exoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1309() {
      return C[1309] = dart.fn(google_fonts.GoogleFonts.exo2TextTheme, T.TextThemeNToTextTheme());
    },
    get C1310() {
      return C[1310] = dart.fn(google_fonts.GoogleFonts.expletusSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1311() {
      return C[1311] = dart.fn(google_fonts.GoogleFonts.fahkwangTextTheme, T.TextThemeNToTextTheme());
    },
    get C1312() {
      return C[1312] = dart.fn(google_fonts.GoogleFonts.fanwoodTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1313() {
      return C[1313] = dart.fn(google_fonts.GoogleFonts.farroTextTheme, T.TextThemeNToTextTheme());
    },
    get C1314() {
      return C[1314] = dart.fn(google_fonts.GoogleFonts.farsanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1315() {
      return C[1315] = dart.fn(google_fonts.GoogleFonts.fascinateTextTheme, T.TextThemeNToTextTheme());
    },
    get C1316() {
      return C[1316] = dart.fn(google_fonts.GoogleFonts.fascinateInlineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1317() {
      return C[1317] = dart.fn(google_fonts.GoogleFonts.fasterOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1318() {
      return C[1318] = dart.fn(google_fonts.GoogleFonts.faunaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1319() {
      return C[1319] = dart.fn(google_fonts.GoogleFonts.faustinaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1320() {
      return C[1320] = dart.fn(google_fonts.GoogleFonts.federantTextTheme, T.TextThemeNToTextTheme());
    },
    get C1321() {
      return C[1321] = dart.fn(google_fonts.GoogleFonts.federoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1322() {
      return C[1322] = dart.fn(google_fonts.GoogleFonts.felipaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1323() {
      return C[1323] = dart.fn(google_fonts.GoogleFonts.fenixTextTheme, T.TextThemeNToTextTheme());
    },
    get C1324() {
      return C[1324] = dart.fn(google_fonts.GoogleFonts.fingerPaintTextTheme, T.TextThemeNToTextTheme());
    },
    get C1325() {
      return C[1325] = dart.fn(google_fonts.GoogleFonts.firaCodeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1326() {
      return C[1326] = dart.fn(google_fonts.GoogleFonts.firaMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1327() {
      return C[1327] = dart.fn(google_fonts.GoogleFonts.firaSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1328() {
      return C[1328] = dart.fn(google_fonts.GoogleFonts.firaSansCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1329() {
      return C[1329] = dart.fn(google_fonts.GoogleFonts.firaSansExtraCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1330() {
      return C[1330] = dart.fn(google_fonts.GoogleFonts.fjallaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1331() {
      return C[1331] = dart.fn(google_fonts.GoogleFonts.fjordOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1332() {
      return C[1332] = dart.fn(google_fonts.GoogleFonts.flamencoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1333() {
      return C[1333] = dart.fn(google_fonts.GoogleFonts.flavorsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1334() {
      return C[1334] = dart.fn(google_fonts.GoogleFonts.fondamentoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1335() {
      return C[1335] = dart.fn(google_fonts.GoogleFonts.fontdinerSwankyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1336() {
      return C[1336] = dart.fn(google_fonts.GoogleFonts.forumTextTheme, T.TextThemeNToTextTheme());
    },
    get C1337() {
      return C[1337] = dart.fn(google_fonts.GoogleFonts.francoisOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1338() {
      return C[1338] = dart.fn(google_fonts.GoogleFonts.frankRuhlLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1339() {
      return C[1339] = dart.fn(google_fonts.GoogleFonts.frauncesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1340() {
      return C[1340] = dart.fn(google_fonts.GoogleFonts.freckleFaceTextTheme, T.TextThemeNToTextTheme());
    },
    get C1341() {
      return C[1341] = dart.fn(google_fonts.GoogleFonts.frederickaTheGreatTextTheme, T.TextThemeNToTextTheme());
    },
    get C1342() {
      return C[1342] = dart.fn(google_fonts.GoogleFonts.fredokaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1343() {
      return C[1343] = dart.fn(google_fonts.GoogleFonts.frescaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1344() {
      return C[1344] = dart.fn(google_fonts.GoogleFonts.frijoleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1345() {
      return C[1345] = dart.fn(google_fonts.GoogleFonts.frukturTextTheme, T.TextThemeNToTextTheme());
    },
    get C1346() {
      return C[1346] = dart.fn(google_fonts.GoogleFonts.fugazOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1347() {
      return C[1347] = dart.fn(google_fonts.GoogleFonts.gfsDidotTextTheme, T.TextThemeNToTextTheme());
    },
    get C1348() {
      return C[1348] = dart.fn(google_fonts.GoogleFonts.gfsNeohellenicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1349() {
      return C[1349] = dart.fn(google_fonts.GoogleFonts.gabrielaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1350() {
      return C[1350] = dart.fn(google_fonts.GoogleFonts.gaeguTextTheme, T.TextThemeNToTextTheme());
    },
    get C1351() {
      return C[1351] = dart.fn(google_fonts.GoogleFonts.gafataTextTheme, T.TextThemeNToTextTheme());
    },
    get C1352() {
      return C[1352] = dart.fn(google_fonts.GoogleFonts.galadaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1353() {
      return C[1353] = dart.fn(google_fonts.GoogleFonts.galdeanoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1354() {
      return C[1354] = dart.fn(google_fonts.GoogleFonts.galindoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1355() {
      return C[1355] = dart.fn(google_fonts.GoogleFonts.gamjaFlowerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1356() {
      return C[1356] = dart.fn(google_fonts.GoogleFonts.gayathriTextTheme, T.TextThemeNToTextTheme());
    },
    get C1357() {
      return C[1357] = dart.fn(google_fonts.GoogleFonts.gelasioTextTheme, T.TextThemeNToTextTheme());
    },
    get C1358() {
      return C[1358] = dart.fn(google_fonts.GoogleFonts.gentiumBasicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1359() {
      return C[1359] = dart.fn(google_fonts.GoogleFonts.gentiumBookBasicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1360() {
      return C[1360] = dart.fn(google_fonts.GoogleFonts.geoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1361() {
      return C[1361] = dart.fn(google_fonts.GoogleFonts.geostarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1362() {
      return C[1362] = dart.fn(google_fonts.GoogleFonts.geostarFillTextTheme, T.TextThemeNToTextTheme());
    },
    get C1363() {
      return C[1363] = dart.fn(google_fonts.GoogleFonts.germaniaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1364() {
      return C[1364] = dart.fn(google_fonts.GoogleFonts.giduguTextTheme, T.TextThemeNToTextTheme());
    },
    get C1365() {
      return C[1365] = dart.fn(google_fonts.GoogleFonts.gildaDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1366() {
      return C[1366] = dart.fn(google_fonts.GoogleFonts.girassolTextTheme, T.TextThemeNToTextTheme());
    },
    get C1367() {
      return C[1367] = dart.fn(google_fonts.GoogleFonts.giveYouGloryTextTheme, T.TextThemeNToTextTheme());
    },
    get C1368() {
      return C[1368] = dart.fn(google_fonts.GoogleFonts.glassAntiquaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1369() {
      return C[1369] = dart.fn(google_fonts.GoogleFonts.glegooTextTheme, T.TextThemeNToTextTheme());
    },
    get C1370() {
      return C[1370] = dart.fn(google_fonts.GoogleFonts.gloriaHallelujahTextTheme, T.TextThemeNToTextTheme());
    },
    get C1371() {
      return C[1371] = dart.fn(google_fonts.GoogleFonts.goblinOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1372() {
      return C[1372] = dart.fn(google_fonts.GoogleFonts.gochiHandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1373() {
      return C[1373] = dart.fn(google_fonts.GoogleFonts.goldmanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1374() {
      return C[1374] = dart.fn(google_fonts.GoogleFonts.gorditasTextTheme, T.TextThemeNToTextTheme());
    },
    get C1375() {
      return C[1375] = dart.fn(google_fonts.GoogleFonts.gothicA1TextTheme, T.TextThemeNToTextTheme());
    },
    get C1376() {
      return C[1376] = dart.fn(google_fonts.GoogleFonts.gotuTextTheme, T.TextThemeNToTextTheme());
    },
    get C1377() {
      return C[1377] = dart.fn(google_fonts.GoogleFonts.goudyBookletter1911TextTheme, T.TextThemeNToTextTheme());
    },
    get C1378() {
      return C[1378] = dart.fn(google_fonts.GoogleFonts.graduateTextTheme, T.TextThemeNToTextTheme());
    },
    get C1379() {
      return C[1379] = dart.fn(google_fonts.GoogleFonts.grandHotelTextTheme, T.TextThemeNToTextTheme());
    },
    get C1380() {
      return C[1380] = dart.fn(google_fonts.GoogleFonts.grandstanderTextTheme, T.TextThemeNToTextTheme());
    },
    get C1381() {
      return C[1381] = dart.fn(google_fonts.GoogleFonts.gravitasOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1382() {
      return C[1382] = dart.fn(google_fonts.GoogleFonts.greatVibesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1383() {
      return C[1383] = dart.fn(google_fonts.GoogleFonts.grenzeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1384() {
      return C[1384] = dart.fn(google_fonts.GoogleFonts.grenzeGotischTextTheme, T.TextThemeNToTextTheme());
    },
    get C1385() {
      return C[1385] = dart.fn(google_fonts.GoogleFonts.griffyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1386() {
      return C[1386] = dart.fn(google_fonts.GoogleFonts.gruppoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1387() {
      return C[1387] = dart.fn(google_fonts.GoogleFonts.gudeaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1388() {
      return C[1388] = dart.fn(google_fonts.GoogleFonts.gugiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1389() {
      return C[1389] = dart.fn(google_fonts.GoogleFonts.gupterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1390() {
      return C[1390] = dart.fn(google_fonts.GoogleFonts.gurajadaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1391() {
      return C[1391] = dart.fn(google_fonts.GoogleFonts.habibiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1392() {
      return C[1392] = dart.fn(google_fonts.GoogleFonts.hachiMaruPopTextTheme, T.TextThemeNToTextTheme());
    },
    get C1393() {
      return C[1393] = dart.fn(google_fonts.GoogleFonts.halantTextTheme, T.TextThemeNToTextTheme());
    },
    get C1394() {
      return C[1394] = dart.fn(google_fonts.GoogleFonts.hammersmithOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1395() {
      return C[1395] = dart.fn(google_fonts.GoogleFonts.hanaleiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1396() {
      return C[1396] = dart.fn(google_fonts.GoogleFonts.hanaleiFillTextTheme, T.TextThemeNToTextTheme());
    },
    get C1397() {
      return C[1397] = dart.fn(google_fonts.GoogleFonts.handleeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1398() {
      return C[1398] = dart.fn(google_fonts.GoogleFonts.happyMonkeyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1399() {
      return C[1399] = dart.fn(google_fonts.GoogleFonts.harmattanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1400() {
      return C[1400] = dart.fn(google_fonts.GoogleFonts.headlandOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1401() {
      return C[1401] = dart.fn(google_fonts.GoogleFonts.heeboTextTheme, T.TextThemeNToTextTheme());
    },
    get C1402() {
      return C[1402] = dart.fn(google_fonts.GoogleFonts.hennyPennyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1403() {
      return C[1403] = dart.fn(google_fonts.GoogleFonts.heptaSlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C1404() {
      return C[1404] = dart.fn(google_fonts.GoogleFonts.herrVonMuellerhoffTextTheme, T.TextThemeNToTextTheme());
    },
    get C1405() {
      return C[1405] = dart.fn(google_fonts.GoogleFonts.hiMelodyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1406() {
      return C[1406] = dart.fn(google_fonts.GoogleFonts.hindTextTheme, T.TextThemeNToTextTheme());
    },
    get C1407() {
      return C[1407] = dart.fn(google_fonts.GoogleFonts.hindGunturTextTheme, T.TextThemeNToTextTheme());
    },
    get C1408() {
      return C[1408] = dart.fn(google_fonts.GoogleFonts.hindMaduraiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1409() {
      return C[1409] = dart.fn(google_fonts.GoogleFonts.hindSiliguriTextTheme, T.TextThemeNToTextTheme());
    },
    get C1410() {
      return C[1410] = dart.fn(google_fonts.GoogleFonts.hindVadodaraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1411() {
      return C[1411] = dart.fn(google_fonts.GoogleFonts.holtwoodOneScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1412() {
      return C[1412] = dart.fn(google_fonts.GoogleFonts.homemadeAppleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1413() {
      return C[1413] = dart.fn(google_fonts.GoogleFonts.homenajeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1414() {
      return C[1414] = dart.fn(google_fonts.GoogleFonts.ibmPlexMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1415() {
      return C[1415] = dart.fn(google_fonts.GoogleFonts.ibmPlexSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1416() {
      return C[1416] = dart.fn(google_fonts.GoogleFonts.ibmPlexSansCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1417() {
      return C[1417] = dart.fn(google_fonts.GoogleFonts.ibmPlexSerifTextTheme, T.TextThemeNToTextTheme());
    },
    get C1418() {
      return C[1418] = dart.fn(google_fonts.GoogleFonts.imFellDwPicaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1419() {
      return C[1419] = dart.fn(google_fonts.GoogleFonts.imFellDwPicaScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1420() {
      return C[1420] = dart.fn(google_fonts.GoogleFonts.imFellDoublePicaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1421() {
      return C[1421] = dart.fn(google_fonts.GoogleFonts.imFellDoublePicaScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1422() {
      return C[1422] = dart.fn(google_fonts.GoogleFonts.imFellEnglishTextTheme, T.TextThemeNToTextTheme());
    },
    get C1423() {
      return C[1423] = dart.fn(google_fonts.GoogleFonts.imFellEnglishScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1424() {
      return C[1424] = dart.fn(google_fonts.GoogleFonts.imFellFrenchCanonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1425() {
      return C[1425] = dart.fn(google_fonts.GoogleFonts.imFellFrenchCanonScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1426() {
      return C[1426] = dart.fn(google_fonts.GoogleFonts.imFellGreatPrimerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1427() {
      return C[1427] = dart.fn(google_fonts.GoogleFonts.imFellGreatPrimerScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1428() {
      return C[1428] = dart.fn(google_fonts.GoogleFonts.ibarraRealNovaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1429() {
      return C[1429] = dart.fn(google_fonts.GoogleFonts.icebergTextTheme, T.TextThemeNToTextTheme());
    },
    get C1430() {
      return C[1430] = dart.fn(google_fonts.GoogleFonts.icelandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1431() {
      return C[1431] = dart.fn(google_fonts.GoogleFonts.imprimaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1432() {
      return C[1432] = dart.fn(google_fonts.GoogleFonts.inconsolataTextTheme, T.TextThemeNToTextTheme());
    },
    get C1433() {
      return C[1433] = dart.fn(google_fonts.GoogleFonts.inderTextTheme, T.TextThemeNToTextTheme());
    },
    get C1434() {
      return C[1434] = dart.fn(google_fonts.GoogleFonts.indieFlowerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1435() {
      return C[1435] = dart.fn(google_fonts.GoogleFonts.inikaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1436() {
      return C[1436] = dart.fn(google_fonts.GoogleFonts.inknutAntiquaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1437() {
      return C[1437] = dart.fn(google_fonts.GoogleFonts.inriaSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1438() {
      return C[1438] = dart.fn(google_fonts.GoogleFonts.inriaSerifTextTheme, T.TextThemeNToTextTheme());
    },
    get C1439() {
      return C[1439] = dart.fn(google_fonts.GoogleFonts.interTextTheme, T.TextThemeNToTextTheme());
    },
    get C1440() {
      return C[1440] = dart.fn(google_fonts.GoogleFonts.irishGroverTextTheme, T.TextThemeNToTextTheme());
    },
    get C1441() {
      return C[1441] = dart.fn(google_fonts.GoogleFonts.istokWebTextTheme, T.TextThemeNToTextTheme());
    },
    get C1442() {
      return C[1442] = dart.fn(google_fonts.GoogleFonts.italianaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1443() {
      return C[1443] = dart.fn(google_fonts.GoogleFonts.italiannoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1444() {
      return C[1444] = dart.fn(google_fonts.GoogleFonts.itimTextTheme, T.TextThemeNToTextTheme());
    },
    get C1445() {
      return C[1445] = dart.fn(google_fonts.GoogleFonts.jacquesFrancoisTextTheme, T.TextThemeNToTextTheme());
    },
    get C1446() {
      return C[1446] = dart.fn(google_fonts.GoogleFonts.jacquesFrancoisShadowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1447() {
      return C[1447] = dart.fn(google_fonts.GoogleFonts.jaldiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1448() {
      return C[1448] = dart.fn(google_fonts.GoogleFonts.jetBrainsMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1449() {
      return C[1449] = dart.fn(google_fonts.GoogleFonts.jimNightshadeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1450() {
      return C[1450] = dart.fn(google_fonts.GoogleFonts.jockeyOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1451() {
      return C[1451] = dart.fn(google_fonts.GoogleFonts.jollyLodgerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1452() {
      return C[1452] = dart.fn(google_fonts.GoogleFonts.jomhuriaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1453() {
      return C[1453] = dart.fn(google_fonts.GoogleFonts.jomolhariTextTheme, T.TextThemeNToTextTheme());
    },
    get C1454() {
      return C[1454] = dart.fn(google_fonts.GoogleFonts.josefinSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1455() {
      return C[1455] = dart.fn(google_fonts.GoogleFonts.josefinSlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C1456() {
      return C[1456] = dart.fn(google_fonts.GoogleFonts.jostTextTheme, T.TextThemeNToTextTheme());
    },
    get C1457() {
      return C[1457] = dart.fn(google_fonts.GoogleFonts.jotiOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1458() {
      return C[1458] = dart.fn(google_fonts.GoogleFonts.juaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1459() {
      return C[1459] = dart.fn(google_fonts.GoogleFonts.judsonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1460() {
      return C[1460] = dart.fn(google_fonts.GoogleFonts.juleeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1461() {
      return C[1461] = dart.fn(google_fonts.GoogleFonts.juliusSansOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1462() {
      return C[1462] = dart.fn(google_fonts.GoogleFonts.jungeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1463() {
      return C[1463] = dart.fn(google_fonts.GoogleFonts.juraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1464() {
      return C[1464] = dart.fn(google_fonts.GoogleFonts.justAnotherHandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1465() {
      return C[1465] = dart.fn(google_fonts.GoogleFonts.justMeAgainDownHereTextTheme, T.TextThemeNToTextTheme());
    },
    get C1466() {
      return C[1466] = dart.fn(google_fonts.GoogleFonts.k2dTextTheme, T.TextThemeNToTextTheme());
    },
    get C1467() {
      return C[1467] = dart.fn(google_fonts.GoogleFonts.kadwaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1468() {
      return C[1468] = dart.fn(google_fonts.GoogleFonts.kalamTextTheme, T.TextThemeNToTextTheme());
    },
    get C1469() {
      return C[1469] = dart.fn(google_fonts.GoogleFonts.kameronTextTheme, T.TextThemeNToTextTheme());
    },
    get C1470() {
      return C[1470] = dart.fn(google_fonts.GoogleFonts.kanitTextTheme, T.TextThemeNToTextTheme());
    },
    get C1471() {
      return C[1471] = dart.fn(google_fonts.GoogleFonts.kantumruyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1472() {
      return C[1472] = dart.fn(google_fonts.GoogleFonts.karlaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1473() {
      return C[1473] = dart.fn(google_fonts.GoogleFonts.karmaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1474() {
      return C[1474] = dart.fn(google_fonts.GoogleFonts.katibehTextTheme, T.TextThemeNToTextTheme());
    },
    get C1475() {
      return C[1475] = dart.fn(google_fonts.GoogleFonts.kaushanScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1476() {
      return C[1476] = dart.fn(google_fonts.GoogleFonts.kavivanarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1477() {
      return C[1477] = dart.fn(google_fonts.GoogleFonts.kavoonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1478() {
      return C[1478] = dart.fn(google_fonts.GoogleFonts.kdamThmorTextTheme, T.TextThemeNToTextTheme());
    },
    get C1479() {
      return C[1479] = dart.fn(google_fonts.GoogleFonts.keaniaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1480() {
      return C[1480] = dart.fn(google_fonts.GoogleFonts.kellySlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C1481() {
      return C[1481] = dart.fn(google_fonts.GoogleFonts.keniaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1482() {
      return C[1482] = dart.fn(google_fonts.GoogleFonts.khandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1483() {
      return C[1483] = dart.fn(google_fonts.GoogleFonts.khulaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1484() {
      return C[1484] = dart.fn(google_fonts.GoogleFonts.kirangHaerangTextTheme, T.TextThemeNToTextTheme());
    },
    get C1485() {
      return C[1485] = dart.fn(google_fonts.GoogleFonts.kiteOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1486() {
      return C[1486] = dart.fn(google_fonts.GoogleFonts.knewaveTextTheme, T.TextThemeNToTextTheme());
    },
    get C1487() {
      return C[1487] = dart.fn(google_fonts.GoogleFonts.koHoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1488() {
      return C[1488] = dart.fn(google_fonts.GoogleFonts.kodchasanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1489() {
      return C[1489] = dart.fn(google_fonts.GoogleFonts.kosugiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1490() {
      return C[1490] = dart.fn(google_fonts.GoogleFonts.kosugiMaruTextTheme, T.TextThemeNToTextTheme());
    },
    get C1491() {
      return C[1491] = dart.fn(google_fonts.GoogleFonts.kottaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1492() {
      return C[1492] = dart.fn(google_fonts.GoogleFonts.krankyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1493() {
      return C[1493] = dart.fn(google_fonts.GoogleFonts.kreonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1494() {
      return C[1494] = dart.fn(google_fonts.GoogleFonts.kristiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1495() {
      return C[1495] = dart.fn(google_fonts.GoogleFonts.kronaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1496() {
      return C[1496] = dart.fn(google_fonts.GoogleFonts.krubTextTheme, T.TextThemeNToTextTheme());
    },
    get C1497() {
      return C[1497] = dart.fn(google_fonts.GoogleFonts.kufamTextTheme, T.TextThemeNToTextTheme());
    },
    get C1498() {
      return C[1498] = dart.fn(google_fonts.GoogleFonts.kulimParkTextTheme, T.TextThemeNToTextTheme());
    },
    get C1499() {
      return C[1499] = dart.fn(google_fonts.GoogleFonts.kumarOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1500() {
      return C[1500] = dart.fn(google_fonts.GoogleFonts.kumarOneOutlineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1501() {
      return C[1501] = dart.fn(google_fonts.GoogleFonts.kumbhSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1502() {
      return C[1502] = dart.fn(google_fonts.GoogleFonts.kuraleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1503() {
      return C[1503] = dart.fn(google_fonts.GoogleFonts.laBelleAuroreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1504() {
      return C[1504] = dart.fn(google_fonts.GoogleFonts.lacquerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1505() {
      return C[1505] = dart.fn(google_fonts.GoogleFonts.lailaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1506() {
      return C[1506] = dart.fn(google_fonts.GoogleFonts.lakkiReddyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1507() {
      return C[1507] = dart.fn(google_fonts.GoogleFonts.lalezarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1508() {
      return C[1508] = dart.fn(google_fonts.GoogleFonts.lancelotTextTheme, T.TextThemeNToTextTheme());
    },
    get C1509() {
      return C[1509] = dart.fn(google_fonts.GoogleFonts.langarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1510() {
      return C[1510] = dart.fn(google_fonts.GoogleFonts.lateefTextTheme, T.TextThemeNToTextTheme());
    },
    get C1511() {
      return C[1511] = dart.fn(google_fonts.GoogleFonts.latoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1512() {
      return C[1512] = dart.fn(google_fonts.GoogleFonts.leagueScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1513() {
      return C[1513] = dart.fn(google_fonts.GoogleFonts.leckerliOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1514() {
      return C[1514] = dart.fn(google_fonts.GoogleFonts.ledgerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1515() {
      return C[1515] = dart.fn(google_fonts.GoogleFonts.lektonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1516() {
      return C[1516] = dart.fn(google_fonts.GoogleFonts.lemonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1517() {
      return C[1517] = dart.fn(google_fonts.GoogleFonts.lemonadaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1518() {
      return C[1518] = dart.fn(google_fonts.GoogleFonts.lexendDecaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1519() {
      return C[1519] = dart.fn(google_fonts.GoogleFonts.lexendExaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1520() {
      return C[1520] = dart.fn(google_fonts.GoogleFonts.lexendGigaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1521() {
      return C[1521] = dart.fn(google_fonts.GoogleFonts.lexendMegaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1522() {
      return C[1522] = dart.fn(google_fonts.GoogleFonts.lexendPetaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1523() {
      return C[1523] = dart.fn(google_fonts.GoogleFonts.lexendTeraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1524() {
      return C[1524] = dart.fn(google_fonts.GoogleFonts.lexendZettaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1525() {
      return C[1525] = dart.fn(google_fonts.GoogleFonts.libreBarcode128TextTheme, T.TextThemeNToTextTheme());
    },
    get C1526() {
      return C[1526] = dart.fn(google_fonts.GoogleFonts.libreBarcode128TextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1527() {
      return C[1527] = dart.fn(google_fonts.GoogleFonts.libreBarcode39TextTheme, T.TextThemeNToTextTheme());
    },
    get C1528() {
      return C[1528] = dart.fn(google_fonts.GoogleFonts.libreBarcode39ExtendedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1529() {
      return C[1529] = dart.fn(google_fonts.GoogleFonts.libreBarcode39ExtendedTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1530() {
      return C[1530] = dart.fn(google_fonts.GoogleFonts.libreBarcode39TextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1531() {
      return C[1531] = dart.fn(google_fonts.GoogleFonts.libreBaskervilleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1532() {
      return C[1532] = dart.fn(google_fonts.GoogleFonts.libreCaslonDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1533() {
      return C[1533] = dart.fn(google_fonts.GoogleFonts.libreCaslonTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1534() {
      return C[1534] = dart.fn(google_fonts.GoogleFonts.libreFranklinTextTheme, T.TextThemeNToTextTheme());
    },
    get C1535() {
      return C[1535] = dart.fn(google_fonts.GoogleFonts.lifeSaversTextTheme, T.TextThemeNToTextTheme());
    },
    get C1536() {
      return C[1536] = dart.fn(google_fonts.GoogleFonts.lilitaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1537() {
      return C[1537] = dart.fn(google_fonts.GoogleFonts.lilyScriptOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1538() {
      return C[1538] = dart.fn(google_fonts.GoogleFonts.limelightTextTheme, T.TextThemeNToTextTheme());
    },
    get C1539() {
      return C[1539] = dart.fn(google_fonts.GoogleFonts.lindenHillTextTheme, T.TextThemeNToTextTheme());
    },
    get C1540() {
      return C[1540] = dart.fn(google_fonts.GoogleFonts.literataTextTheme, T.TextThemeNToTextTheme());
    },
    get C1541() {
      return C[1541] = dart.fn(google_fonts.GoogleFonts.liuJianMaoCaoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1542() {
      return C[1542] = dart.fn(google_fonts.GoogleFonts.livvicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1543() {
      return C[1543] = dart.fn(google_fonts.GoogleFonts.lobsterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1544() {
      return C[1544] = dart.fn(google_fonts.GoogleFonts.lobsterTwoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1545() {
      return C[1545] = dart.fn(google_fonts.GoogleFonts.londrinaOutlineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1546() {
      return C[1546] = dart.fn(google_fonts.GoogleFonts.londrinaShadowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1547() {
      return C[1547] = dart.fn(google_fonts.GoogleFonts.londrinaSketchTextTheme, T.TextThemeNToTextTheme());
    },
    get C1548() {
      return C[1548] = dart.fn(google_fonts.GoogleFonts.londrinaSolidTextTheme, T.TextThemeNToTextTheme());
    },
    get C1549() {
      return C[1549] = dart.fn(google_fonts.GoogleFonts.longCangTextTheme, T.TextThemeNToTextTheme());
    },
    get C1550() {
      return C[1550] = dart.fn(google_fonts.GoogleFonts.loraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1551() {
      return C[1551] = dart.fn(google_fonts.GoogleFonts.loveYaLikeASisterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1552() {
      return C[1552] = dart.fn(google_fonts.GoogleFonts.lovedByTheKingTextTheme, T.TextThemeNToTextTheme());
    },
    get C1553() {
      return C[1553] = dart.fn(google_fonts.GoogleFonts.loversQuarrelTextTheme, T.TextThemeNToTextTheme());
    },
    get C1554() {
      return C[1554] = dart.fn(google_fonts.GoogleFonts.luckiestGuyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1555() {
      return C[1555] = dart.fn(google_fonts.GoogleFonts.lusitanaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1556() {
      return C[1556] = dart.fn(google_fonts.GoogleFonts.lustriaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1557() {
      return C[1557] = dart.fn(google_fonts.GoogleFonts.mPlus1pTextTheme, T.TextThemeNToTextTheme());
    },
    get C1558() {
      return C[1558] = dart.fn(google_fonts.GoogleFonts.mPlusRounded1cTextTheme, T.TextThemeNToTextTheme());
    },
    get C1559() {
      return C[1559] = dart.fn(google_fonts.GoogleFonts.maShanZhengTextTheme, T.TextThemeNToTextTheme());
    },
    get C1560() {
      return C[1560] = dart.fn(google_fonts.GoogleFonts.macondoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1561() {
      return C[1561] = dart.fn(google_fonts.GoogleFonts.macondoSwashCapsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1562() {
      return C[1562] = dart.fn(google_fonts.GoogleFonts.madaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1563() {
      return C[1563] = dart.fn(google_fonts.GoogleFonts.magraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1564() {
      return C[1564] = dart.fn(google_fonts.GoogleFonts.maidenOrangeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1565() {
      return C[1565] = dart.fn(google_fonts.GoogleFonts.maitreeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1566() {
      return C[1566] = dart.fn(google_fonts.GoogleFonts.majorMonoDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1567() {
      return C[1567] = dart.fn(google_fonts.GoogleFonts.makoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1568() {
      return C[1568] = dart.fn(google_fonts.GoogleFonts.maliTextTheme, T.TextThemeNToTextTheme());
    },
    get C1569() {
      return C[1569] = dart.fn(google_fonts.GoogleFonts.mallannaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1570() {
      return C[1570] = dart.fn(google_fonts.GoogleFonts.mandaliTextTheme, T.TextThemeNToTextTheme());
    },
    get C1571() {
      return C[1571] = dart.fn(google_fonts.GoogleFonts.manjariTextTheme, T.TextThemeNToTextTheme());
    },
    get C1572() {
      return C[1572] = dart.fn(google_fonts.GoogleFonts.manropeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1573() {
      return C[1573] = dart.fn(google_fonts.GoogleFonts.mansalvaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1574() {
      return C[1574] = dart.fn(google_fonts.GoogleFonts.manualeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1575() {
      return C[1575] = dart.fn(google_fonts.GoogleFonts.marcellusTextTheme, T.TextThemeNToTextTheme());
    },
    get C1576() {
      return C[1576] = dart.fn(google_fonts.GoogleFonts.marcellusScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1577() {
      return C[1577] = dart.fn(google_fonts.GoogleFonts.marckScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1578() {
      return C[1578] = dart.fn(google_fonts.GoogleFonts.margarineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1579() {
      return C[1579] = dart.fn(google_fonts.GoogleFonts.markaziTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1580() {
      return C[1580] = dart.fn(google_fonts.GoogleFonts.markoOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1581() {
      return C[1581] = dart.fn(google_fonts.GoogleFonts.marmeladTextTheme, T.TextThemeNToTextTheme());
    },
    get C1582() {
      return C[1582] = dart.fn(google_fonts.GoogleFonts.martelTextTheme, T.TextThemeNToTextTheme());
    },
    get C1583() {
      return C[1583] = dart.fn(google_fonts.GoogleFonts.martelSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1584() {
      return C[1584] = dart.fn(google_fonts.GoogleFonts.marvelTextTheme, T.TextThemeNToTextTheme());
    },
    get C1585() {
      return C[1585] = dart.fn(google_fonts.GoogleFonts.mateTextTheme, T.TextThemeNToTextTheme());
    },
    get C1586() {
      return C[1586] = dart.fn(google_fonts.GoogleFonts.mateScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1587() {
      return C[1587] = dart.fn(google_fonts.GoogleFonts.mavenProTextTheme, T.TextThemeNToTextTheme());
    },
    get C1588() {
      return C[1588] = dart.fn(google_fonts.GoogleFonts.mcLarenTextTheme, T.TextThemeNToTextTheme());
    },
    get C1589() {
      return C[1589] = dart.fn(google_fonts.GoogleFonts.meddonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1590() {
      return C[1590] = dart.fn(google_fonts.GoogleFonts.medievalSharpTextTheme, T.TextThemeNToTextTheme());
    },
    get C1591() {
      return C[1591] = dart.fn(google_fonts.GoogleFonts.medulaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1592() {
      return C[1592] = dart.fn(google_fonts.GoogleFonts.meeraInimaiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1593() {
      return C[1593] = dart.fn(google_fonts.GoogleFonts.megrimTextTheme, T.TextThemeNToTextTheme());
    },
    get C1594() {
      return C[1594] = dart.fn(google_fonts.GoogleFonts.meieScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1595() {
      return C[1595] = dart.fn(google_fonts.GoogleFonts.meriendaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1596() {
      return C[1596] = dart.fn(google_fonts.GoogleFonts.meriendaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1597() {
      return C[1597] = dart.fn(google_fonts.GoogleFonts.merriweatherTextTheme, T.TextThemeNToTextTheme());
    },
    get C1598() {
      return C[1598] = dart.fn(google_fonts.GoogleFonts.merriweatherSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1599() {
      return C[1599] = dart.fn(google_fonts.GoogleFonts.metalManiaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1600() {
      return C[1600] = dart.fn(google_fonts.GoogleFonts.metamorphousTextTheme, T.TextThemeNToTextTheme());
    },
    get C1601() {
      return C[1601] = dart.fn(google_fonts.GoogleFonts.metrophobicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1602() {
      return C[1602] = dart.fn(google_fonts.GoogleFonts.michromaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1603() {
      return C[1603] = dart.fn(google_fonts.GoogleFonts.milongaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1604() {
      return C[1604] = dart.fn(google_fonts.GoogleFonts.miltonianTextTheme, T.TextThemeNToTextTheme());
    },
    get C1605() {
      return C[1605] = dart.fn(google_fonts.GoogleFonts.miltonianTattooTextTheme, T.TextThemeNToTextTheme());
    },
    get C1606() {
      return C[1606] = dart.fn(google_fonts.GoogleFonts.minaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1607() {
      return C[1607] = dart.fn(google_fonts.GoogleFonts.miniverTextTheme, T.TextThemeNToTextTheme());
    },
    get C1608() {
      return C[1608] = dart.fn(google_fonts.GoogleFonts.miriamLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1609() {
      return C[1609] = dart.fn(google_fonts.GoogleFonts.mirzaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1610() {
      return C[1610] = dart.fn(google_fonts.GoogleFonts.missFajardoseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1611() {
      return C[1611] = dart.fn(google_fonts.GoogleFonts.mitrTextTheme, T.TextThemeNToTextTheme());
    },
    get C1612() {
      return C[1612] = dart.fn(google_fonts.GoogleFonts.modakTextTheme, T.TextThemeNToTextTheme());
    },
    get C1613() {
      return C[1613] = dart.fn(google_fonts.GoogleFonts.modernAntiquaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1614() {
      return C[1614] = dart.fn(google_fonts.GoogleFonts.mograTextTheme, T.TextThemeNToTextTheme());
    },
    get C1615() {
      return C[1615] = dart.fn(google_fonts.GoogleFonts.molengoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1616() {
      return C[1616] = dart.fn(google_fonts.GoogleFonts.molleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1617() {
      return C[1617] = dart.fn(google_fonts.GoogleFonts.mondaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1618() {
      return C[1618] = dart.fn(google_fonts.GoogleFonts.monofettTextTheme, T.TextThemeNToTextTheme());
    },
    get C1619() {
      return C[1619] = dart.fn(google_fonts.GoogleFonts.monotonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1620() {
      return C[1620] = dart.fn(google_fonts.GoogleFonts.monsieurLaDoulaiseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1621() {
      return C[1621] = dart.fn(google_fonts.GoogleFonts.montagaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1622() {
      return C[1622] = dart.fn(google_fonts.GoogleFonts.montezTextTheme, T.TextThemeNToTextTheme());
    },
    get C1623() {
      return C[1623] = dart.fn(google_fonts.GoogleFonts.montserratTextTheme, T.TextThemeNToTextTheme());
    },
    get C1624() {
      return C[1624] = dart.fn(google_fonts.GoogleFonts.montserratAlternatesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1625() {
      return C[1625] = dart.fn(google_fonts.GoogleFonts.montserratSubrayadaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1626() {
      return C[1626] = dart.fn(google_fonts.GoogleFonts.mountainsOfChristmasTextTheme, T.TextThemeNToTextTheme());
    },
    get C1627() {
      return C[1627] = dart.fn(google_fonts.GoogleFonts.mouseMemoirsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1628() {
      return C[1628] = dart.fn(google_fonts.GoogleFonts.mrBedfortTextTheme, T.TextThemeNToTextTheme());
    },
    get C1629() {
      return C[1629] = dart.fn(google_fonts.GoogleFonts.mrDafoeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1630() {
      return C[1630] = dart.fn(google_fonts.GoogleFonts.mrDeHavilandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1631() {
      return C[1631] = dart.fn(google_fonts.GoogleFonts.mrsSaintDelafieldTextTheme, T.TextThemeNToTextTheme());
    },
    get C1632() {
      return C[1632] = dart.fn(google_fonts.GoogleFonts.mrsSheppardsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1633() {
      return C[1633] = dart.fn(google_fonts.GoogleFonts.muktaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1634() {
      return C[1634] = dart.fn(google_fonts.GoogleFonts.muktaMaheeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1635() {
      return C[1635] = dart.fn(google_fonts.GoogleFonts.muktaMalarTextTheme, T.TextThemeNToTextTheme());
    },
    get C1636() {
      return C[1636] = dart.fn(google_fonts.GoogleFonts.muktaVaaniTextTheme, T.TextThemeNToTextTheme());
    },
    get C1637() {
      return C[1637] = dart.fn(google_fonts.GoogleFonts.mulishTextTheme, T.TextThemeNToTextTheme());
    },
    get C1638() {
      return C[1638] = dart.fn(google_fonts.GoogleFonts.museoModernoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1639() {
      return C[1639] = dart.fn(google_fonts.GoogleFonts.mysteryQuestTextTheme, T.TextThemeNToTextTheme());
    },
    get C1640() {
      return C[1640] = dart.fn(google_fonts.GoogleFonts.ntrTextTheme, T.TextThemeNToTextTheme());
    },
    get C1641() {
      return C[1641] = dart.fn(google_fonts.GoogleFonts.nanumBrushScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1642() {
      return C[1642] = dart.fn(google_fonts.GoogleFonts.nanumGothicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1643() {
      return C[1643] = dart.fn(google_fonts.GoogleFonts.nanumGothicCodingTextTheme, T.TextThemeNToTextTheme());
    },
    get C1644() {
      return C[1644] = dart.fn(google_fonts.GoogleFonts.nanumMyeongjoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1645() {
      return C[1645] = dart.fn(google_fonts.GoogleFonts.nanumPenScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1646() {
      return C[1646] = dart.fn(google_fonts.GoogleFonts.nerkoOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1647() {
      return C[1647] = dart.fn(google_fonts.GoogleFonts.neuchaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1648() {
      return C[1648] = dart.fn(google_fonts.GoogleFonts.neutonTextTheme, T.TextThemeNToTextTheme());
    },
    get C1649() {
      return C[1649] = dart.fn(google_fonts.GoogleFonts.newRockerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1650() {
      return C[1650] = dart.fn(google_fonts.GoogleFonts.newsCycleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1651() {
      return C[1651] = dart.fn(google_fonts.GoogleFonts.niconneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1652() {
      return C[1652] = dart.fn(google_fonts.GoogleFonts.niramitTextTheme, T.TextThemeNToTextTheme());
    },
    get C1653() {
      return C[1653] = dart.fn(google_fonts.GoogleFonts.nixieOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1654() {
      return C[1654] = dart.fn(google_fonts.GoogleFonts.nobileTextTheme, T.TextThemeNToTextTheme());
    },
    get C1655() {
      return C[1655] = dart.fn(google_fonts.GoogleFonts.noricanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1656() {
      return C[1656] = dart.fn(google_fonts.GoogleFonts.nosiferTextTheme, T.TextThemeNToTextTheme());
    },
    get C1657() {
      return C[1657] = dart.fn(google_fonts.GoogleFonts.notableTextTheme, T.TextThemeNToTextTheme());
    },
    get C1658() {
      return C[1658] = dart.fn(google_fonts.GoogleFonts.nothingYouCouldDoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1659() {
      return C[1659] = dart.fn(google_fonts.GoogleFonts.noticiaTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1660() {
      return C[1660] = dart.fn(google_fonts.GoogleFonts.notoColorEmojiCompatTextTheme, T.TextThemeNToTextTheme());
    },
    get C1661() {
      return C[1661] = dart.fn(google_fonts.GoogleFonts.notoSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1662() {
      return C[1662] = dart.fn(google_fonts.GoogleFonts.notoSerifTextTheme, T.TextThemeNToTextTheme());
    },
    get C1663() {
      return C[1663] = dart.fn(google_fonts.GoogleFonts.novaCutTextTheme, T.TextThemeNToTextTheme());
    },
    get C1664() {
      return C[1664] = dart.fn(google_fonts.GoogleFonts.novaFlatTextTheme, T.TextThemeNToTextTheme());
    },
    get C1665() {
      return C[1665] = dart.fn(google_fonts.GoogleFonts.novaMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1666() {
      return C[1666] = dart.fn(google_fonts.GoogleFonts.novaOvalTextTheme, T.TextThemeNToTextTheme());
    },
    get C1667() {
      return C[1667] = dart.fn(google_fonts.GoogleFonts.novaRoundTextTheme, T.TextThemeNToTextTheme());
    },
    get C1668() {
      return C[1668] = dart.fn(google_fonts.GoogleFonts.novaScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1669() {
      return C[1669] = dart.fn(google_fonts.GoogleFonts.novaSlimTextTheme, T.TextThemeNToTextTheme());
    },
    get C1670() {
      return C[1670] = dart.fn(google_fonts.GoogleFonts.novaSquareTextTheme, T.TextThemeNToTextTheme());
    },
    get C1671() {
      return C[1671] = dart.fn(google_fonts.GoogleFonts.numansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1672() {
      return C[1672] = dart.fn(google_fonts.GoogleFonts.nunitoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1673() {
      return C[1673] = dart.fn(google_fonts.GoogleFonts.nunitoSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1674() {
      return C[1674] = dart.fn(google_fonts.GoogleFonts.odibeeSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1675() {
      return C[1675] = dart.fn(google_fonts.GoogleFonts.odorMeanCheyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1676() {
      return C[1676] = dart.fn(google_fonts.GoogleFonts.offsideTextTheme, T.TextThemeNToTextTheme());
    },
    get C1677() {
      return C[1677] = dart.fn(google_fonts.GoogleFonts.oldStandardTtTextTheme, T.TextThemeNToTextTheme());
    },
    get C1678() {
      return C[1678] = dart.fn(google_fonts.GoogleFonts.oldenburgTextTheme, T.TextThemeNToTextTheme());
    },
    get C1679() {
      return C[1679] = dart.fn(google_fonts.GoogleFonts.oleoScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1680() {
      return C[1680] = dart.fn(google_fonts.GoogleFonts.oleoScriptSwashCapsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1681() {
      return C[1681] = dart.fn(google_fonts.GoogleFonts.openSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1682() {
      return C[1682] = dart.fn(google_fonts.GoogleFonts.openSansCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1683() {
      return C[1683] = dart.fn(google_fonts.GoogleFonts.oranienbaumTextTheme, T.TextThemeNToTextTheme());
    },
    get C1684() {
      return C[1684] = dart.fn(google_fonts.GoogleFonts.orbitronTextTheme, T.TextThemeNToTextTheme());
    },
    get C1685() {
      return C[1685] = dart.fn(google_fonts.GoogleFonts.oreganoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1686() {
      return C[1686] = dart.fn(google_fonts.GoogleFonts.orientaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1687() {
      return C[1687] = dart.fn(google_fonts.GoogleFonts.originalSurferTextTheme, T.TextThemeNToTextTheme());
    },
    get C1688() {
      return C[1688] = dart.fn(google_fonts.GoogleFonts.oswaldTextTheme, T.TextThemeNToTextTheme());
    },
    get C1689() {
      return C[1689] = dart.fn(google_fonts.GoogleFonts.overTheRainbowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1690() {
      return C[1690] = dart.fn(google_fonts.GoogleFonts.overlockTextTheme, T.TextThemeNToTextTheme());
    },
    get C1691() {
      return C[1691] = dart.fn(google_fonts.GoogleFonts.overlockScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1692() {
      return C[1692] = dart.fn(google_fonts.GoogleFonts.overpassTextTheme, T.TextThemeNToTextTheme());
    },
    get C1693() {
      return C[1693] = dart.fn(google_fonts.GoogleFonts.overpassMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1694() {
      return C[1694] = dart.fn(google_fonts.GoogleFonts.ovoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1695() {
      return C[1695] = dart.fn(google_fonts.GoogleFonts.oxaniumTextTheme, T.TextThemeNToTextTheme());
    },
    get C1696() {
      return C[1696] = dart.fn(google_fonts.GoogleFonts.oxygenTextTheme, T.TextThemeNToTextTheme());
    },
    get C1697() {
      return C[1697] = dart.fn(google_fonts.GoogleFonts.oxygenMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1698() {
      return C[1698] = dart.fn(google_fonts.GoogleFonts.ptMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1699() {
      return C[1699] = dart.fn(google_fonts.GoogleFonts.ptSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1700() {
      return C[1700] = dart.fn(google_fonts.GoogleFonts.ptSansCaptionTextTheme, T.TextThemeNToTextTheme());
    },
    get C1701() {
      return C[1701] = dart.fn(google_fonts.GoogleFonts.ptSansNarrowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1702() {
      return C[1702] = dart.fn(google_fonts.GoogleFonts.ptSerifTextTheme, T.TextThemeNToTextTheme());
    },
    get C1703() {
      return C[1703] = dart.fn(google_fonts.GoogleFonts.ptSerifCaptionTextTheme, T.TextThemeNToTextTheme());
    },
    get C1704() {
      return C[1704] = dart.fn(google_fonts.GoogleFonts.pacificoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1705() {
      return C[1705] = dart.fn(google_fonts.GoogleFonts.padaukTextTheme, T.TextThemeNToTextTheme());
    },
    get C1706() {
      return C[1706] = dart.fn(google_fonts.GoogleFonts.palanquinTextTheme, T.TextThemeNToTextTheme());
    },
    get C1707() {
      return C[1707] = dart.fn(google_fonts.GoogleFonts.palanquinDarkTextTheme, T.TextThemeNToTextTheme());
    },
    get C1708() {
      return C[1708] = dart.fn(google_fonts.GoogleFonts.pangolinTextTheme, T.TextThemeNToTextTheme());
    },
    get C1709() {
      return C[1709] = dart.fn(google_fonts.GoogleFonts.paprikaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1710() {
      return C[1710] = dart.fn(google_fonts.GoogleFonts.parisienneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1711() {
      return C[1711] = dart.fn(google_fonts.GoogleFonts.passeroOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1712() {
      return C[1712] = dart.fn(google_fonts.GoogleFonts.passionOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1713() {
      return C[1713] = dart.fn(google_fonts.GoogleFonts.pathwayGothicOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1714() {
      return C[1714] = dart.fn(google_fonts.GoogleFonts.patrickHandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1715() {
      return C[1715] = dart.fn(google_fonts.GoogleFonts.patrickHandScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1716() {
      return C[1716] = dart.fn(google_fonts.GoogleFonts.pattayaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1717() {
      return C[1717] = dart.fn(google_fonts.GoogleFonts.patuaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1718() {
      return C[1718] = dart.fn(google_fonts.GoogleFonts.pavanamTextTheme, T.TextThemeNToTextTheme());
    },
    get C1719() {
      return C[1719] = dart.fn(google_fonts.GoogleFonts.paytoneOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1720() {
      return C[1720] = dart.fn(google_fonts.GoogleFonts.peddanaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1721() {
      return C[1721] = dart.fn(google_fonts.GoogleFonts.peraltaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1722() {
      return C[1722] = dart.fn(google_fonts.GoogleFonts.permanentMarkerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1723() {
      return C[1723] = dart.fn(google_fonts.GoogleFonts.petitFormalScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1724() {
      return C[1724] = dart.fn(google_fonts.GoogleFonts.petronaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1725() {
      return C[1725] = dart.fn(google_fonts.GoogleFonts.philosopherTextTheme, T.TextThemeNToTextTheme());
    },
    get C1726() {
      return C[1726] = dart.fn(google_fonts.GoogleFonts.piazzollaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1727() {
      return C[1727] = dart.fn(google_fonts.GoogleFonts.piedraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1728() {
      return C[1728] = dart.fn(google_fonts.GoogleFonts.pinyonScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1729() {
      return C[1729] = dart.fn(google_fonts.GoogleFonts.pirataOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1730() {
      return C[1730] = dart.fn(google_fonts.GoogleFonts.plasterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1731() {
      return C[1731] = dart.fn(google_fonts.GoogleFonts.playTextTheme, T.TextThemeNToTextTheme());
    },
    get C1732() {
      return C[1732] = dart.fn(google_fonts.GoogleFonts.playballTextTheme, T.TextThemeNToTextTheme());
    },
    get C1733() {
      return C[1733] = dart.fn(google_fonts.GoogleFonts.playfairDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1734() {
      return C[1734] = dart.fn(google_fonts.GoogleFonts.playfairDisplayScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1735() {
      return C[1735] = dart.fn(google_fonts.GoogleFonts.podkovaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1736() {
      return C[1736] = dart.fn(google_fonts.GoogleFonts.poiretOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1737() {
      return C[1737] = dart.fn(google_fonts.GoogleFonts.pollerOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1738() {
      return C[1738] = dart.fn(google_fonts.GoogleFonts.polyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1739() {
      return C[1739] = dart.fn(google_fonts.GoogleFonts.pompiereTextTheme, T.TextThemeNToTextTheme());
    },
    get C1740() {
      return C[1740] = dart.fn(google_fonts.GoogleFonts.pontanoSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1741() {
      return C[1741] = dart.fn(google_fonts.GoogleFonts.poorStoryTextTheme, T.TextThemeNToTextTheme());
    },
    get C1742() {
      return C[1742] = dart.fn(google_fonts.GoogleFonts.poppinsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1743() {
      return C[1743] = dart.fn(google_fonts.GoogleFonts.portLligatSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1744() {
      return C[1744] = dart.fn(google_fonts.GoogleFonts.portLligatSlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C1745() {
      return C[1745] = dart.fn(google_fonts.GoogleFonts.pottaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1746() {
      return C[1746] = dart.fn(google_fonts.GoogleFonts.pragatiNarrowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1747() {
      return C[1747] = dart.fn(google_fonts.GoogleFonts.prataTextTheme, T.TextThemeNToTextTheme());
    },
    get C1748() {
      return C[1748] = dart.fn(google_fonts.GoogleFonts.pressStart2pTextTheme, T.TextThemeNToTextTheme());
    },
    get C1749() {
      return C[1749] = dart.fn(google_fonts.GoogleFonts.pridiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1750() {
      return C[1750] = dart.fn(google_fonts.GoogleFonts.princessSofiaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1751() {
      return C[1751] = dart.fn(google_fonts.GoogleFonts.procionoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1752() {
      return C[1752] = dart.fn(google_fonts.GoogleFonts.promptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1753() {
      return C[1753] = dart.fn(google_fonts.GoogleFonts.prostoOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1754() {
      return C[1754] = dart.fn(google_fonts.GoogleFonts.prozaLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1755() {
      return C[1755] = dart.fn(google_fonts.GoogleFonts.publicSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1756() {
      return C[1756] = dart.fn(google_fonts.GoogleFonts.puritanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1757() {
      return C[1757] = dart.fn(google_fonts.GoogleFonts.purplePurseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1758() {
      return C[1758] = dart.fn(google_fonts.GoogleFonts.quandoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1759() {
      return C[1759] = dart.fn(google_fonts.GoogleFonts.quanticoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1760() {
      return C[1760] = dart.fn(google_fonts.GoogleFonts.quattrocentoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1761() {
      return C[1761] = dart.fn(google_fonts.GoogleFonts.quattrocentoSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1762() {
      return C[1762] = dart.fn(google_fonts.GoogleFonts.questrialTextTheme, T.TextThemeNToTextTheme());
    },
    get C1763() {
      return C[1763] = dart.fn(google_fonts.GoogleFonts.quicksandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1764() {
      return C[1764] = dart.fn(google_fonts.GoogleFonts.quintessentialTextTheme, T.TextThemeNToTextTheme());
    },
    get C1765() {
      return C[1765] = dart.fn(google_fonts.GoogleFonts.qwigleyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1766() {
      return C[1766] = dart.fn(google_fonts.GoogleFonts.racingSansOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1767() {
      return C[1767] = dart.fn(google_fonts.GoogleFonts.radleyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1768() {
      return C[1768] = dart.fn(google_fonts.GoogleFonts.rajdhaniTextTheme, T.TextThemeNToTextTheme());
    },
    get C1769() {
      return C[1769] = dart.fn(google_fonts.GoogleFonts.rakkasTextTheme, T.TextThemeNToTextTheme());
    },
    get C1770() {
      return C[1770] = dart.fn(google_fonts.GoogleFonts.ralewayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1771() {
      return C[1771] = dart.fn(google_fonts.GoogleFonts.ralewayDotsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1772() {
      return C[1772] = dart.fn(google_fonts.GoogleFonts.ramabhadraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1773() {
      return C[1773] = dart.fn(google_fonts.GoogleFonts.ramarajaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1774() {
      return C[1774] = dart.fn(google_fonts.GoogleFonts.ramblaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1775() {
      return C[1775] = dart.fn(google_fonts.GoogleFonts.rammettoOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1776() {
      return C[1776] = dart.fn(google_fonts.GoogleFonts.ranchersTextTheme, T.TextThemeNToTextTheme());
    },
    get C1777() {
      return C[1777] = dart.fn(google_fonts.GoogleFonts.ranchoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1778() {
      return C[1778] = dart.fn(google_fonts.GoogleFonts.rangaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1779() {
      return C[1779] = dart.fn(google_fonts.GoogleFonts.rasaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1780() {
      return C[1780] = dart.fn(google_fonts.GoogleFonts.rationaleTextTheme, T.TextThemeNToTextTheme());
    },
    get C1781() {
      return C[1781] = dart.fn(google_fonts.GoogleFonts.raviPrakashTextTheme, T.TextThemeNToTextTheme());
    },
    get C1782() {
      return C[1782] = dart.fn(google_fonts.GoogleFonts.recursiveTextTheme, T.TextThemeNToTextTheme());
    },
    get C1783() {
      return C[1783] = dart.fn(google_fonts.GoogleFonts.redHatDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1784() {
      return C[1784] = dart.fn(google_fonts.GoogleFonts.redHatTextTextTheme, T.TextThemeNToTextTheme());
    },
    get C1785() {
      return C[1785] = dart.fn(google_fonts.GoogleFonts.redRoseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1786() {
      return C[1786] = dart.fn(google_fonts.GoogleFonts.redressedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1787() {
      return C[1787] = dart.fn(google_fonts.GoogleFonts.reemKufiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1788() {
      return C[1788] = dart.fn(google_fonts.GoogleFonts.reenieBeanieTextTheme, T.TextThemeNToTextTheme());
    },
    get C1789() {
      return C[1789] = dart.fn(google_fonts.GoogleFonts.revaliaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1790() {
      return C[1790] = dart.fn(google_fonts.GoogleFonts.rhodiumLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1791() {
      return C[1791] = dart.fn(google_fonts.GoogleFonts.ribeyeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1792() {
      return C[1792] = dart.fn(google_fonts.GoogleFonts.ribeyeMarrowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1793() {
      return C[1793] = dart.fn(google_fonts.GoogleFonts.righteousTextTheme, T.TextThemeNToTextTheme());
    },
    get C1794() {
      return C[1794] = dart.fn(google_fonts.GoogleFonts.risqueTextTheme, T.TextThemeNToTextTheme());
    },
    get C1795() {
      return C[1795] = dart.fn(google_fonts.GoogleFonts.robotoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1796() {
      return C[1796] = dart.fn(google_fonts.GoogleFonts.robotoCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1797() {
      return C[1797] = dart.fn(google_fonts.GoogleFonts.robotoMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1798() {
      return C[1798] = dart.fn(google_fonts.GoogleFonts.robotoSlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C1799() {
      return C[1799] = dart.fn(google_fonts.GoogleFonts.rochesterTextTheme, T.TextThemeNToTextTheme());
    },
    get C1800() {
      return C[1800] = dart.fn(google_fonts.GoogleFonts.rockSaltTextTheme, T.TextThemeNToTextTheme());
    },
    get C1801() {
      return C[1801] = dart.fn(google_fonts.GoogleFonts.rokkittTextTheme, T.TextThemeNToTextTheme());
    },
    get C1802() {
      return C[1802] = dart.fn(google_fonts.GoogleFonts.romanescoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1803() {
      return C[1803] = dart.fn(google_fonts.GoogleFonts.ropaSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1804() {
      return C[1804] = dart.fn(google_fonts.GoogleFonts.rosarioTextTheme, T.TextThemeNToTextTheme());
    },
    get C1805() {
      return C[1805] = dart.fn(google_fonts.GoogleFonts.rosarivoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1806() {
      return C[1806] = dart.fn(google_fonts.GoogleFonts.rougeScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1807() {
      return C[1807] = dart.fn(google_fonts.GoogleFonts.rowdiesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1808() {
      return C[1808] = dart.fn(google_fonts.GoogleFonts.rozhaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1809() {
      return C[1809] = dart.fn(google_fonts.GoogleFonts.rubikTextTheme, T.TextThemeNToTextTheme());
    },
    get C1810() {
      return C[1810] = dart.fn(google_fonts.GoogleFonts.rubikMonoOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1811() {
      return C[1811] = dart.fn(google_fonts.GoogleFonts.rudaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1812() {
      return C[1812] = dart.fn(google_fonts.GoogleFonts.rufinaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1813() {
      return C[1813] = dart.fn(google_fonts.GoogleFonts.rugeBoogieTextTheme, T.TextThemeNToTextTheme());
    },
    get C1814() {
      return C[1814] = dart.fn(google_fonts.GoogleFonts.rulukoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1815() {
      return C[1815] = dart.fn(google_fonts.GoogleFonts.rumRaisinTextTheme, T.TextThemeNToTextTheme());
    },
    get C1816() {
      return C[1816] = dart.fn(google_fonts.GoogleFonts.ruslanDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1817() {
      return C[1817] = dart.fn(google_fonts.GoogleFonts.russoOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1818() {
      return C[1818] = dart.fn(google_fonts.GoogleFonts.ruthieTextTheme, T.TextThemeNToTextTheme());
    },
    get C1819() {
      return C[1819] = dart.fn(google_fonts.GoogleFonts.ryeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1820() {
      return C[1820] = dart.fn(google_fonts.GoogleFonts.sacramentoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1821() {
      return C[1821] = dart.fn(google_fonts.GoogleFonts.sahityaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1822() {
      return C[1822] = dart.fn(google_fonts.GoogleFonts.sailTextTheme, T.TextThemeNToTextTheme());
    },
    get C1823() {
      return C[1823] = dart.fn(google_fonts.GoogleFonts.sairaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1824() {
      return C[1824] = dart.fn(google_fonts.GoogleFonts.sairaCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1825() {
      return C[1825] = dart.fn(google_fonts.GoogleFonts.sairaExtraCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1826() {
      return C[1826] = dart.fn(google_fonts.GoogleFonts.sairaSemiCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1827() {
      return C[1827] = dart.fn(google_fonts.GoogleFonts.sairaStencilOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1828() {
      return C[1828] = dart.fn(google_fonts.GoogleFonts.salsaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1829() {
      return C[1829] = dart.fn(google_fonts.GoogleFonts.sanchezTextTheme, T.TextThemeNToTextTheme());
    },
    get C1830() {
      return C[1830] = dart.fn(google_fonts.GoogleFonts.sancreekTextTheme, T.TextThemeNToTextTheme());
    },
    get C1831() {
      return C[1831] = dart.fn(google_fonts.GoogleFonts.sansitaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1832() {
      return C[1832] = dart.fn(google_fonts.GoogleFonts.sansitaSwashedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1833() {
      return C[1833] = dart.fn(google_fonts.GoogleFonts.sarabunTextTheme, T.TextThemeNToTextTheme());
    },
    get C1834() {
      return C[1834] = dart.fn(google_fonts.GoogleFonts.saralaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1835() {
      return C[1835] = dart.fn(google_fonts.GoogleFonts.sarinaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1836() {
      return C[1836] = dart.fn(google_fonts.GoogleFonts.sarpanchTextTheme, T.TextThemeNToTextTheme());
    },
    get C1837() {
      return C[1837] = dart.fn(google_fonts.GoogleFonts.satisfyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1838() {
      return C[1838] = dart.fn(google_fonts.GoogleFonts.sawarabiGothicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1839() {
      return C[1839] = dart.fn(google_fonts.GoogleFonts.sawarabiMinchoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1840() {
      return C[1840] = dart.fn(google_fonts.GoogleFonts.scadaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1841() {
      return C[1841] = dart.fn(google_fonts.GoogleFonts.scheherazadeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1842() {
      return C[1842] = dart.fn(google_fonts.GoogleFonts.schoolbellTextTheme, T.TextThemeNToTextTheme());
    },
    get C1843() {
      return C[1843] = dart.fn(google_fonts.GoogleFonts.scopeOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1844() {
      return C[1844] = dart.fn(google_fonts.GoogleFonts.seaweedScriptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1845() {
      return C[1845] = dart.fn(google_fonts.GoogleFonts.secularOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1846() {
      return C[1846] = dart.fn(google_fonts.GoogleFonts.sedgwickAveTextTheme, T.TextThemeNToTextTheme());
    },
    get C1847() {
      return C[1847] = dart.fn(google_fonts.GoogleFonts.sedgwickAveDisplayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1848() {
      return C[1848] = dart.fn(google_fonts.GoogleFonts.senTextTheme, T.TextThemeNToTextTheme());
    },
    get C1849() {
      return C[1849] = dart.fn(google_fonts.GoogleFonts.sevillanaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1850() {
      return C[1850] = dart.fn(google_fonts.GoogleFonts.seymourOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1851() {
      return C[1851] = dart.fn(google_fonts.GoogleFonts.shadowsIntoLightTextTheme, T.TextThemeNToTextTheme());
    },
    get C1852() {
      return C[1852] = dart.fn(google_fonts.GoogleFonts.shadowsIntoLightTwoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1853() {
      return C[1853] = dart.fn(google_fonts.GoogleFonts.shantiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1854() {
      return C[1854] = dart.fn(google_fonts.GoogleFonts.shareTextTheme, T.TextThemeNToTextTheme());
    },
    get C1855() {
      return C[1855] = dart.fn(google_fonts.GoogleFonts.shareTechTextTheme, T.TextThemeNToTextTheme());
    },
    get C1856() {
      return C[1856] = dart.fn(google_fonts.GoogleFonts.shareTechMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1857() {
      return C[1857] = dart.fn(google_fonts.GoogleFonts.shojumaruTextTheme, T.TextThemeNToTextTheme());
    },
    get C1858() {
      return C[1858] = dart.fn(google_fonts.GoogleFonts.shortStackTextTheme, T.TextThemeNToTextTheme());
    },
    get C1859() {
      return C[1859] = dart.fn(google_fonts.GoogleFonts.shrikhandTextTheme, T.TextThemeNToTextTheme());
    },
    get C1860() {
      return C[1860] = dart.fn(google_fonts.GoogleFonts.sigmarOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1861() {
      return C[1861] = dart.fn(google_fonts.GoogleFonts.signikaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1862() {
      return C[1862] = dart.fn(google_fonts.GoogleFonts.signikaNegativeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1863() {
      return C[1863] = dart.fn(google_fonts.GoogleFonts.simonettaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1864() {
      return C[1864] = dart.fn(google_fonts.GoogleFonts.singleDayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1865() {
      return C[1865] = dart.fn(google_fonts.GoogleFonts.sintonyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1866() {
      return C[1866] = dart.fn(google_fonts.GoogleFonts.sirinStencilTextTheme, T.TextThemeNToTextTheme());
    },
    get C1867() {
      return C[1867] = dart.fn(google_fonts.GoogleFonts.sixCapsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1868() {
      return C[1868] = dart.fn(google_fonts.GoogleFonts.skranjiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1869() {
      return C[1869] = dart.fn(google_fonts.GoogleFonts.slabo13pxTextTheme, T.TextThemeNToTextTheme());
    },
    get C1870() {
      return C[1870] = dart.fn(google_fonts.GoogleFonts.slabo27pxTextTheme, T.TextThemeNToTextTheme());
    },
    get C1871() {
      return C[1871] = dart.fn(google_fonts.GoogleFonts.slackeyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1872() {
      return C[1872] = dart.fn(google_fonts.GoogleFonts.smokumTextTheme, T.TextThemeNToTextTheme());
    },
    get C1873() {
      return C[1873] = dart.fn(google_fonts.GoogleFonts.smytheTextTheme, T.TextThemeNToTextTheme());
    },
    get C1874() {
      return C[1874] = dart.fn(google_fonts.GoogleFonts.snigletTextTheme, T.TextThemeNToTextTheme());
    },
    get C1875() {
      return C[1875] = dart.fn(google_fonts.GoogleFonts.snippetTextTheme, T.TextThemeNToTextTheme());
    },
    get C1876() {
      return C[1876] = dart.fn(google_fonts.GoogleFonts.snowburstOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1877() {
      return C[1877] = dart.fn(google_fonts.GoogleFonts.sofadiOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1878() {
      return C[1878] = dart.fn(google_fonts.GoogleFonts.sofiaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1879() {
      return C[1879] = dart.fn(google_fonts.GoogleFonts.solwayTextTheme, T.TextThemeNToTextTheme());
    },
    get C1880() {
      return C[1880] = dart.fn(google_fonts.GoogleFonts.songMyungTextTheme, T.TextThemeNToTextTheme());
    },
    get C1881() {
      return C[1881] = dart.fn(google_fonts.GoogleFonts.sonsieOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1882() {
      return C[1882] = dart.fn(google_fonts.GoogleFonts.soraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1883() {
      return C[1883] = dart.fn(google_fonts.GoogleFonts.sortsMillGoudyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1884() {
      return C[1884] = dart.fn(google_fonts.GoogleFonts.sourceCodeProTextTheme, T.TextThemeNToTextTheme());
    },
    get C1885() {
      return C[1885] = dart.fn(google_fonts.GoogleFonts.sourceSansProTextTheme, T.TextThemeNToTextTheme());
    },
    get C1886() {
      return C[1886] = dart.fn(google_fonts.GoogleFonts.sourceSerifProTextTheme, T.TextThemeNToTextTheme());
    },
    get C1887() {
      return C[1887] = dart.fn(google_fonts.GoogleFonts.spaceGroteskTextTheme, T.TextThemeNToTextTheme());
    },
    get C1888() {
      return C[1888] = dart.fn(google_fonts.GoogleFonts.spaceMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1889() {
      return C[1889] = dart.fn(google_fonts.GoogleFonts.spartanTextTheme, T.TextThemeNToTextTheme());
    },
    get C1890() {
      return C[1890] = dart.fn(google_fonts.GoogleFonts.specialEliteTextTheme, T.TextThemeNToTextTheme());
    },
    get C1891() {
      return C[1891] = dart.fn(google_fonts.GoogleFonts.spectralTextTheme, T.TextThemeNToTextTheme());
    },
    get C1892() {
      return C[1892] = dart.fn(google_fonts.GoogleFonts.spectralScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1893() {
      return C[1893] = dart.fn(google_fonts.GoogleFonts.spicyRiceTextTheme, T.TextThemeNToTextTheme());
    },
    get C1894() {
      return C[1894] = dart.fn(google_fonts.GoogleFonts.spinnakerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1895() {
      return C[1895] = dart.fn(google_fonts.GoogleFonts.spiraxTextTheme, T.TextThemeNToTextTheme());
    },
    get C1896() {
      return C[1896] = dart.fn(google_fonts.GoogleFonts.squadaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1897() {
      return C[1897] = dart.fn(google_fonts.GoogleFonts.sreeKrushnadevarayaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1898() {
      return C[1898] = dart.fn(google_fonts.GoogleFonts.srirachaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1899() {
      return C[1899] = dart.fn(google_fonts.GoogleFonts.srisakdiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1900() {
      return C[1900] = dart.fn(google_fonts.GoogleFonts.staatlichesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1901() {
      return C[1901] = dart.fn(google_fonts.GoogleFonts.stalemateTextTheme, T.TextThemeNToTextTheme());
    },
    get C1902() {
      return C[1902] = dart.fn(google_fonts.GoogleFonts.stalinistOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1903() {
      return C[1903] = dart.fn(google_fonts.GoogleFonts.stardosStencilTextTheme, T.TextThemeNToTextTheme());
    },
    get C1904() {
      return C[1904] = dart.fn(google_fonts.GoogleFonts.stintUltraCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1905() {
      return C[1905] = dart.fn(google_fonts.GoogleFonts.stintUltraExpandedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1906() {
      return C[1906] = dart.fn(google_fonts.GoogleFonts.stokeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1907() {
      return C[1907] = dart.fn(google_fonts.GoogleFonts.straitTextTheme, T.TextThemeNToTextTheme());
    },
    get C1908() {
      return C[1908] = dart.fn(google_fonts.GoogleFonts.stylishTextTheme, T.TextThemeNToTextTheme());
    },
    get C1909() {
      return C[1909] = dart.fn(google_fonts.GoogleFonts.sueEllenFranciscoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1910() {
      return C[1910] = dart.fn(google_fonts.GoogleFonts.suezOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1911() {
      return C[1911] = dart.fn(google_fonts.GoogleFonts.sulphurPointTextTheme, T.TextThemeNToTextTheme());
    },
    get C1912() {
      return C[1912] = dart.fn(google_fonts.GoogleFonts.sumanaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1913() {
      return C[1913] = dart.fn(google_fonts.GoogleFonts.sunflowerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1914() {
      return C[1914] = dart.fn(google_fonts.GoogleFonts.sunshineyTextTheme, T.TextThemeNToTextTheme());
    },
    get C1915() {
      return C[1915] = dart.fn(google_fonts.GoogleFonts.supermercadoOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1916() {
      return C[1916] = dart.fn(google_fonts.GoogleFonts.suraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1917() {
      return C[1917] = dart.fn(google_fonts.GoogleFonts.surannaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1918() {
      return C[1918] = dart.fn(google_fonts.GoogleFonts.suravaramTextTheme, T.TextThemeNToTextTheme());
    },
    get C1919() {
      return C[1919] = dart.fn(google_fonts.GoogleFonts.swankyAndMooMooTextTheme, T.TextThemeNToTextTheme());
    },
    get C1920() {
      return C[1920] = dart.fn(google_fonts.GoogleFonts.syncopateTextTheme, T.TextThemeNToTextTheme());
    },
    get C1921() {
      return C[1921] = dart.fn(google_fonts.GoogleFonts.syneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1922() {
      return C[1922] = dart.fn(google_fonts.GoogleFonts.syneMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1923() {
      return C[1923] = dart.fn(google_fonts.GoogleFonts.syneTactileTextTheme, T.TextThemeNToTextTheme());
    },
    get C1924() {
      return C[1924] = dart.fn(google_fonts.GoogleFonts.tajawalTextTheme, T.TextThemeNToTextTheme());
    },
    get C1925() {
      return C[1925] = dart.fn(google_fonts.GoogleFonts.tangerineTextTheme, T.TextThemeNToTextTheme());
    },
    get C1926() {
      return C[1926] = dart.fn(google_fonts.GoogleFonts.tauriTextTheme, T.TextThemeNToTextTheme());
    },
    get C1927() {
      return C[1927] = dart.fn(google_fonts.GoogleFonts.tavirajTextTheme, T.TextThemeNToTextTheme());
    },
    get C1928() {
      return C[1928] = dart.fn(google_fonts.GoogleFonts.tekoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1929() {
      return C[1929] = dart.fn(google_fonts.GoogleFonts.telexTextTheme, T.TextThemeNToTextTheme());
    },
    get C1930() {
      return C[1930] = dart.fn(google_fonts.GoogleFonts.tenaliRamakrishnaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1931() {
      return C[1931] = dart.fn(google_fonts.GoogleFonts.tenorSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1932() {
      return C[1932] = dart.fn(google_fonts.GoogleFonts.textMeOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1933() {
      return C[1933] = dart.fn(google_fonts.GoogleFonts.thasadithTextTheme, T.TextThemeNToTextTheme());
    },
    get C1934() {
      return C[1934] = dart.fn(google_fonts.GoogleFonts.theGirlNextDoorTextTheme, T.TextThemeNToTextTheme());
    },
    get C1935() {
      return C[1935] = dart.fn(google_fonts.GoogleFonts.tienneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1936() {
      return C[1936] = dart.fn(google_fonts.GoogleFonts.tillanaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1937() {
      return C[1937] = dart.fn(google_fonts.GoogleFonts.timmanaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1938() {
      return C[1938] = dart.fn(google_fonts.GoogleFonts.tinosTextTheme, T.TextThemeNToTextTheme());
    },
    get C1939() {
      return C[1939] = dart.fn(google_fonts.GoogleFonts.titanOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1940() {
      return C[1940] = dart.fn(google_fonts.GoogleFonts.titilliumWebTextTheme, T.TextThemeNToTextTheme());
    },
    get C1941() {
      return C[1941] = dart.fn(google_fonts.GoogleFonts.tomorrowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1942() {
      return C[1942] = dart.fn(google_fonts.GoogleFonts.tradeWindsTextTheme, T.TextThemeNToTextTheme());
    },
    get C1943() {
      return C[1943] = dart.fn(google_fonts.GoogleFonts.trirongTextTheme, T.TextThemeNToTextTheme());
    },
    get C1944() {
      return C[1944] = dart.fn(google_fonts.GoogleFonts.trispaceTextTheme, T.TextThemeNToTextTheme());
    },
    get C1945() {
      return C[1945] = dart.fn(google_fonts.GoogleFonts.trocchiTextTheme, T.TextThemeNToTextTheme());
    },
    get C1946() {
      return C[1946] = dart.fn(google_fonts.GoogleFonts.trochutTextTheme, T.TextThemeNToTextTheme());
    },
    get C1947() {
      return C[1947] = dart.fn(google_fonts.GoogleFonts.trykkerTextTheme, T.TextThemeNToTextTheme());
    },
    get C1948() {
      return C[1948] = dart.fn(google_fonts.GoogleFonts.tulpenOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1949() {
      return C[1949] = dart.fn(google_fonts.GoogleFonts.turretRoadTextTheme, T.TextThemeNToTextTheme());
    },
    get C1950() {
      return C[1950] = dart.fn(google_fonts.GoogleFonts.ubuntuTextTheme, T.TextThemeNToTextTheme());
    },
    get C1951() {
      return C[1951] = dart.fn(google_fonts.GoogleFonts.ubuntuCondensedTextTheme, T.TextThemeNToTextTheme());
    },
    get C1952() {
      return C[1952] = dart.fn(google_fonts.GoogleFonts.ubuntuMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1953() {
      return C[1953] = dart.fn(google_fonts.GoogleFonts.ultraTextTheme, T.TextThemeNToTextTheme());
    },
    get C1954() {
      return C[1954] = dart.fn(google_fonts.GoogleFonts.uncialAntiquaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1955() {
      return C[1955] = dart.fn(google_fonts.GoogleFonts.underdogTextTheme, T.TextThemeNToTextTheme());
    },
    get C1956() {
      return C[1956] = dart.fn(google_fonts.GoogleFonts.unicaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1957() {
      return C[1957] = dart.fn(google_fonts.GoogleFonts.unifrakturCookTextTheme, T.TextThemeNToTextTheme());
    },
    get C1958() {
      return C[1958] = dart.fn(google_fonts.GoogleFonts.unifrakturMaguntiaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1959() {
      return C[1959] = dart.fn(google_fonts.GoogleFonts.unkemptTextTheme, T.TextThemeNToTextTheme());
    },
    get C1960() {
      return C[1960] = dart.fn(google_fonts.GoogleFonts.unlockTextTheme, T.TextThemeNToTextTheme());
    },
    get C1961() {
      return C[1961] = dart.fn(google_fonts.GoogleFonts.unnaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1962() {
      return C[1962] = dart.fn(google_fonts.GoogleFonts.vt323TextTheme, T.TextThemeNToTextTheme());
    },
    get C1963() {
      return C[1963] = dart.fn(google_fonts.GoogleFonts.vampiroOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1964() {
      return C[1964] = dart.fn(google_fonts.GoogleFonts.varelaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1965() {
      return C[1965] = dart.fn(google_fonts.GoogleFonts.varelaRoundTextTheme, T.TextThemeNToTextTheme());
    },
    get C1966() {
      return C[1966] = dart.fn(google_fonts.GoogleFonts.vartaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1967() {
      return C[1967] = dart.fn(google_fonts.GoogleFonts.vastShadowTextTheme, T.TextThemeNToTextTheme());
    },
    get C1968() {
      return C[1968] = dart.fn(google_fonts.GoogleFonts.vesperLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1969() {
      return C[1969] = dart.fn(google_fonts.GoogleFonts.viaodaLibreTextTheme, T.TextThemeNToTextTheme());
    },
    get C1970() {
      return C[1970] = dart.fn(google_fonts.GoogleFonts.vibesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1971() {
      return C[1971] = dart.fn(google_fonts.GoogleFonts.viburTextTheme, T.TextThemeNToTextTheme());
    },
    get C1972() {
      return C[1972] = dart.fn(google_fonts.GoogleFonts.vidalokaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1973() {
      return C[1973] = dart.fn(google_fonts.GoogleFonts.vigaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1974() {
      return C[1974] = dart.fn(google_fonts.GoogleFonts.vocesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1975() {
      return C[1975] = dart.fn(google_fonts.GoogleFonts.volkhovTextTheme, T.TextThemeNToTextTheme());
    },
    get C1976() {
      return C[1976] = dart.fn(google_fonts.GoogleFonts.vollkornTextTheme, T.TextThemeNToTextTheme());
    },
    get C1977() {
      return C[1977] = dart.fn(google_fonts.GoogleFonts.vollkornScTextTheme, T.TextThemeNToTextTheme());
    },
    get C1978() {
      return C[1978] = dart.fn(google_fonts.GoogleFonts.voltaireTextTheme, T.TextThemeNToTextTheme());
    },
    get C1979() {
      return C[1979] = dart.fn(google_fonts.GoogleFonts.waitingForTheSunriseTextTheme, T.TextThemeNToTextTheme());
    },
    get C1980() {
      return C[1980] = dart.fn(google_fonts.GoogleFonts.wallpoetTextTheme, T.TextThemeNToTextTheme());
    },
    get C1981() {
      return C[1981] = dart.fn(google_fonts.GoogleFonts.walterTurncoatTextTheme, T.TextThemeNToTextTheme());
    },
    get C1982() {
      return C[1982] = dart.fn(google_fonts.GoogleFonts.warnesTextTheme, T.TextThemeNToTextTheme());
    },
    get C1983() {
      return C[1983] = dart.fn(google_fonts.GoogleFonts.wellfleetTextTheme, T.TextThemeNToTextTheme());
    },
    get C1984() {
      return C[1984] = dart.fn(google_fonts.GoogleFonts.wendyOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1985() {
      return C[1985] = dart.fn(google_fonts.GoogleFonts.wireOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1986() {
      return C[1986] = dart.fn(google_fonts.GoogleFonts.workSansTextTheme, T.TextThemeNToTextTheme());
    },
    get C1987() {
      return C[1987] = dart.fn(google_fonts.GoogleFonts.xanhMonoTextTheme, T.TextThemeNToTextTheme());
    },
    get C1988() {
      return C[1988] = dart.fn(google_fonts.GoogleFonts.yanoneKaffeesatzTextTheme, T.TextThemeNToTextTheme());
    },
    get C1989() {
      return C[1989] = dart.fn(google_fonts.GoogleFonts.yantramanavTextTheme, T.TextThemeNToTextTheme());
    },
    get C1990() {
      return C[1990] = dart.fn(google_fonts.GoogleFonts.yatraOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1991() {
      return C[1991] = dart.fn(google_fonts.GoogleFonts.yellowtailTextTheme, T.TextThemeNToTextTheme());
    },
    get C1992() {
      return C[1992] = dart.fn(google_fonts.GoogleFonts.yeonSungTextTheme, T.TextThemeNToTextTheme());
    },
    get C1993() {
      return C[1993] = dart.fn(google_fonts.GoogleFonts.yesevaOneTextTheme, T.TextThemeNToTextTheme());
    },
    get C1994() {
      return C[1994] = dart.fn(google_fonts.GoogleFonts.yesteryearTextTheme, T.TextThemeNToTextTheme());
    },
    get C1995() {
      return C[1995] = dart.fn(google_fonts.GoogleFonts.yrsaTextTheme, T.TextThemeNToTextTheme());
    },
    get C1996() {
      return C[1996] = dart.fn(google_fonts.GoogleFonts.yuseiMagicTextTheme, T.TextThemeNToTextTheme());
    },
    get C1997() {
      return C[1997] = dart.fn(google_fonts.GoogleFonts.zcoolKuaiLeTextTheme, T.TextThemeNToTextTheme());
    },
    get C1998() {
      return C[1998] = dart.fn(google_fonts.GoogleFonts.zcoolQingKeHuangYouTextTheme, T.TextThemeNToTextTheme());
    },
    get C1999() {
      return C[1999] = dart.fn(google_fonts.GoogleFonts.zcoolXiaoWeiTextTheme, T.TextThemeNToTextTheme());
    },
    get C2000() {
      return C[2000] = dart.fn(google_fonts.GoogleFonts.zeyadaTextTheme, T.TextThemeNToTextTheme());
    },
    get C2001() {
      return C[2001] = dart.fn(google_fonts.GoogleFonts.zhiMangXingTextTheme, T.TextThemeNToTextTheme());
    },
    get C2002() {
      return C[2002] = dart.fn(google_fonts.GoogleFonts.zillaSlabTextTheme, T.TextThemeNToTextTheme());
    },
    get C2003() {
      return C[2003] = dart.fn(google_fonts.GoogleFonts.zillaSlabHighlightTextTheme, T.TextThemeNToTextTheme());
    },
    get C1002() {
      return C[1002] = dart.constMap(T.StringL(), T.TextThemeNToLTextThemeL(), ["ABeeZee", C[1003] || CT.C1003, "Abel", C[1004] || CT.C1004, "Abhaya Libre", C[1005] || CT.C1005, "Abril Fatface", C[1006] || CT.C1006, "Aclonica", C[1007] || CT.C1007, "Acme", C[1008] || CT.C1008, "Actor", C[1009] || CT.C1009, "Adamina", C[1010] || CT.C1010, "Advent Pro", C[1011] || CT.C1011, "Aguafina Script", C[1012] || CT.C1012, "Akronim", C[1013] || CT.C1013, "Aladin", C[1014] || CT.C1014, "Alata", C[1015] || CT.C1015, "Alatsi", C[1016] || CT.C1016, "Aldrich", C[1017] || CT.C1017, "Alef", C[1018] || CT.C1018, "Alegreya", C[1019] || CT.C1019, "Alegreya SC", C[1020] || CT.C1020, "Alegreya Sans", C[1021] || CT.C1021, "Alegreya Sans SC", C[1022] || CT.C1022, "Aleo", C[1023] || CT.C1023, "Alex Brush", C[1024] || CT.C1024, "Alfa Slab One", C[1025] || CT.C1025, "Alice", C[1026] || CT.C1026, "Alike", C[1027] || CT.C1027, "Alike Angular", C[1028] || CT.C1028, "Allan", C[1029] || CT.C1029, "Allerta", C[1030] || CT.C1030, "Allerta Stencil", C[1031] || CT.C1031, "Allura", C[1032] || CT.C1032, "Almarai", C[1033] || CT.C1033, "Almendra", C[1034] || CT.C1034, "Almendra Display", C[1035] || CT.C1035, "Almendra SC", C[1036] || CT.C1036, "Amarante", C[1037] || CT.C1037, "Amaranth", C[1038] || CT.C1038, "Amatic SC", C[1039] || CT.C1039, "Amatica SC", C[1040] || CT.C1040, "Amethysta", C[1041] || CT.C1041, "Amiko", C[1042] || CT.C1042, "Amiri", C[1043] || CT.C1043, "Amita", C[1044] || CT.C1044, "Anaheim", C[1045] || CT.C1045, "Andada", C[1046] || CT.C1046, "Andika", C[1047] || CT.C1047, "Andika New Basic", C[1048] || CT.C1048, "Annie Use Your Telescope", C[1049] || CT.C1049, "Anonymous Pro", C[1050] || CT.C1050, "Antic", C[1051] || CT.C1051, "Antic Didone", C[1052] || CT.C1052, "Antic Slab", C[1053] || CT.C1053, "Anton", C[1054] || CT.C1054, "Arapey", C[1055] || CT.C1055, "Arbutus", C[1056] || CT.C1056, "Arbutus Slab", C[1057] || CT.C1057, "Architects Daughter", C[1058] || CT.C1058, "Archivo", C[1059] || CT.C1059, "Archivo Black", C[1060] || CT.C1060, "Archivo Narrow", C[1061] || CT.C1061, "Aref Ruqaa", C[1062] || CT.C1062, "Arima Madurai", C[1063] || CT.C1063, "Arimo", C[1064] || CT.C1064, "Arizonia", C[1065] || CT.C1065, "Armata", C[1066] || CT.C1066, "Arsenal", C[1067] || CT.C1067, "Artifika", C[1068] || CT.C1068, "Arvo", C[1069] || CT.C1069, "Arya", C[1070] || CT.C1070, "Asap", C[1071] || CT.C1071, "Asar", C[1072] || CT.C1072, "Asset", C[1073] || CT.C1073, "Assistant", C[1074] || CT.C1074, "Astloch", C[1075] || CT.C1075, "Asul", C[1076] || CT.C1076, "Athiti", C[1077] || CT.C1077, "Atma", C[1078] || CT.C1078, "Atomic Age", C[1079] || CT.C1079, "Aubrey", C[1080] || CT.C1080, "Audiowide", C[1081] || CT.C1081, "Autour One", C[1082] || CT.C1082, "Average", C[1083] || CT.C1083, "Average Sans", C[1084] || CT.C1084, "Averia Gruesa Libre", C[1085] || CT.C1085, "Averia Libre", C[1086] || CT.C1086, "Averia Sans Libre", C[1087] || CT.C1087, "Averia Serif Libre", C[1088] || CT.C1088, "B612", C[1089] || CT.C1089, "B612 Mono", C[1090] || CT.C1090, "Bad Script", C[1091] || CT.C1091, "Bahiana", C[1092] || CT.C1092, "Bahianita", C[1093] || CT.C1093, "Bai Jamjuree", C[1094] || CT.C1094, "Baloo", C[1095] || CT.C1095, "Baloo Bhai", C[1096] || CT.C1096, "Baloo Bhaijaan", C[1097] || CT.C1097, "Baloo Bhaina", C[1098] || CT.C1098, "Baloo Chettan", C[1099] || CT.C1099, "Baloo Da", C[1100] || CT.C1100, "Baloo Paaji", C[1101] || CT.C1101, "Baloo Tamma", C[1102] || CT.C1102, "Baloo Tammudu", C[1103] || CT.C1103, "Baloo Thambi", C[1104] || CT.C1104, "Balsamiq Sans", C[1105] || CT.C1105, "Balthazar", C[1106] || CT.C1106, "Bangers", C[1107] || CT.C1107, "Barlow", C[1108] || CT.C1108, "Barlow Condensed", C[1109] || CT.C1109, "Barlow Semi Condensed", C[1110] || CT.C1110, "Barriecito", C[1111] || CT.C1111, "Barrio", C[1112] || CT.C1112, "Basic", C[1113] || CT.C1113, "Baskervville", C[1114] || CT.C1114, "Baumans", C[1115] || CT.C1115, "Be Vietnam", C[1116] || CT.C1116, "Bebas Neue", C[1117] || CT.C1117, "Belgrano", C[1118] || CT.C1118, "Bellefair", C[1119] || CT.C1119, "Belleza", C[1120] || CT.C1120, "Bellota", C[1121] || CT.C1121, "Bellota Text", C[1122] || CT.C1122, "BenchNine", C[1123] || CT.C1123, "Bentham", C[1124] || CT.C1124, "Berkshire Swash", C[1125] || CT.C1125, "Beth Ellen", C[1126] || CT.C1126, "Bevan", C[1127] || CT.C1127, "Big Shoulders Display", C[1128] || CT.C1128, "Big Shoulders Inline Display", C[1129] || CT.C1129, "Big Shoulders Inline Text", C[1130] || CT.C1130, "Big Shoulders Stencil Display", C[1131] || CT.C1131, "Big Shoulders Stencil Text", C[1132] || CT.C1132, "Big Shoulders Text", C[1133] || CT.C1133, "Bigelow Rules", C[1134] || CT.C1134, "Bigshot One", C[1135] || CT.C1135, "Bilbo", C[1136] || CT.C1136, "Bilbo Swash Caps", C[1137] || CT.C1137, "BioRhyme", C[1138] || CT.C1138, "BioRhyme Expanded", C[1139] || CT.C1139, "Biryani", C[1140] || CT.C1140, "Bitter", C[1141] || CT.C1141, "Black And White Picture", C[1142] || CT.C1142, "Black Han Sans", C[1143] || CT.C1143, "Black Ops One", C[1144] || CT.C1144, "Blinker", C[1145] || CT.C1145, "Bonbon", C[1146] || CT.C1146, "Boogaloo", C[1147] || CT.C1147, "Bowlby One", C[1148] || CT.C1148, "Bowlby One SC", C[1149] || CT.C1149, "Brawler", C[1150] || CT.C1150, "Bree Serif", C[1151] || CT.C1151, "Bubblegum Sans", C[1152] || CT.C1152, "Bubbler One", C[1153] || CT.C1153, "Buda", C[1154] || CT.C1154, "Buenard", C[1155] || CT.C1155, "Bungee", C[1156] || CT.C1156, "Bungee Hairline", C[1157] || CT.C1157, "Bungee Inline", C[1158] || CT.C1158, "Bungee Outline", C[1159] || CT.C1159, "Bungee Shade", C[1160] || CT.C1160, "Butcherman", C[1161] || CT.C1161, "Butterfly Kids", C[1162] || CT.C1162, "Cabin", C[1163] || CT.C1163, "Cabin Condensed", C[1164] || CT.C1164, "Cabin Sketch", C[1165] || CT.C1165, "Caesar Dressing", C[1166] || CT.C1166, "Cagliostro", C[1167] || CT.C1167, "Cairo", C[1168] || CT.C1168, "Caladea", C[1169] || CT.C1169, "Calistoga", C[1170] || CT.C1170, "Calligraffitti", C[1171] || CT.C1171, "Cambay", C[1172] || CT.C1172, "Cambo", C[1173] || CT.C1173, "Candal", C[1174] || CT.C1174, "Cantarell", C[1175] || CT.C1175, "Cantata One", C[1176] || CT.C1176, "Cantora One", C[1177] || CT.C1177, "Capriola", C[1178] || CT.C1178, "Cardo", C[1179] || CT.C1179, "Carme", C[1180] || CT.C1180, "Carrois Gothic", C[1181] || CT.C1181, "Carrois Gothic SC", C[1182] || CT.C1182, "Carter One", C[1183] || CT.C1183, "Castoro", C[1184] || CT.C1184, "Catamaran", C[1185] || CT.C1185, "Caudex", C[1186] || CT.C1186, "Caveat", C[1187] || CT.C1187, "Caveat Brush", C[1188] || CT.C1188, "Cedarville Cursive", C[1189] || CT.C1189, "Ceviche One", C[1190] || CT.C1190, "Chakra Petch", C[1191] || CT.C1191, "Changa", C[1192] || CT.C1192, "Changa One", C[1193] || CT.C1193, "Chango", C[1194] || CT.C1194, "Charm", C[1195] || CT.C1195, "Charmonman", C[1196] || CT.C1196, "Chathura", C[1197] || CT.C1197, "Chau Philomene One", C[1198] || CT.C1198, "Chela One", C[1199] || CT.C1199, "Chelsea Market", C[1200] || CT.C1200, "Cherry Cream Soda", C[1201] || CT.C1201, "Cherry Swash", C[1202] || CT.C1202, "Chewy", C[1203] || CT.C1203, "Chicle", C[1204] || CT.C1204, "Chilanka", C[1205] || CT.C1205, "Chivo", C[1206] || CT.C1206, "Chonburi", C[1207] || CT.C1207, "Cinzel", C[1208] || CT.C1208, "Cinzel Decorative", C[1209] || CT.C1209, "Clicker Script", C[1210] || CT.C1210, "Coda", C[1211] || CT.C1211, "Coda Caption", C[1212] || CT.C1212, "Codystar", C[1213] || CT.C1213, "Coiny", C[1214] || CT.C1214, "Combo", C[1215] || CT.C1215, "Comfortaa", C[1216] || CT.C1216, "Comic Neue", C[1217] || CT.C1217, "Coming Soon", C[1218] || CT.C1218, "Commissioner", C[1219] || CT.C1219, "Concert One", C[1220] || CT.C1220, "Condiment", C[1221] || CT.C1221, "Contrail One", C[1222] || CT.C1222, "Convergence", C[1223] || CT.C1223, "Cookie", C[1224] || CT.C1224, "Copse", C[1225] || CT.C1225, "Corben", C[1226] || CT.C1226, "Cormorant", C[1227] || CT.C1227, "Cormorant Garamond", C[1228] || CT.C1228, "Cormorant Infant", C[1229] || CT.C1229, "Cormorant SC", C[1230] || CT.C1230, "Cormorant Unicase", C[1231] || CT.C1231, "Cormorant Upright", C[1232] || CT.C1232, "Courgette", C[1233] || CT.C1233, "Courier Prime", C[1234] || CT.C1234, "Cousine", C[1235] || CT.C1235, "Coustard", C[1236] || CT.C1236, "Covered By Your Grace", C[1237] || CT.C1237, "Crafty Girls", C[1238] || CT.C1238, "Creepster", C[1239] || CT.C1239, "Crete Round", C[1240] || CT.C1240, "Crimson Pro", C[1241] || CT.C1241, "Crimson Text", C[1242] || CT.C1242, "Croissant One", C[1243] || CT.C1243, "Crushed", C[1244] || CT.C1244, "Cuprum", C[1245] || CT.C1245, "Cute Font", C[1246] || CT.C1246, "Cutive", C[1247] || CT.C1247, "Cutive Mono", C[1248] || CT.C1248, "DM Mono", C[1249] || CT.C1249, "DM Sans", C[1250] || CT.C1250, "DM Serif Display", C[1251] || CT.C1251, "DM Serif Text", C[1252] || CT.C1252, "Damion", C[1253] || CT.C1253, "Dancing Script", C[1254] || CT.C1254, "Darker Grotesque", C[1255] || CT.C1255, "David Libre", C[1256] || CT.C1256, "Dawning of a New Day", C[1257] || CT.C1257, "Days One", C[1258] || CT.C1258, "Dekko", C[1259] || CT.C1259, "Delius", C[1260] || CT.C1260, "Delius Swash Caps", C[1261] || CT.C1261, "Delius Unicase", C[1262] || CT.C1262, "Della Respira", C[1263] || CT.C1263, "Denk One", C[1264] || CT.C1264, "Devonshire", C[1265] || CT.C1265, "Dhurjati", C[1266] || CT.C1266, "Didact Gothic", C[1267] || CT.C1267, "Diplomata", C[1268] || CT.C1268, "Diplomata SC", C[1269] || CT.C1269, "Do Hyeon", C[1270] || CT.C1270, "Dokdo", C[1271] || CT.C1271, "Domine", C[1272] || CT.C1272, "Donegal One", C[1273] || CT.C1273, "Doppio One", C[1274] || CT.C1274, "Dorsa", C[1275] || CT.C1275, "Dosis", C[1276] || CT.C1276, "Dr Sugiyama", C[1277] || CT.C1277, "Droid Sans", C[1278] || CT.C1278, "Droid Sans Mono", C[1279] || CT.C1279, "Droid Serif", C[1280] || CT.C1280, "Duru Sans", C[1281] || CT.C1281, "Dynalight", C[1282] || CT.C1282, "EB Garamond", C[1283] || CT.C1283, "Eagle Lake", C[1284] || CT.C1284, "East Sea Dokdo", C[1285] || CT.C1285, "Eater", C[1286] || CT.C1286, "Economica", C[1287] || CT.C1287, "Eczar", C[1288] || CT.C1288, "El Messiri", C[1289] || CT.C1289, "Electrolize", C[1290] || CT.C1290, "Elsie", C[1291] || CT.C1291, "Elsie Swash Caps", C[1292] || CT.C1292, "Emblema One", C[1293] || CT.C1293, "Emilys Candy", C[1294] || CT.C1294, "Encode Sans", C[1295] || CT.C1295, "Encode Sans Condensed", C[1296] || CT.C1296, "Encode Sans Expanded", C[1297] || CT.C1297, "Encode Sans Semi Condensed", C[1298] || CT.C1298, "Encode Sans Semi Expanded", C[1299] || CT.C1299, "Engagement", C[1300] || CT.C1300, "Englebert", C[1301] || CT.C1301, "Enriqueta", C[1302] || CT.C1302, "Epilogue", C[1303] || CT.C1303, "Erica One", C[1304] || CT.C1304, "Esteban", C[1305] || CT.C1305, "Euphoria Script", C[1306] || CT.C1306, "Ewert", C[1307] || CT.C1307, "Exo", C[1308] || CT.C1308, "Exo 2", C[1309] || CT.C1309, "Expletus Sans", C[1310] || CT.C1310, "Fahkwang", C[1311] || CT.C1311, "Fanwood Text", C[1312] || CT.C1312, "Farro", C[1313] || CT.C1313, "Farsan", C[1314] || CT.C1314, "Fascinate", C[1315] || CT.C1315, "Fascinate Inline", C[1316] || CT.C1316, "Faster One", C[1317] || CT.C1317, "Fauna One", C[1318] || CT.C1318, "Faustina", C[1319] || CT.C1319, "Federant", C[1320] || CT.C1320, "Federo", C[1321] || CT.C1321, "Felipa", C[1322] || CT.C1322, "Fenix", C[1323] || CT.C1323, "Finger Paint", C[1324] || CT.C1324, "Fira Code", C[1325] || CT.C1325, "Fira Mono", C[1326] || CT.C1326, "Fira Sans", C[1327] || CT.C1327, "Fira Sans Condensed", C[1328] || CT.C1328, "Fira Sans Extra Condensed", C[1329] || CT.C1329, "Fjalla One", C[1330] || CT.C1330, "Fjord One", C[1331] || CT.C1331, "Flamenco", C[1332] || CT.C1332, "Flavors", C[1333] || CT.C1333, "Fondamento", C[1334] || CT.C1334, "Fontdiner Swanky", C[1335] || CT.C1335, "Forum", C[1336] || CT.C1336, "Francois One", C[1337] || CT.C1337, "Frank Ruhl Libre", C[1338] || CT.C1338, "Fraunces", C[1339] || CT.C1339, "Freckle Face", C[1340] || CT.C1340, "Fredericka the Great", C[1341] || CT.C1341, "Fredoka One", C[1342] || CT.C1342, "Fresca", C[1343] || CT.C1343, "Frijole", C[1344] || CT.C1344, "Fruktur", C[1345] || CT.C1345, "Fugaz One", C[1346] || CT.C1346, "GFS Didot", C[1347] || CT.C1347, "GFS Neohellenic", C[1348] || CT.C1348, "Gabriela", C[1349] || CT.C1349, "Gaegu", C[1350] || CT.C1350, "Gafata", C[1351] || CT.C1351, "Galada", C[1352] || CT.C1352, "Galdeano", C[1353] || CT.C1353, "Galindo", C[1354] || CT.C1354, "Gamja Flower", C[1355] || CT.C1355, "Gayathri", C[1356] || CT.C1356, "Gelasio", C[1357] || CT.C1357, "Gentium Basic", C[1358] || CT.C1358, "Gentium Book Basic", C[1359] || CT.C1359, "Geo", C[1360] || CT.C1360, "Geostar", C[1361] || CT.C1361, "Geostar Fill", C[1362] || CT.C1362, "Germania One", C[1363] || CT.C1363, "Gidugu", C[1364] || CT.C1364, "Gilda Display", C[1365] || CT.C1365, "Girassol", C[1366] || CT.C1366, "Give You Glory", C[1367] || CT.C1367, "Glass Antiqua", C[1368] || CT.C1368, "Glegoo", C[1369] || CT.C1369, "Gloria Hallelujah", C[1370] || CT.C1370, "Goblin One", C[1371] || CT.C1371, "Gochi Hand", C[1372] || CT.C1372, "Goldman", C[1373] || CT.C1373, "Gorditas", C[1374] || CT.C1374, "Gothic A1", C[1375] || CT.C1375, "Gotu", C[1376] || CT.C1376, "Goudy Bookletter 1911", C[1377] || CT.C1377, "Graduate", C[1378] || CT.C1378, "Grand Hotel", C[1379] || CT.C1379, "Grandstander", C[1380] || CT.C1380, "Gravitas One", C[1381] || CT.C1381, "Great Vibes", C[1382] || CT.C1382, "Grenze", C[1383] || CT.C1383, "Grenze Gotisch", C[1384] || CT.C1384, "Griffy", C[1385] || CT.C1385, "Gruppo", C[1386] || CT.C1386, "Gudea", C[1387] || CT.C1387, "Gugi", C[1388] || CT.C1388, "Gupter", C[1389] || CT.C1389, "Gurajada", C[1390] || CT.C1390, "Habibi", C[1391] || CT.C1391, "Hachi Maru Pop", C[1392] || CT.C1392, "Halant", C[1393] || CT.C1393, "Hammersmith One", C[1394] || CT.C1394, "Hanalei", C[1395] || CT.C1395, "Hanalei Fill", C[1396] || CT.C1396, "Handlee", C[1397] || CT.C1397, "Happy Monkey", C[1398] || CT.C1398, "Harmattan", C[1399] || CT.C1399, "Headland One", C[1400] || CT.C1400, "Heebo", C[1401] || CT.C1401, "Henny Penny", C[1402] || CT.C1402, "Hepta Slab", C[1403] || CT.C1403, "Herr Von Muellerhoff", C[1404] || CT.C1404, "Hi Melody", C[1405] || CT.C1405, "Hind", C[1406] || CT.C1406, "Hind Guntur", C[1407] || CT.C1407, "Hind Madurai", C[1408] || CT.C1408, "Hind Siliguri", C[1409] || CT.C1409, "Hind Vadodara", C[1410] || CT.C1410, "Holtwood One SC", C[1411] || CT.C1411, "Homemade Apple", C[1412] || CT.C1412, "Homenaje", C[1413] || CT.C1413, "IBM Plex Mono", C[1414] || CT.C1414, "IBM Plex Sans", C[1415] || CT.C1415, "IBM Plex Sans Condensed", C[1416] || CT.C1416, "IBM Plex Serif", C[1417] || CT.C1417, "IM Fell DW Pica", C[1418] || CT.C1418, "IM Fell DW Pica SC", C[1419] || CT.C1419, "IM Fell Double Pica", C[1420] || CT.C1420, "IM Fell Double Pica SC", C[1421] || CT.C1421, "IM Fell English", C[1422] || CT.C1422, "IM Fell English SC", C[1423] || CT.C1423, "IM Fell French Canon", C[1424] || CT.C1424, "IM Fell French Canon SC", C[1425] || CT.C1425, "IM Fell Great Primer", C[1426] || CT.C1426, "IM Fell Great Primer SC", C[1427] || CT.C1427, "Ibarra Real Nova", C[1428] || CT.C1428, "Iceberg", C[1429] || CT.C1429, "Iceland", C[1430] || CT.C1430, "Imprima", C[1431] || CT.C1431, "Inconsolata", C[1432] || CT.C1432, "Inder", C[1433] || CT.C1433, "Indie Flower", C[1434] || CT.C1434, "Inika", C[1435] || CT.C1435, "Inknut Antiqua", C[1436] || CT.C1436, "Inria Sans", C[1437] || CT.C1437, "Inria Serif", C[1438] || CT.C1438, "Inter", C[1439] || CT.C1439, "Irish Grover", C[1440] || CT.C1440, "Istok Web", C[1441] || CT.C1441, "Italiana", C[1442] || CT.C1442, "Italianno", C[1443] || CT.C1443, "Itim", C[1444] || CT.C1444, "Jacques Francois", C[1445] || CT.C1445, "Jacques Francois Shadow", C[1446] || CT.C1446, "Jaldi", C[1447] || CT.C1447, "JetBrains Mono", C[1448] || CT.C1448, "Jim Nightshade", C[1449] || CT.C1449, "Jockey One", C[1450] || CT.C1450, "Jolly Lodger", C[1451] || CT.C1451, "Jomhuria", C[1452] || CT.C1452, "Jomolhari", C[1453] || CT.C1453, "Josefin Sans", C[1454] || CT.C1454, "Josefin Slab", C[1455] || CT.C1455, "Jost", C[1456] || CT.C1456, "Joti One", C[1457] || CT.C1457, "Jua", C[1458] || CT.C1458, "Judson", C[1459] || CT.C1459, "Julee", C[1460] || CT.C1460, "Julius Sans One", C[1461] || CT.C1461, "Junge", C[1462] || CT.C1462, "Jura", C[1463] || CT.C1463, "Just Another Hand", C[1464] || CT.C1464, "Just Me Again Down Here", C[1465] || CT.C1465, "K2D", C[1466] || CT.C1466, "Kadwa", C[1467] || CT.C1467, "Kalam", C[1468] || CT.C1468, "Kameron", C[1469] || CT.C1469, "Kanit", C[1470] || CT.C1470, "Kantumruy", C[1471] || CT.C1471, "Karla", C[1472] || CT.C1472, "Karma", C[1473] || CT.C1473, "Katibeh", C[1474] || CT.C1474, "Kaushan Script", C[1475] || CT.C1475, "Kavivanar", C[1476] || CT.C1476, "Kavoon", C[1477] || CT.C1477, "Kdam Thmor", C[1478] || CT.C1478, "Keania One", C[1479] || CT.C1479, "Kelly Slab", C[1480] || CT.C1480, "Kenia", C[1481] || CT.C1481, "Khand", C[1482] || CT.C1482, "Khula", C[1483] || CT.C1483, "Kirang Haerang", C[1484] || CT.C1484, "Kite One", C[1485] || CT.C1485, "Knewave", C[1486] || CT.C1486, "KoHo", C[1487] || CT.C1487, "Kodchasan", C[1488] || CT.C1488, "Kosugi", C[1489] || CT.C1489, "Kosugi Maru", C[1490] || CT.C1490, "Kotta One", C[1491] || CT.C1491, "Kranky", C[1492] || CT.C1492, "Kreon", C[1493] || CT.C1493, "Kristi", C[1494] || CT.C1494, "Krona One", C[1495] || CT.C1495, "Krub", C[1496] || CT.C1496, "Kufam", C[1497] || CT.C1497, "Kulim Park", C[1498] || CT.C1498, "Kumar One", C[1499] || CT.C1499, "Kumar One Outline", C[1500] || CT.C1500, "Kumbh Sans", C[1501] || CT.C1501, "Kurale", C[1502] || CT.C1502, "La Belle Aurore", C[1503] || CT.C1503, "Lacquer", C[1504] || CT.C1504, "Laila", C[1505] || CT.C1505, "Lakki Reddy", C[1506] || CT.C1506, "Lalezar", C[1507] || CT.C1507, "Lancelot", C[1508] || CT.C1508, "Langar", C[1509] || CT.C1509, "Lateef", C[1510] || CT.C1510, "Lato", C[1511] || CT.C1511, "League Script", C[1512] || CT.C1512, "Leckerli One", C[1513] || CT.C1513, "Ledger", C[1514] || CT.C1514, "Lekton", C[1515] || CT.C1515, "Lemon", C[1516] || CT.C1516, "Lemonada", C[1517] || CT.C1517, "Lexend Deca", C[1518] || CT.C1518, "Lexend Exa", C[1519] || CT.C1519, "Lexend Giga", C[1520] || CT.C1520, "Lexend Mega", C[1521] || CT.C1521, "Lexend Peta", C[1522] || CT.C1522, "Lexend Tera", C[1523] || CT.C1523, "Lexend Zetta", C[1524] || CT.C1524, "Libre Barcode 128", C[1525] || CT.C1525, "Libre Barcode 128 Text", C[1526] || CT.C1526, "Libre Barcode 39", C[1527] || CT.C1527, "Libre Barcode 39 Extended", C[1528] || CT.C1528, "Libre Barcode 39 Extended Text", C[1529] || CT.C1529, "Libre Barcode 39 Text", C[1530] || CT.C1530, "Libre Baskerville", C[1531] || CT.C1531, "Libre Caslon Display", C[1532] || CT.C1532, "Libre Caslon Text", C[1533] || CT.C1533, "Libre Franklin", C[1534] || CT.C1534, "Life Savers", C[1535] || CT.C1535, "Lilita One", C[1536] || CT.C1536, "Lily Script One", C[1537] || CT.C1537, "Limelight", C[1538] || CT.C1538, "Linden Hill", C[1539] || CT.C1539, "Literata", C[1540] || CT.C1540, "Liu Jian Mao Cao", C[1541] || CT.C1541, "Livvic", C[1542] || CT.C1542, "Lobster", C[1543] || CT.C1543, "Lobster Two", C[1544] || CT.C1544, "Londrina Outline", C[1545] || CT.C1545, "Londrina Shadow", C[1546] || CT.C1546, "Londrina Sketch", C[1547] || CT.C1547, "Londrina Solid", C[1548] || CT.C1548, "Long Cang", C[1549] || CT.C1549, "Lora", C[1550] || CT.C1550, "Love Ya Like A Sister", C[1551] || CT.C1551, "Loved by the King", C[1552] || CT.C1552, "Lovers Quarrel", C[1553] || CT.C1553, "Luckiest Guy", C[1554] || CT.C1554, "Lusitana", C[1555] || CT.C1555, "Lustria", C[1556] || CT.C1556, "M PLUS 1p", C[1557] || CT.C1557, "M PLUS Rounded 1c", C[1558] || CT.C1558, "Ma Shan Zheng", C[1559] || CT.C1559, "Macondo", C[1560] || CT.C1560, "Macondo Swash Caps", C[1561] || CT.C1561, "Mada", C[1562] || CT.C1562, "Magra", C[1563] || CT.C1563, "Maiden Orange", C[1564] || CT.C1564, "Maitree", C[1565] || CT.C1565, "Major Mono Display", C[1566] || CT.C1566, "Mako", C[1567] || CT.C1567, "Mali", C[1568] || CT.C1568, "Mallanna", C[1569] || CT.C1569, "Mandali", C[1570] || CT.C1570, "Manjari", C[1571] || CT.C1571, "Manrope", C[1572] || CT.C1572, "Mansalva", C[1573] || CT.C1573, "Manuale", C[1574] || CT.C1574, "Marcellus", C[1575] || CT.C1575, "Marcellus SC", C[1576] || CT.C1576, "Marck Script", C[1577] || CT.C1577, "Margarine", C[1578] || CT.C1578, "Markazi Text", C[1579] || CT.C1579, "Marko One", C[1580] || CT.C1580, "Marmelad", C[1581] || CT.C1581, "Martel", C[1582] || CT.C1582, "Martel Sans", C[1583] || CT.C1583, "Marvel", C[1584] || CT.C1584, "Mate", C[1585] || CT.C1585, "Mate SC", C[1586] || CT.C1586, "Maven Pro", C[1587] || CT.C1587, "McLaren", C[1588] || CT.C1588, "Meddon", C[1589] || CT.C1589, "MedievalSharp", C[1590] || CT.C1590, "Medula One", C[1591] || CT.C1591, "Meera Inimai", C[1592] || CT.C1592, "Megrim", C[1593] || CT.C1593, "Meie Script", C[1594] || CT.C1594, "Merienda", C[1595] || CT.C1595, "Merienda One", C[1596] || CT.C1596, "Merriweather", C[1597] || CT.C1597, "Merriweather Sans", C[1598] || CT.C1598, "Metal Mania", C[1599] || CT.C1599, "Metamorphous", C[1600] || CT.C1600, "Metrophobic", C[1601] || CT.C1601, "Michroma", C[1602] || CT.C1602, "Milonga", C[1603] || CT.C1603, "Miltonian", C[1604] || CT.C1604, "Miltonian Tattoo", C[1605] || CT.C1605, "Mina", C[1606] || CT.C1606, "Miniver", C[1607] || CT.C1607, "Miriam Libre", C[1608] || CT.C1608, "Mirza", C[1609] || CT.C1609, "Miss Fajardose", C[1610] || CT.C1610, "Mitr", C[1611] || CT.C1611, "Modak", C[1612] || CT.C1612, "Modern Antiqua", C[1613] || CT.C1613, "Mogra", C[1614] || CT.C1614, "Molengo", C[1615] || CT.C1615, "Molle", C[1616] || CT.C1616, "Monda", C[1617] || CT.C1617, "Monofett", C[1618] || CT.C1618, "Monoton", C[1619] || CT.C1619, "Monsieur La Doulaise", C[1620] || CT.C1620, "Montaga", C[1621] || CT.C1621, "Montez", C[1622] || CT.C1622, "Montserrat", C[1623] || CT.C1623, "Montserrat Alternates", C[1624] || CT.C1624, "Montserrat Subrayada", C[1625] || CT.C1625, "Mountains of Christmas", C[1626] || CT.C1626, "Mouse Memoirs", C[1627] || CT.C1627, "Mr Bedfort", C[1628] || CT.C1628, "Mr Dafoe", C[1629] || CT.C1629, "Mr De Haviland", C[1630] || CT.C1630, "Mrs Saint Delafield", C[1631] || CT.C1631, "Mrs Sheppards", C[1632] || CT.C1632, "Mukta", C[1633] || CT.C1633, "Mukta Mahee", C[1634] || CT.C1634, "Mukta Malar", C[1635] || CT.C1635, "Mukta Vaani", C[1636] || CT.C1636, "Mulish", C[1637] || CT.C1637, "MuseoModerno", C[1638] || CT.C1638, "Mystery Quest", C[1639] || CT.C1639, "NTR", C[1640] || CT.C1640, "Nanum Brush Script", C[1641] || CT.C1641, "Nanum Gothic", C[1642] || CT.C1642, "Nanum Gothic Coding", C[1643] || CT.C1643, "Nanum Myeongjo", C[1644] || CT.C1644, "Nanum Pen Script", C[1645] || CT.C1645, "Nerko One", C[1646] || CT.C1646, "Neucha", C[1647] || CT.C1647, "Neuton", C[1648] || CT.C1648, "New Rocker", C[1649] || CT.C1649, "News Cycle", C[1650] || CT.C1650, "Niconne", C[1651] || CT.C1651, "Niramit", C[1652] || CT.C1652, "Nixie One", C[1653] || CT.C1653, "Nobile", C[1654] || CT.C1654, "Norican", C[1655] || CT.C1655, "Nosifer", C[1656] || CT.C1656, "Notable", C[1657] || CT.C1657, "Nothing You Could Do", C[1658] || CT.C1658, "Noticia Text", C[1659] || CT.C1659, "Noto Color Emoji Compat", C[1660] || CT.C1660, "Noto Sans", C[1661] || CT.C1661, "Noto Serif", C[1662] || CT.C1662, "Nova Cut", C[1663] || CT.C1663, "Nova Flat", C[1664] || CT.C1664, "Nova Mono", C[1665] || CT.C1665, "Nova Oval", C[1666] || CT.C1666, "Nova Round", C[1667] || CT.C1667, "Nova Script", C[1668] || CT.C1668, "Nova Slim", C[1669] || CT.C1669, "Nova Square", C[1670] || CT.C1670, "Numans", C[1671] || CT.C1671, "Nunito", C[1672] || CT.C1672, "Nunito Sans", C[1673] || CT.C1673, "Odibee Sans", C[1674] || CT.C1674, "Odor Mean Chey", C[1675] || CT.C1675, "Offside", C[1676] || CT.C1676, "Old Standard TT", C[1677] || CT.C1677, "Oldenburg", C[1678] || CT.C1678, "Oleo Script", C[1679] || CT.C1679, "Oleo Script Swash Caps", C[1680] || CT.C1680, "Open Sans", C[1681] || CT.C1681, "Open Sans Condensed", C[1682] || CT.C1682, "Oranienbaum", C[1683] || CT.C1683, "Orbitron", C[1684] || CT.C1684, "Oregano", C[1685] || CT.C1685, "Orienta", C[1686] || CT.C1686, "Original Surfer", C[1687] || CT.C1687, "Oswald", C[1688] || CT.C1688, "Over the Rainbow", C[1689] || CT.C1689, "Overlock", C[1690] || CT.C1690, "Overlock SC", C[1691] || CT.C1691, "Overpass", C[1692] || CT.C1692, "Overpass Mono", C[1693] || CT.C1693, "Ovo", C[1694] || CT.C1694, "Oxanium", C[1695] || CT.C1695, "Oxygen", C[1696] || CT.C1696, "Oxygen Mono", C[1697] || CT.C1697, "PT Mono", C[1698] || CT.C1698, "PT Sans", C[1699] || CT.C1699, "PT Sans Caption", C[1700] || CT.C1700, "PT Sans Narrow", C[1701] || CT.C1701, "PT Serif", C[1702] || CT.C1702, "PT Serif Caption", C[1703] || CT.C1703, "Pacifico", C[1704] || CT.C1704, "Padauk", C[1705] || CT.C1705, "Palanquin", C[1706] || CT.C1706, "Palanquin Dark", C[1707] || CT.C1707, "Pangolin", C[1708] || CT.C1708, "Paprika", C[1709] || CT.C1709, "Parisienne", C[1710] || CT.C1710, "Passero One", C[1711] || CT.C1711, "Passion One", C[1712] || CT.C1712, "Pathway Gothic One", C[1713] || CT.C1713, "Patrick Hand", C[1714] || CT.C1714, "Patrick Hand SC", C[1715] || CT.C1715, "Pattaya", C[1716] || CT.C1716, "Patua One", C[1717] || CT.C1717, "Pavanam", C[1718] || CT.C1718, "Paytone One", C[1719] || CT.C1719, "Peddana", C[1720] || CT.C1720, "Peralta", C[1721] || CT.C1721, "Permanent Marker", C[1722] || CT.C1722, "Petit Formal Script", C[1723] || CT.C1723, "Petrona", C[1724] || CT.C1724, "Philosopher", C[1725] || CT.C1725, "Piazzolla", C[1726] || CT.C1726, "Piedra", C[1727] || CT.C1727, "Pinyon Script", C[1728] || CT.C1728, "Pirata One", C[1729] || CT.C1729, "Plaster", C[1730] || CT.C1730, "Play", C[1731] || CT.C1731, "Playball", C[1732] || CT.C1732, "Playfair Display", C[1733] || CT.C1733, "Playfair Display SC", C[1734] || CT.C1734, "Podkova", C[1735] || CT.C1735, "Poiret One", C[1736] || CT.C1736, "Poller One", C[1737] || CT.C1737, "Poly", C[1738] || CT.C1738, "Pompiere", C[1739] || CT.C1739, "Pontano Sans", C[1740] || CT.C1740, "Poor Story", C[1741] || CT.C1741, "Poppins", C[1742] || CT.C1742, "Port Lligat Sans", C[1743] || CT.C1743, "Port Lligat Slab", C[1744] || CT.C1744, "Potta One", C[1745] || CT.C1745, "Pragati Narrow", C[1746] || CT.C1746, "Prata", C[1747] || CT.C1747, "Press Start 2P", C[1748] || CT.C1748, "Pridi", C[1749] || CT.C1749, "Princess Sofia", C[1750] || CT.C1750, "Prociono", C[1751] || CT.C1751, "Prompt", C[1752] || CT.C1752, "Prosto One", C[1753] || CT.C1753, "Proza Libre", C[1754] || CT.C1754, "Public Sans", C[1755] || CT.C1755, "Puritan", C[1756] || CT.C1756, "Purple Purse", C[1757] || CT.C1757, "Quando", C[1758] || CT.C1758, "Quantico", C[1759] || CT.C1759, "Quattrocento", C[1760] || CT.C1760, "Quattrocento Sans", C[1761] || CT.C1761, "Questrial", C[1762] || CT.C1762, "Quicksand", C[1763] || CT.C1763, "Quintessential", C[1764] || CT.C1764, "Qwigley", C[1765] || CT.C1765, "Racing Sans One", C[1766] || CT.C1766, "Radley", C[1767] || CT.C1767, "Rajdhani", C[1768] || CT.C1768, "Rakkas", C[1769] || CT.C1769, "Raleway", C[1770] || CT.C1770, "Raleway Dots", C[1771] || CT.C1771, "Ramabhadra", C[1772] || CT.C1772, "Ramaraja", C[1773] || CT.C1773, "Rambla", C[1774] || CT.C1774, "Rammetto One", C[1775] || CT.C1775, "Ranchers", C[1776] || CT.C1776, "Rancho", C[1777] || CT.C1777, "Ranga", C[1778] || CT.C1778, "Rasa", C[1779] || CT.C1779, "Rationale", C[1780] || CT.C1780, "Ravi Prakash", C[1781] || CT.C1781, "Recursive", C[1782] || CT.C1782, "Red Hat Display", C[1783] || CT.C1783, "Red Hat Text", C[1784] || CT.C1784, "Red Rose", C[1785] || CT.C1785, "Redressed", C[1786] || CT.C1786, "Reem Kufi", C[1787] || CT.C1787, "Reenie Beanie", C[1788] || CT.C1788, "Revalia", C[1789] || CT.C1789, "Rhodium Libre", C[1790] || CT.C1790, "Ribeye", C[1791] || CT.C1791, "Ribeye Marrow", C[1792] || CT.C1792, "Righteous", C[1793] || CT.C1793, "Risque", C[1794] || CT.C1794, "Roboto", C[1795] || CT.C1795, "Roboto Condensed", C[1796] || CT.C1796, "Roboto Mono", C[1797] || CT.C1797, "Roboto Slab", C[1798] || CT.C1798, "Rochester", C[1799] || CT.C1799, "Rock Salt", C[1800] || CT.C1800, "Rokkitt", C[1801] || CT.C1801, "Romanesco", C[1802] || CT.C1802, "Ropa Sans", C[1803] || CT.C1803, "Rosario", C[1804] || CT.C1804, "Rosarivo", C[1805] || CT.C1805, "Rouge Script", C[1806] || CT.C1806, "Rowdies", C[1807] || CT.C1807, "Rozha One", C[1808] || CT.C1808, "Rubik", C[1809] || CT.C1809, "Rubik Mono One", C[1810] || CT.C1810, "Ruda", C[1811] || CT.C1811, "Rufina", C[1812] || CT.C1812, "Ruge Boogie", C[1813] || CT.C1813, "Ruluko", C[1814] || CT.C1814, "Rum Raisin", C[1815] || CT.C1815, "Ruslan Display", C[1816] || CT.C1816, "Russo One", C[1817] || CT.C1817, "Ruthie", C[1818] || CT.C1818, "Rye", C[1819] || CT.C1819, "Sacramento", C[1820] || CT.C1820, "Sahitya", C[1821] || CT.C1821, "Sail", C[1822] || CT.C1822, "Saira", C[1823] || CT.C1823, "Saira Condensed", C[1824] || CT.C1824, "Saira Extra Condensed", C[1825] || CT.C1825, "Saira Semi Condensed", C[1826] || CT.C1826, "Saira Stencil One", C[1827] || CT.C1827, "Salsa", C[1828] || CT.C1828, "Sanchez", C[1829] || CT.C1829, "Sancreek", C[1830] || CT.C1830, "Sansita", C[1831] || CT.C1831, "Sansita Swashed", C[1832] || CT.C1832, "Sarabun", C[1833] || CT.C1833, "Sarala", C[1834] || CT.C1834, "Sarina", C[1835] || CT.C1835, "Sarpanch", C[1836] || CT.C1836, "Satisfy", C[1837] || CT.C1837, "Sawarabi Gothic", C[1838] || CT.C1838, "Sawarabi Mincho", C[1839] || CT.C1839, "Scada", C[1840] || CT.C1840, "Scheherazade", C[1841] || CT.C1841, "Schoolbell", C[1842] || CT.C1842, "Scope One", C[1843] || CT.C1843, "Seaweed Script", C[1844] || CT.C1844, "Secular One", C[1845] || CT.C1845, "Sedgwick Ave", C[1846] || CT.C1846, "Sedgwick Ave Display", C[1847] || CT.C1847, "Sen", C[1848] || CT.C1848, "Sevillana", C[1849] || CT.C1849, "Seymour One", C[1850] || CT.C1850, "Shadows Into Light", C[1851] || CT.C1851, "Shadows Into Light Two", C[1852] || CT.C1852, "Shanti", C[1853] || CT.C1853, "Share", C[1854] || CT.C1854, "Share Tech", C[1855] || CT.C1855, "Share Tech Mono", C[1856] || CT.C1856, "Shojumaru", C[1857] || CT.C1857, "Short Stack", C[1858] || CT.C1858, "Shrikhand", C[1859] || CT.C1859, "Sigmar One", C[1860] || CT.C1860, "Signika", C[1861] || CT.C1861, "Signika Negative", C[1862] || CT.C1862, "Simonetta", C[1863] || CT.C1863, "Single Day", C[1864] || CT.C1864, "Sintony", C[1865] || CT.C1865, "Sirin Stencil", C[1866] || CT.C1866, "Six Caps", C[1867] || CT.C1867, "Skranji", C[1868] || CT.C1868, "Slabo 13px", C[1869] || CT.C1869, "Slabo 27px", C[1870] || CT.C1870, "Slackey", C[1871] || CT.C1871, "Smokum", C[1872] || CT.C1872, "Smythe", C[1873] || CT.C1873, "Sniglet", C[1874] || CT.C1874, "Snippet", C[1875] || CT.C1875, "Snowburst One", C[1876] || CT.C1876, "Sofadi One", C[1877] || CT.C1877, "Sofia", C[1878] || CT.C1878, "Solway", C[1879] || CT.C1879, "Song Myung", C[1880] || CT.C1880, "Sonsie One", C[1881] || CT.C1881, "Sora", C[1882] || CT.C1882, "Sorts Mill Goudy", C[1883] || CT.C1883, "Source Code Pro", C[1884] || CT.C1884, "Source Sans Pro", C[1885] || CT.C1885, "Source Serif Pro", C[1886] || CT.C1886, "Space Grotesk", C[1887] || CT.C1887, "Space Mono", C[1888] || CT.C1888, "Spartan", C[1889] || CT.C1889, "Special Elite", C[1890] || CT.C1890, "Spectral", C[1891] || CT.C1891, "Spectral SC", C[1892] || CT.C1892, "Spicy Rice", C[1893] || CT.C1893, "Spinnaker", C[1894] || CT.C1894, "Spirax", C[1895] || CT.C1895, "Squada One", C[1896] || CT.C1896, "Sree Krushnadevaraya", C[1897] || CT.C1897, "Sriracha", C[1898] || CT.C1898, "Srisakdi", C[1899] || CT.C1899, "Staatliches", C[1900] || CT.C1900, "Stalemate", C[1901] || CT.C1901, "Stalinist One", C[1902] || CT.C1902, "Stardos Stencil", C[1903] || CT.C1903, "Stint Ultra Condensed", C[1904] || CT.C1904, "Stint Ultra Expanded", C[1905] || CT.C1905, "Stoke", C[1906] || CT.C1906, "Strait", C[1907] || CT.C1907, "Stylish", C[1908] || CT.C1908, "Sue Ellen Francisco", C[1909] || CT.C1909, "Suez One", C[1910] || CT.C1910, "Sulphur Point", C[1911] || CT.C1911, "Sumana", C[1912] || CT.C1912, "Sunflower", C[1913] || CT.C1913, "Sunshiney", C[1914] || CT.C1914, "Supermercado One", C[1915] || CT.C1915, "Sura", C[1916] || CT.C1916, "Suranna", C[1917] || CT.C1917, "Suravaram", C[1918] || CT.C1918, "Swanky and Moo Moo", C[1919] || CT.C1919, "Syncopate", C[1920] || CT.C1920, "Syne", C[1921] || CT.C1921, "Syne Mono", C[1922] || CT.C1922, "Syne Tactile", C[1923] || CT.C1923, "Tajawal", C[1924] || CT.C1924, "Tangerine", C[1925] || CT.C1925, "Tauri", C[1926] || CT.C1926, "Taviraj", C[1927] || CT.C1927, "Teko", C[1928] || CT.C1928, "Telex", C[1929] || CT.C1929, "Tenali Ramakrishna", C[1930] || CT.C1930, "Tenor Sans", C[1931] || CT.C1931, "Text Me One", C[1932] || CT.C1932, "Thasadith", C[1933] || CT.C1933, "The Girl Next Door", C[1934] || CT.C1934, "Tienne", C[1935] || CT.C1935, "Tillana", C[1936] || CT.C1936, "Timmana", C[1937] || CT.C1937, "Tinos", C[1938] || CT.C1938, "Titan One", C[1939] || CT.C1939, "Titillium Web", C[1940] || CT.C1940, "Tomorrow", C[1941] || CT.C1941, "Trade Winds", C[1942] || CT.C1942, "Trirong", C[1943] || CT.C1943, "Trispace", C[1944] || CT.C1944, "Trocchi", C[1945] || CT.C1945, "Trochut", C[1946] || CT.C1946, "Trykker", C[1947] || CT.C1947, "Tulpen One", C[1948] || CT.C1948, "Turret Road", C[1949] || CT.C1949, "Ubuntu", C[1950] || CT.C1950, "Ubuntu Condensed", C[1951] || CT.C1951, "Ubuntu Mono", C[1952] || CT.C1952, "Ultra", C[1953] || CT.C1953, "Uncial Antiqua", C[1954] || CT.C1954, "Underdog", C[1955] || CT.C1955, "Unica One", C[1956] || CT.C1956, "UnifrakturCook", C[1957] || CT.C1957, "UnifrakturMaguntia", C[1958] || CT.C1958, "Unkempt", C[1959] || CT.C1959, "Unlock", C[1960] || CT.C1960, "Unna", C[1961] || CT.C1961, "VT323", C[1962] || CT.C1962, "Vampiro One", C[1963] || CT.C1963, "Varela", C[1964] || CT.C1964, "Varela Round", C[1965] || CT.C1965, "Varta", C[1966] || CT.C1966, "Vast Shadow", C[1967] || CT.C1967, "Vesper Libre", C[1968] || CT.C1968, "Viaoda Libre", C[1969] || CT.C1969, "Vibes", C[1970] || CT.C1970, "Vibur", C[1971] || CT.C1971, "Vidaloka", C[1972] || CT.C1972, "Viga", C[1973] || CT.C1973, "Voces", C[1974] || CT.C1974, "Volkhov", C[1975] || CT.C1975, "Vollkorn", C[1976] || CT.C1976, "Vollkorn SC", C[1977] || CT.C1977, "Voltaire", C[1978] || CT.C1978, "Waiting for the Sunrise", C[1979] || CT.C1979, "Wallpoet", C[1980] || CT.C1980, "Walter Turncoat", C[1981] || CT.C1981, "Warnes", C[1982] || CT.C1982, "Wellfleet", C[1983] || CT.C1983, "Wendy One", C[1984] || CT.C1984, "Wire One", C[1985] || CT.C1985, "Work Sans", C[1986] || CT.C1986, "Xanh Mono", C[1987] || CT.C1987, "Yanone Kaffeesatz", C[1988] || CT.C1988, "Yantramanav", C[1989] || CT.C1989, "Yatra One", C[1990] || CT.C1990, "Yellowtail", C[1991] || CT.C1991, "Yeon Sung", C[1992] || CT.C1992, "Yeseva One", C[1993] || CT.C1993, "Yesteryear", C[1994] || CT.C1994, "Yrsa", C[1995] || CT.C1995, "Yusei Magic", C[1996] || CT.C1996, "ZCOOL KuaiLe", C[1997] || CT.C1997, "ZCOOL QingKe HuangYou", C[1998] || CT.C1998, "ZCOOL XiaoWei", C[1999] || CT.C1999, "Zeyada", C[2000] || CT.C2000, "Zhi Mang Xing", C[2001] || CT.C2001, "Zilla Slab", C[2002] || CT.C2002, "Zilla Slab Highlight", C[2003] || CT.C2003]);
    }
  }, false);
  var C = Array(2004).fill(void 0);
  var I = [
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/google_fonts-2.1.0/lib/src/google_fonts_base.dart",
    "package:google_fonts/google_fonts.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/google_fonts-2.1.0/lib/google_fonts.dart"
  ];
  google_fonts_base.clearCache = function clearCache() {
    return google_fonts_base._loadedFonts.clear();
  };
  google_fonts_base.googleFontsTextStyle = function googleFontsTextStyle(opts) {
    let t0, t0$;
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    if (fontFamily == null) dart.nullFailed(I[0], 44, 19, "fontFamily");
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
    let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
    let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
    let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let foreground = opts && 'foreground' in opts ? opts.foreground : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let shadows = opts && 'shadows' in opts ? opts.shadows : null;
    let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
    let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
    let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
    let fonts = opts && 'fonts' in opts ? opts.fonts : null;
    if (fonts == null) dart.nullFailed(I[0], 64, 53, "fonts");
    textStyle == null ? textStyle = new text_style.TextStyle.new() : null;
    textStyle = textStyle.copyWith({color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness});
    let variant = new google_fonts_variant.GoogleFontsVariant.new({fontWeight: (t0 = textStyle.fontWeight, t0 == null ? ui.FontWeight.w400 : t0), fontStyle: (t0$ = textStyle.fontStyle, t0$ == null ? ui.FontStyle.normal : t0$)});
    let matchedVariant = google_fonts_base._closestMatch(variant, fonts[$keys]);
    let familyWithVariant = new google_fonts_family_with_variant.GoogleFontsFamilyWithVariant.new({family: fontFamily, googleFontsVariant: matchedVariant});
    let descriptor = new google_fonts_descriptor.GoogleFontsDescriptor.new({familyWithVariant: familyWithVariant, file: dart.nullCheck(fonts[$_get](matchedVariant))});
    google_fonts_base.loadFontIfNecessary(descriptor);
    return textStyle.copyWith({fontFamily: familyWithVariant.toString(), fontFamilyFallback: T.JSArrayOfString().of([fontFamily])});
  };
  google_fonts_base.loadFontIfNecessary = function loadFontIfNecessary(descriptor) {
    if (descriptor == null) dart.nullFailed(I[0], 121, 56, "descriptor");
    return async.async(dart.void, function* loadFontIfNecessary() {
      let familyWithVariantString = dart.toString(descriptor.familyWithVariant);
      let fontName = descriptor.familyWithVariant.toApiFilenamePrefix();
      if (dart.test(google_fonts_base._loadedFonts.contains(familyWithVariantString))) {
        return;
      } else {
        google_fonts_base._loadedFonts.add(familyWithVariantString);
      }
      try {
        let byteData = null;
        let assetManifestJson = (yield google_fonts_base.assetManifest.json());
        let assetPath = google_fonts_base._findFamilyWithVariantAssetPath(descriptor.familyWithVariant, assetManifestJson);
        if (assetPath != null) {
          byteData = asset_bundle.rootBundle.load(assetPath);
        }
        if ((yield byteData) != null) {
          return google_fonts_base.loadFontByteData(familyWithVariantString, byteData);
        }
        byteData = file_io.loadFontFromDeviceFileSystem(familyWithVariantString);
        if ((yield byteData) != null) {
          return google_fonts_base.loadFontByteData(familyWithVariantString, byteData);
        }
        if (dart.test(google_fonts.GoogleFonts.config.allowRuntimeFetching)) {
          byteData = google_fonts_base._httpFetchFontAndSaveToDevice(familyWithVariantString, descriptor.file);
          if ((yield byteData) != null) {
            return google_fonts_base.loadFontByteData(familyWithVariantString, byteData);
          }
        } else {
          dart.throw(core.Exception.new("GoogleFonts.config.allowRuntimeFetching is false but font " + dart.str(fontName) + " was not " + "found in the application assets. Ensure " + dart.str(fontName) + ".otf exists in a " + "folder that is included in your pubspec's assets."));
        }
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          google_fonts_base._loadedFonts.remove(familyWithVariantString);
          core.print("Error: google_fonts was unable to load font " + dart.str(fontName) + " because the " + "following exception occured:\n" + dart.str(e));
        } else
          throw e$;
      }
    });
  };
  google_fonts_base.loadFontByteData = function loadFontByteData(familyWithVariantString, byteData) {
    if (familyWithVariantString == null) dart.nullFailed(I[0], 182, 10, "familyWithVariantString");
    return async.async(dart.void, function* loadFontByteData() {
      if (byteData == null) return;
      let fontData = (yield byteData);
      if (fontData == null) return;
      let fontLoader = new font_loader.FontLoader.new(familyWithVariantString);
      fontLoader.addFont(T.FutureOfByteData().value(fontData));
      yield fontLoader.load();
    });
  };
  google_fonts_base._closestMatch = function _closestMatch(sourceVariant, variantsToCompare) {
    if (sourceVariant == null) dart.nullFailed(I[0], 201, 22, "sourceVariant");
    if (variantsToCompare == null) dart.nullFailed(I[0], 202, 32, "variantsToCompare");
    let bestScore = null;
    let bestMatch = null;
    let bestMatch$35isSet = false;
    function bestMatch$35get() {
      return bestMatch$35isSet ? bestMatch : dart.throw(new _internal.LateError.localNI("bestMatch"));
    }
    dart.fn(bestMatch$35get, T.VoidToGoogleFontsVariant());
    function bestMatch$35set(t4) {
      if (t4 == null) dart.nullFailed(I[0], 205, 27, "null");
      bestMatch$35isSet = true;
      return bestMatch = t4;
    }
    dart.fn(bestMatch$35set, T.GoogleFontsVariantTodynamic());
    for (let variantToCompare of variantsToCompare) {
      let score = google_fonts_base._computeMatch(sourceVariant, variantToCompare);
      if (bestScore == null || dart.notNull(score) < dart.notNull(bestScore)) {
        bestScore = score;
        bestMatch$35set(variantToCompare);
      }
    }
    return bestMatch$35get();
  };
  google_fonts_base._httpFetchFontAndSaveToDevice = function _httpFetchFontAndSaveToDevice(fontName, file) {
    if (fontName == null) dart.nullFailed(I[0], 221, 10, "fontName");
    if (file == null) dart.nullFailed(I[0], 222, 19, "file");
    return async.async(typed_data.ByteData, function* _httpFetchFontAndSaveToDevice() {
      let uri = core.Uri.tryParse(file.url);
      if (uri == null) {
        dart.throw(core.Exception.new("Invalid fontUrl: " + dart.str(file.url)));
      }
      let response = null;
      try {
        response = (yield google_fonts_base.httpClient.get(uri));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(core.Exception.new("Failed to load font with url: " + dart.str(file.url)));
        } else
          throw e$;
      }
      if (response.statusCode === 200) {
        if (!dart.test(google_fonts_base._isFileSecure(file, response.bodyBytes))) {
          dart.throw(core.Exception.new("File from " + dart.str(file.url) + " did not match expected length and checksum."));
        }
        google_fonts_base._unawaited(file_io.saveFontToDeviceFileSystem(fontName, response.bodyBytes));
        return typed_data.ByteData.view(response.bodyBytes[$buffer]);
      } else {
        dart.throw(core.Exception.new("Failed to load font with url: " + dart.str(file.url)));
      }
    });
  };
  google_fonts_base._computeMatch = function _computeMatch(a, b) {
    if (a == null) dart.nullFailed(I[0], 255, 38, "a");
    if (b == null) dart.nullFailed(I[0], 255, 60, "b");
    if (dart.equals(a, b)) {
      return 0;
    }
    let score = (dart.notNull(a.fontWeight.index) - dart.notNull(b.fontWeight.index))[$abs]();
    if (a.fontStyle != b.fontStyle) {
      score = score + 2;
    }
    return score;
  };
  google_fonts_base._findFamilyWithVariantAssetPath = function _findFamilyWithVariantAssetPath(familyWithVariant, manifestJson) {
    if (familyWithVariant == null) dart.nullFailed(I[0], 269, 32, "familyWithVariant");
    if (manifestJson == null) return null;
    let apiFilenamePrefix = familyWithVariant.toApiFilenamePrefix();
    for (let assetList of manifestJson[$values]) {
      for (let asset of assetList) {
        for (let matchingSuffix of T.JSArrayOfString().of([".ttf", ".otf"])[$where](dart.bind(asset, $endsWith))) {
          let assetWithoutExtension = asset[$substring](0, asset.length - matchingSuffix.length);
          if (assetWithoutExtension[$endsWith](apiFilenamePrefix)) {
            return asset;
          }
        }
      }
    }
    return null;
  };
  google_fonts_base._isFileSecure = function _isFileSecure(file, bytes) {
    if (file == null) dart.nullFailed(I[0], 291, 36, "file");
    if (bytes == null) dart.nullFailed(I[0], 291, 52, "bytes");
    let actualFileLength = bytes[$length];
    let actualFileHash = dart.toString(sha256.sha256.convert(bytes));
    return file.expectedLength == actualFileLength && file.expectedFileHash == actualFileHash;
  };
  google_fonts_base._unawaited = function _unawaited(future) {
    if (future == null) dart.nullFailed(I[0], 298, 30, "future");
  };
  dart.defineLazy(google_fonts_base, {
    /*google_fonts_base._loadedFonts*/get _loadedFonts() {
      return T.LinkedHashSetOfString().new();
    },
    /*google_fonts_base.httpClient*/get httpClient() {
      return client.Client.new();
    },
    set httpClient(_) {},
    /*google_fonts_base.assetManifest*/get assetManifest() {
      return new asset_manifest.AssetManifest.new();
    },
    set assetManifest(_) {}
  }, false);
  google_fonts._Config = class _Config extends core.Object {};
  (google_fonts._Config.new = function() {
    this.allowRuntimeFetching = true;
    ;
  }).prototype = google_fonts._Config.prototype;
  dart.addTypeTests(google_fonts._Config);
  dart.addTypeCaches(google_fonts._Config);
  dart.setLibraryUri(google_fonts._Config, I[1]);
  dart.setFieldSignature(google_fonts._Config, () => ({
    __proto__: dart.getFields(google_fonts._Config.__proto__),
    allowRuntimeFetching: dart.fieldType(core.bool)
  }));
  google_fonts.GoogleFonts = class GoogleFonts extends core.Object {
    static asMap() {
      return C[0] || CT.C0;
    }
    static _asMapOfTextThemes() {
      return C[1002] || CT.C1002;
    }
    static getFont(fontFamily, opts) {
      if (fontFamily == null) dart.nullFailed(I[2], 2092, 12, "fontFamily");
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = google_fonts.GoogleFonts.asMap();
      if (!dart.test(fonts[$containsKey](fontFamily))) {
        dart.throw(core.Exception.new("No font family by name '" + dart.str(fontFamily) + "' was found."));
      }
      return dart.nullCheck(fonts[$_get](fontFamily))({textStyle: textStyle, color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness});
    }
    static getTextTheme(fontFamily, textTheme = null) {
      if (fontFamily == null) dart.nullFailed(I[2], 2149, 40, "fontFamily");
      let fonts = google_fonts.GoogleFonts._asMapOfTextThemes();
      if (!dart.test(fonts[$containsKey](fontFamily))) {
        dart.throw(core.Exception.new("No font family by name '" + dart.str(fontFamily) + "' was found."));
      }
      return dart.nullCheck(fonts[$_get](fontFamily))(textTheme);
    }
    static aBeeZee(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("2ff99dd1bd594806e1b9f7423a75f1c1dfbbbcddb2698b3ab91f5709b1b90caf", 29632), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("8654a417521bf7fa4ffd1a7f7b62648648c5415ff0f7e0d53474e4436d049b7a", 30984)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "ABeeZee", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static aBeeZeeTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.aBeeZee({textStyle: textTheme.overline})});
    }
    static abel(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("37a44f872ce09b8a93244abfaf3741aa8e4da7cbf64de118635a7cf1c7bc1d5e", 34924)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Abel", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static abelTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.abel({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.abel({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.abel({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.abel({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.abel({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.abel({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.abel({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.abel({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.abel({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.abel({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.abel({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.abel({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.abel({textStyle: textTheme.overline})});
    }
    static abhayaLibre(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("f8e1a260e8a56f8cdb2e2401be9e3a6903026becbf134336b9c8f6b2e2490cd5", 282252), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w500, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("ff52a780878fd838b81f8c96e548f49d7bbd4f92cb0a3dc68eb3f852ca3f3fd4", 282512), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w600, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("e3be63e1c52229673f453da3c6abd79dc0011d02fd57da38489880434556aa77", 281648), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("1c7bdb109ab0e98ef91a41ec55825dcb97c2ea2e9274c67dde899104f5b59878", 281252), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w800, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("9457be94f81fc73b59af3e850d0dcb91790d60078cbdc252da50881c615173aa", 280484)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AbhayaLibre", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static abhayaLibreTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.abhayaLibre({textStyle: textTheme.overline})});
    }
    static abrilFatface(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("2baf7b134013a2183457312f0d26115640d0171829d024dfb1466616a3ac789a", 67316)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AbrilFatface", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static abrilFatfaceTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.abrilFatface({textStyle: textTheme.overline})});
    }
    static aclonica(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("e26afc4582406a86fc1e1b81aad6e16a03f9276419fa76e91b98f9e42d868cc8", 68136)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Aclonica", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static aclonicaTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.aclonica({textStyle: textTheme.overline})});
    }
    static acme(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("f7d0b4054bd37012deca722e47899589c1d35302b51b2fd21ea83e7f3410bccd", 23028)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Acme", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static acmeTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.acme({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.acme({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.acme({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.acme({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.acme({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.acme({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.acme({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.acme({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.acme({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.acme({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.acme({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.acme({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.acme({textStyle: textTheme.overline})});
    }
    static actor(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("417b785d001974cb097e1f84b068ed6f47fa9c5317bf90801a55709954b59350", 42356)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Actor", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static actorTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.actor({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.actor({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.actor({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.actor({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.actor({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.actor({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.actor({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.actor({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.actor({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.actor({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.actor({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.actor({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.actor({textStyle: textTheme.overline})});
    }
    static adamina(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("c241502ff8869d44e310b4e1782d5ca6f53b2d1844593bb0a360e12af0ddfcb1", 76672)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Adamina", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static adaminaTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.adamina({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.adamina({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.adamina({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.adamina({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.adamina({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.adamina({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.adamina({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.adamina({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.adamina({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.adamina({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.adamina({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.adamina({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.adamina({textStyle: textTheme.overline})});
    }
    static adventPro(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w100, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("4041ce69b488624d0653057137ff69ead9c9496be2059ede6a5056fd48780850", 46400), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w200, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("20f54f798dd883fc2fab8294006f8201f1deed59b0abd0ad6c6864bb0062eb47", 46424), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("23462d311ba53dbeac614ad5c99742d75264652538c2aaaea50fa3f9a37c1111", 46356), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("c7084224aa15f7d31683e67bc3107aa12f725f4d20a10e9b65bbcec912162191", 46836), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w500, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("21feddd6602a8e2daf17501cb32c4b27a26b6a357f3652ad357008c8a90f1646", 51004), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w600, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("908b9b388605933b6e469878f17c52da7e2cd9cd6c4ec72a3e12aa5a9c3b9b79", 50772), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("962b3ce8591b2ca225b23e65b3914233c576d21700e3f24c6b820230fe8424e0", 55976)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AdventPro", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static adventProTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.adventPro({textStyle: textTheme.overline})});
    }
    static aguafinaScript(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("282b677fa945b70a3a5a57b8ffb8064638a07feb77edc68cf29591225bc7b5ce", 47180)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AguafinaScript", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static aguafinaScriptTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.aguafinaScript({textStyle: textTheme.overline})});
    }
    static akronim(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("bb077a1601fc7353abf83d6f7e667b5c1ff47a853f2a90f466be1dd738f4e6a1", 107340)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Akronim", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static akronimTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.akronim({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.akronim({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.akronim({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.akronim({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.akronim({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.akronim({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.akronim({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.akronim({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.akronim({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.akronim({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.akronim({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.akronim({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.akronim({textStyle: textTheme.overline})});
    }
    static aladin(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("47e6aa68e0a6686d85005a8cd4e3c3055dc4828dc3b49d69fdf88f38491c8ae2", 42112)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Aladin", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static aladinTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.aladin({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.aladin({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.aladin({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.aladin({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.aladin({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.aladin({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.aladin({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.aladin({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.aladin({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.aladin({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.aladin({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.aladin({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.aladin({textStyle: textTheme.overline})});
    }
    static alata(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("0e69926cd849e08f0dfa58fa809a89d58262ec6a29e3dd4e2c59ea279301b12e", 63264)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Alata", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alataTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alata({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alata({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alata({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alata({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alata({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alata({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alata({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alata({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alata({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alata({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alata({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alata({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alata({textStyle: textTheme.overline})});
    }
    static alatsi(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("7fa5a16b3bfdf1423bfccb98349fc2cee90ca48e42252467b9a36f5a3149622e", 70056)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Alatsi", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alatsiTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alatsi({textStyle: textTheme.overline})});
    }
    static aldrich(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("e288c81eacbaee70be6e11a25f4fb3bdaffcc0ea0449f285c94fc558e64335f4", 27932)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Aldrich", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static aldrichTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.aldrich({textStyle: textTheme.overline})});
    }
    static alef(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("a50dedb5215d98f65036893675ded42762d4c7bdae624c71adb1ea584f5a1467", 58300), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("acbe7d381fcdbd3bca38351290cba306a1dde6549d74fbdef431ee9fcb60030d", 59936)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Alef", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alefTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alef({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alef({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alef({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alef({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alef({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alef({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alef({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alef({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alef({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alef({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alef({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alef({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alef({textStyle: textTheme.overline})});
    }
    static alegreya(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("530d78cba23c5d8e261ae9447b431e1fa550f9dc6563540a0c400be3f7ee88ab", 63708), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("efba5f9b4495a2e911ec871cc4dfebb5dba60bc72d643c0dd346e8f90513f81a", 61596), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("c00ad52d215d793be827a98a0661e13bbd3276c96c6aa5e6c8d71c9487a3da03", 67268), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("bd912b8f7b092f81fc94ee9f3b769e57ecbb1a2443bfce7d405d2ad0c48c04b4", 65700), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("f2d4a4c114f8e7ad762e764046f117bf954b1ba7797bbe6b6d754decc9bdbf99", 62328), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("01804c5bcb6aedbda393491d82c14328987c7fb66a6ef8c8313aed5d683d3dad", 60620)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Alegreya", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alegreyaTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alegreya({textStyle: textTheme.overline})});
    }
    static alegreyaSc(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("7449fd0507a0808ae452506eb8fb2fb46b4abe72f8f5d982b25c963ba93bc094", 72748), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("6b36a9c6614f3cea8c2846f74b6823f8d3c5edd8a8b2319eccae142e3bb42738", 73048), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("16e159f79c1929fa884f232e47d45cb0cc16a55a22b127359024868245f4a2d4", 71836), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("6920f9042274d5d0b37753d233b86c7066a47d1cb94015d70ecbb9a76359faa7", 72428), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("d591a36a0d78f0315b16c23983d84d6d8b4bbf8ea5b5879019cad423941d5990", 70500), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("d312d023b86792b3a0f7cd9594498720cdb9feb7bec946d75a3f25f6580c19c7", 71700)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AlegreyaSC", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alegreyaScTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alegreyaSc({textStyle: textTheme.overline})});
    }
    static alegreyaSans(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w100, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("4e4fc2370a575c44ada0a88565af306c9e5f6f863cd3e594f68fbecb64d6eb45", 86800), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w100, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("dfad029fd95bc8e1e6f4aff5ca9a40f7ee01b7c42436068b1a609af1036de968", 75952), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("f413bb7452d6c3127865026e765917685dde894f8130417ee32c5c22d3332a5a", 88928), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("53c675ca8ca26437bfdef9475e6be6a31d8f390904f2a25dc7f71ecacf749525", 76244), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("5186af372dbc9306a0390c6a53c2b3ed7e398bf7e19390e4115779d9d4dcb9e0", 90044), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("a1cf80b2ffea7f7a74c290c886e0853612aa20f2f2942a11b6221973a8b1125a", 75740), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w500, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("b54080b02a55195adec0aed32ecb384095ddfef221504059e15682a59709d9a5", 90304), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w500, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("16b83ef0510db5d9b7adeb15a6bf505975df75012e3f04118c8384165bae4c4f", 75644), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("baf6cfdcdaeaff8ae1997ba5a87f7c43b4823b8e094097eb354fdaeb531c610e", 90308), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("c3ea4ab25245b87d94c68e797ee68e472bf893023027f57d0dfb6aef204e650d", 75464), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w800, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("2313ece3a1be01342c2f2b902904ce864b05c9ecf3a72e96580c84ed124b370c", 90492), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w800, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("296f24dc4713815e4ea5f25a60e938c00c6d94678ba90f140c4c4dcd5d3dae42", 75552), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("c1ae94a74aa4998c1ed777107095512b795dd19783a838e9eaffca2382405bf3", 90324), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("63fa7d406f209d33ac9020dc3209f61bda016b2e851b369e2475f6c77bd65111", 75748)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AlegreyaSans", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alegreyaSansTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alegreyaSans({textStyle: textTheme.overline})});
    }
    static alegreyaSansSc(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w100, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("7f5b4f9e7531121c2163e92598f24222cdef538a04352553731f0c81f69c4227", 77260), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w100, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("1a8c6b334dbb0663e1b509d268363d557f9d231f702c2fb6ffe0727c0bb374b5", 67308), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("0d94b7e8e30244280988269fbefbf776d08ff9ad0be6df4f620a6a5b7e0362f0", 79488), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("ccd17db40859ba985ad048cea705168d600d36d89c00086787c0e0c4b3d82350", 67492), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("2487f405a054a83c784021b2c8e860860b9243fb34fc64b7a5fd2250d68bf4f9", 80884), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("b427017865c854fea91f74c2c65b73010299f090c4ce77e0854fac9a1de8bc0a", 67168), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w500, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("edb603dab26042252c435e746201e0f2f353dd09865130082f25072fb0969e0b", 81296), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w500, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("de77ecc3bedb1b421aebae8d44d23fc290cb7f252c8cd7eea6cc478ee69e13ec", 67248), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("c46b10c450739d774b11b6e3d2f51e421d416b9a8174d249ad85973c5018894c", 81476), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("16e2233f43d03898a785024de868496150dfcba5754cec33d4e349b92c857453", 67060), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w800, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("356b90a20e5818313f51f03a05985f5c63745944a01aa92b78804caa0b7a4268", 81900), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w800, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("85eb333661be027f374e08a28cc4b0c394fa0052fc64197c5a96409168532e87", 67216), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("41a1bac96732155ce8415a0155d80de58383ab4223de540ad68c383f51b3cb5e", 81560), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w900, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("7100fdd6d991e596021a3bc2578fd4eb74fb5bd5d7dfc6c30dcde981e6a27281", 67304)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AlegreyaSansSC", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alegreyaSansScTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alegreyaSansSc({textStyle: textTheme.overline})});
    }
    static aleo(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("8844034f7614859b836238cb530853c190b011335edbfc9fd9dbb15669134bcb", 35800), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("9d41d1b8e554c18ef31b39cd96576f58048ab1dacd1e03dd349c3f471917ab43", 45124), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("4124c4a19546d618079ccad928418735907b0eff5c68a0faf16b8fd3ec1d5bc2", 65892), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("7662bf685a6bddd2908c8392229aac54817f3666c9915cec596880a13eef66c9", 68788), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("d20df7d3bc69a847115b4c7f6de4db4d8aa878a8ad3ccc70a83b9beb9d29826c", 60744), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.italic}), new google_fonts_descriptor.GoogleFontsFile.new("0277e97f9c04c3812b3987b151b56953251d09574f7f649b461074b2439a4026", 64516)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Aleo", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static aleoTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.aleo({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.aleo({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.aleo({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.aleo({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.aleo({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.aleo({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.aleo({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.aleo({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.aleo({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.aleo({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.aleo({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.aleo({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.aleo({textStyle: textTheme.overline})});
    }
    static alexBrush(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("eb8044f112b9878ec59f0825d91a9f011fc4925ce2272737c02ce2be161c3efd", 48660)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AlexBrush", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alexBrushTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alexBrush({textStyle: textTheme.overline})});
    }
    static alfaSlabOne(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("7da478a94cb0f5cdf81dc70a08204fc3d9b097463f65a9108151851580dd9151", 64824)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AlfaSlabOne", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alfaSlabOneTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alfaSlabOne({textStyle: textTheme.overline})});
    }
    static alice(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("b09d7119f6ceba6b3b798683927d8bd51757498f4af762dc4509d1c76aafc6a3", 95148)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Alice", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static aliceTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alice({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alice({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alice({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alice({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alice({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alice({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alice({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alice({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alice({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alice({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alice({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alice({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alice({textStyle: textTheme.overline})});
    }
    static alike(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("b9683edf916072397bd15b9b312ff78533f85b4ac5598b5867733fb5670ed534", 64584)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Alike", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alikeTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alike({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alike({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alike({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alike({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alike({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alike({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alike({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alike({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alike({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alike({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alike({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alike({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alike({textStyle: textTheme.overline})});
    }
    static alikeAngular(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("0ae146a31a48840c579bbeefc31597a7c9b385c626ef8387ad461aeea8432452", 97120)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AlikeAngular", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alikeAngularTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.alikeAngular({textStyle: textTheme.overline})});
    }
    static allan(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("83a268d06857cada4246725e7cc04eb4d7b87d19e6d4f44e745d33be739852fb", 40992), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("b309341937b6f2a1893638c71f9877c70c658e6461e5b18011f9ab7f2782adc9", 95644)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Allan", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static allanTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.allan({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.allan({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.allan({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.allan({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.allan({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.allan({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.allan({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.allan({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.allan({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.allan({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.allan({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.allan({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.allan({textStyle: textTheme.overline})});
    }
    static allerta(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("df4ce73d43a2a1eb976d66944a0555b8ab45b8848b9e9be9355d0f68a9373270", 18844)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Allerta", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static allertaTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.allerta({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.allerta({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.allerta({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.allerta({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.allerta({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.allerta({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.allerta({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.allerta({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.allerta({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.allerta({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.allerta({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.allerta({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.allerta({textStyle: textTheme.overline})});
    }
    static allertaStencil(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("d43b315a156fb147d0bcd2dad6a682e5a23d388f0d12365c29c2d46fbf1e2c96", 19512)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "AllertaStencil", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static allertaStencilTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.allertaStencil({textStyle: textTheme.overline})});
    }
    static allura(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("32adf6de6bc3ee14bedf4674a1020492d2c2e4a939883aa672ff9a31777f63ed", 88036)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Allura", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static alluraTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.allura({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.allura({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.allura({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.allura({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.allura({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.allura({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.allura({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.allura({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.allura({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.allura({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.allura({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.allura({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.allura({textStyle: textTheme.overline})});
    }
    static almarai(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let foreground = opts && 'foreground' in opts ? opts.foreground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let shadows = opts && 'shadows' in opts ? opts.shadows : null;
      let fontFeatures = opts && 'fontFeatures' in opts ? opts.fontFeatures : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
      let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
      let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
      let fonts = new (T.LinkedMapOfGoogleFontsVariant$GoogleFontsFile()).from([new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w300, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("d65c40f0692b45d73302895b80e837f57f1b4e69a5d3255c3f186919eab23780", 85828), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w400, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("1b22529a81e051312110ae38c450d9b4f5474030f2275dc4574f26c8fcf5318e", 85912), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w700, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("6cf3b7ecc9ac853f7071684fc5dfb22dd3a13f41901fee6aeb54cd9cc81d1126", 85696), new google_fonts_variant.GoogleFontsVariant.new({fontWeight: ui.FontWeight.w800, fontStyle: ui.FontStyle.normal}), new google_fonts_descriptor.GoogleFontsFile.new("55d68f8e4adef1c44ed2dbc154537092c330112b9ac46a94338e58f08f02bcb6", 86588)]);
      return google_fonts_base.googleFontsTextStyle({textStyle: textStyle, fontFamily: "Almarai", color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, fonts: fonts});
    }
    static almaraiTextTheme(textTheme = null) {
      textTheme == null ? textTheme = theme_data.ThemeData.light().textTheme : null;
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.almarai({textStyle: textTheme.headline1}), headline2: google_fonts.GoogleFonts.almarai({textStyle: textTheme.headline2}), headline3: google_fonts.GoogleFonts.almarai({textStyle: textTheme.headline3}), headline4: google_fonts.GoogleFonts.almarai({textStyle: textTheme.headline4}), headline5: google_fonts.GoogleFonts.almarai({textStyle: textTheme.headline5}), headline6: google_fonts.GoogleFonts.almarai({textStyle: textTheme.headline6}), subtitle1: google_fonts.GoogleFonts.almarai({textStyle: textTheme.subtitle1}), subtitle2: google_fonts.GoogleFonts.almarai({textStyle: textTheme.subtitle2}), bodyText1: google_fonts.GoogleFonts.almarai({textStyle: textTheme.bodyText1}), bodyText2: google_fonts.GoogleFonts.almarai({textStyle: textTheme.bodyText2}), caption: google_fonts.GoogleFonts.almarai({textStyle: textTheme.caption}), button: google_fonts.GoogleFonts.almarai({textStyle: textTheme.button}), overline: google_fonts.GoogleFonts.almarai({textStyle: textTheme.overline})});
    }
    static almendra(opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let fontS